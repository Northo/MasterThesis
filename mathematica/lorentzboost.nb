(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    487198,       9609]
NotebookOptionsPosition[    474094,       9370]
NotebookOutlinePosition[    474533,       9387]
CellTagsIndexPosition[    474490,       9384]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"H", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"wp", " ", 
       RowBox[{"(", "qx", ")"}]}], " ", "+", " ", 
      RowBox[{"wpp", " ", "kz"}]}], ")"}], 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}], " ", "+", " ", 
   RowBox[{"vy", " ", "ky", " ", 
    RowBox[{"PauliMatrix", "[", "2", "]"}]}], " ", "+", " ", 
   RowBox[{"vz", " ", "kz", " ", 
    RowBox[{"PauliMatrix", "[", "3", "]"}]}], " ", "+", " ", 
   RowBox[{"vx", " ", "qx", " ", 
    RowBox[{"PauliMatrix", "[", "1", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8534904160736647`*^9, 3.853490447832944*^9}, {
  3.8534905023384438`*^9, 3.8534905026262836`*^9}, {3.853564797386793*^9, 
  3.853564803161799*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"fe32b68f-c555-401a-aec6-5e5b83e26357"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"kz", " ", "vz"}], "+", 
      RowBox[{"qx", " ", "wp"}], "+", 
      RowBox[{"kz", " ", "wpp"}]}], ",", 
     RowBox[{
      RowBox[{"qx", " ", "vx"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qx", " ", "vx"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "kz"}], " ", "vz"}], "+", 
      RowBox[{"qx", " ", "wp"}], "+", 
      RowBox[{"kz", " ", "wpp"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853490448514325*^9, 3.8534905030406027`*^9, 3.8535636718163147`*^9, {
   3.8535648037239933`*^9, 3.853564823349021*^9}, 3.853904554986311*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"fb3710c4-5921-4ce9-b61d-1708367c8d52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.853490460705525*^9, 3.853490462650354*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"24503a30-58f3-43f0-ae73-cc1199392e60"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"kz", " ", "vz"}], "+", 
       RowBox[{"qx", " ", "wp"}], "+", 
       RowBox[{"kz", " ", "wpp"}]}], 
      RowBox[{
       RowBox[{"qx", " ", "vx"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}]},
     {
      RowBox[{
       RowBox[{"qx", " ", "vx"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "kz"}], " ", "vz"}], "+", 
       RowBox[{"qx", " ", "wp"}], "+", 
       RowBox[{"kz", " ", "wpp"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.853490463094831*^9, 3.853563671956736*^9, 
  3.853564823387661*^9, 3.8539045550762777`*^9},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"44b4ff74-6986-4e0a-bf9d-\
7f3fdd4e15f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "=", 
  RowBox[{"MatrixExp", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "/", "2"}], " ", 
    RowBox[{"PauliMatrix", "[", "1", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8534904756824923`*^9, 3.853490498266111*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"18a7e7ef-62f2-4708-95b2-3f07d0638d1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8534904926052437`*^9, 3.853490498512177*^9}, 
   3.853563671984961*^9, 3.85356482341221*^9, 3.853904555098989*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"b5959570-58e0-4d3e-b55f-b5088cba4eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tanh", "[", 
  RowBox[{"Log", "[", 
   RowBox[{"sgn", 
    FractionBox[
     SqrtBox[
      RowBox[{"vx", "-", "wp"}]], 
     SqrtBox[
      RowBox[{"vx", "+", "wp"}]]]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.853565789333539*^9, 3.853565796900037*^9}, {
  3.853571090672598*^9, 3.853571105936948*^9}, {3.853571177505872*^9, 
  3.853571180272356*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"43437e67-6416-4551-853f-9a3009c623af"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["sgn", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"vx", "-", "wp"}], ")"}]}], 
    RowBox[{"vx", "+", "wp"}]]}], 
  RowBox[{"1", "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["sgn", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"vx", "-", "wp"}], ")"}]}], 
    RowBox[{"vx", "+", "wp"}]]}]]], "Output",
 CellChangeTimes->{
  3.853565797308639*^9, {3.853571097823646*^9, 3.853571106353443*^9}, 
   3.8535711811664333`*^9, 3.8539045551241093`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"6e63c915-d3a7-4c6f-8974-781716f0d129"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sgn", "->", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sgn", "->", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8535711852331953`*^9, 3.85357120656033*^9}},
 NumberMarks->False,
 CellLabel->"In[9]:=",ExpressionUUID->"f876be9b-5132-437e-9b04-b1d19058f06f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["wp", "vx"]}], ",", 
   RowBox[{"-", 
    FractionBox["wp", "vx"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.853565799878263*^9, 3.853571206994752*^9, 
  3.853904555148117*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f9c7750b-eaee-4789-a1f2-05802be55c0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "R", "]"}]], "Input",
 CellChangeTimes->{{3.8535636647213173`*^9, 3.853563687830112*^9}, {
  3.8535637309426327`*^9, 3.853563755198695*^9}, {3.8535638370159483`*^9, 
  3.853563839678648*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"cadbc6e8-d0f2-45d4-a26e-1ea29a56eb15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cosh", "[", 
      FractionBox["\[Theta]", "2"], "]"}], ",", 
     RowBox[{"Sinh", "[", 
      FractionBox["\[Theta]", "2"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sinh", "[", 
      FractionBox["\[Theta]", "2"], "]"}], ",", 
     RowBox[{"Cosh", "[", 
      FractionBox["\[Theta]", "2"], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.85390455517207*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"8ffdd65a-23a6-4643-9375-1c11cfff8244"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cosh", "[", 
       FractionBox["\[Theta]", "2"], "]"}], ",", 
      RowBox[{"Sinh", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sinh", "[", 
       FractionBox["\[Theta]", "2"], "]"}], ",", 
      RowBox[{"Cosh", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}], "}"}]}], "}"}], "FullSimplify"}]
  ], "Input",
 CellChangeTimes->{{3.8539045469529333`*^9, 3.8539045469557953`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"4d0ba729-4ea5-466d-89d3-a24a7861d43d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FullSimplify", " ", 
      RowBox[{"Cosh", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}], ",", 
     RowBox[{"FullSimplify", " ", 
      RowBox[{"Sinh", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FullSimplify", " ", 
      RowBox[{"Sinh", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}], ",", 
     RowBox[{"FullSimplify", " ", 
      RowBox[{"Cosh", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8539045551993303`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"ea6fa23a-fc53-4038-b77a-0e5876b516f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"R", ".", "H", ".", "R"}], "-", 
     RowBox[{"Engy", " ", 
      RowBox[{"R", ".", "R"}]}]}], "/.", 
    RowBox[{"\[Theta]", "->", 
     RowBox[{"Log", "[", 
      FractionBox[
       SqrtBox[
        RowBox[{"vx", "-", "wp"}]], 
       SqrtBox[
        RowBox[{"vx", "+", "wp"}]]], "]"}]}]}], "//", "FullSimplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.853563950567911*^9, 3.853563988981905*^9}, {
   3.8535642691999283`*^9, 3.853564300520252*^9}, 3.853564754173551*^9, {
   3.8539046908704643`*^9, 3.853904695422316*^9}, 3.853905263445846*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"71ad8cc6-067b-4725-9fe4-3b476e6f8da1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "Engy"}], " ", "vx"}], "+", 
        RowBox[{"kz", " ", "vz", " ", 
         SqrtBox[
          RowBox[{"vx", "-", "wp"}]], " ", 
         SqrtBox[
          RowBox[{"vx", "+", "wp"}]]}], "+", 
        RowBox[{"kz", " ", "vx", " ", "wpp"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"Engy", " ", "wp"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy", " ", 
         SqrtBox[
          RowBox[{"vx", "-", "wp"}]], " ", 
         SqrtBox[
          RowBox[{"vx", "+", "wp"}]]}], "+", 
        RowBox[{"qx", " ", 
         RowBox[{"(", 
          RowBox[{"vx", "-", "wp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"vx", "+", "wp"}], ")"}]}], "-", 
        RowBox[{"kz", " ", "wp", " ", "wpp"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Engy", " ", "wp"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy", " ", 
         SqrtBox[
          RowBox[{"vx", "-", "wp"}]], " ", 
         SqrtBox[
          RowBox[{"vx", "+", "wp"}]]}], "+", 
        RowBox[{"qx", " ", 
         RowBox[{"(", 
          RowBox[{"vx", "-", "wp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"vx", "+", "wp"}], ")"}]}], "-", 
        RowBox[{"kz", " ", "wp", " ", "wpp"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "Engy"}], " ", "vx"}], "-", 
        RowBox[{"kz", " ", "vz", " ", 
         SqrtBox[
          RowBox[{"vx", "-", "wp"}]], " ", 
         SqrtBox[
          RowBox[{"vx", "+", "wp"}]]}], "+", 
        RowBox[{"kz", " ", "vx", " ", "wpp"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.853563990139863*^9, {3.853564282695734*^9, 3.853564300916108*^9}, 
   3.8535647563538637`*^9, {3.8535648105985622`*^9, 3.8535648234463987`*^9}, 
   3.853904555435953*^9, 3.853904696280634*^9, {3.8539052521449003`*^9, 
   3.85390526907263*^9}},
 CellLabel->
  "Out[28]//MatrixForm=",ExpressionUUID->"85b772a4-f66c-4c79-abcc-\
b22fcb7edc87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.853904558452897*^9, 3.853904562851409*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"e842674a-ffae-4e57-85ee-119b387d719c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"kz", " ", "vz"}], "-", 
      FractionBox[
       RowBox[{"Engy", " ", "vx"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], "+", 
      FractionBox[
       RowBox[{"kz", " ", "vx", " ", "wpp"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "ky", " ", "vy"}], "+", 
      FractionBox[
       RowBox[{"qx", " ", 
        SuperscriptBox["vx", "2"]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], "+", 
      FractionBox[
       RowBox[{"Engy", " ", "wp"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], "-", 
      FractionBox[
       RowBox[{"qx", " ", 
        SuperscriptBox["wp", "2"]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], "-", 
      FractionBox[
       RowBox[{"kz", " ", "wp", " ", "wpp"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}], "+", 
      FractionBox[
       RowBox[{"qx", " ", 
        SuperscriptBox["vx", "2"]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], "+", 
      FractionBox[
       RowBox[{"Engy", " ", "wp"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], "-", 
      FractionBox[
       RowBox[{"qx", " ", 
        SuperscriptBox["wp", "2"]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], "-", 
      FractionBox[
       RowBox[{"kz", " ", "wp", " ", "wpp"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "kz"}], " ", "vz"}], "-", 
      FractionBox[
       RowBox[{"Engy", " ", "vx"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], "+", 
      FractionBox[
       RowBox[{"kz", " ", "vx", " ", "wpp"}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853904563189913*^9, 3.853904698332658*^9, {3.853905252185727*^9, 
   3.8539052691123323`*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"e7e6198e-7adb-4e43-aa6e-8845b886c89d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"vx", "-", "wp"}], "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{"vx", "+", "wp"}], "]"}]}], ")"}]}], "->", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"vx", " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"\[Beta]", "^", "2"}]}], "]"}]}], ")"}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.8539045878448563`*^9, 3.853904644181293*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"964f9686-9f0d-47ce-a87c-4a9f793c2481"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"kz", " ", "vz"}], "-", 
      FractionBox["Engy", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Beta]", "2"]}]]], "+", 
      FractionBox[
       RowBox[{"kz", " ", "wpp"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Beta]", "2"]}]]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "ky", " ", "vy"}], "+", 
      FractionBox[
       RowBox[{"qx", " ", "vx"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Beta]", "2"]}]]], "+", 
      FractionBox[
       RowBox[{"Engy", " ", "wp"}], 
       RowBox[{"vx", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]}]], "-", 
      FractionBox[
       RowBox[{"qx", " ", 
        SuperscriptBox["wp", "2"]}], 
       RowBox[{"vx", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]}]], "-", 
      FractionBox[
       RowBox[{"kz", " ", "wp", " ", "wpp"}], 
       RowBox[{"vx", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}], "+", 
      FractionBox[
       RowBox[{"qx", " ", "vx"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Beta]", "2"]}]]], "+", 
      FractionBox[
       RowBox[{"Engy", " ", "wp"}], 
       RowBox[{"vx", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]}]], "-", 
      FractionBox[
       RowBox[{"qx", " ", 
        SuperscriptBox["wp", "2"]}], 
       RowBox[{"vx", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]}]], "-", 
      FractionBox[
       RowBox[{"kz", " ", "wp", " ", "wpp"}], 
       RowBox[{"vx", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "kz"}], " ", "vz"}], "-", 
      FractionBox["Engy", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Beta]", "2"]}]]], "+", 
      FractionBox[
       RowBox[{"kz", " ", "wpp"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Beta]", "2"]}]]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8539046450956984`*^9, 3.853904703032735*^9, {3.85390525220955*^9, 
   3.8539052691336727`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"23cad1e7-c2d2-461c-a7c9-690f2fd9540b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.853904706126593*^9, 3.853904706302167*^9}},
 NumberMarks->False,
 CellLabel->"In[31]:=",ExpressionUUID->"4b6aef18-da1e-4d90-bc46-c8d5ae5c472b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"kz", " ", "vz"}], "-", 
       FractionBox["Engy", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]], "+", 
       FractionBox[
        RowBox[{"kz", " ", "wpp"}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "ky", " ", "vy"}], "+", 
       FractionBox[
        RowBox[{"qx", " ", "vx"}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]], "+", 
       FractionBox[
        RowBox[{"Engy", " ", "wp"}], 
        RowBox[{"vx", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[Beta]", "2"]}]]}]], "-", 
       FractionBox[
        RowBox[{"qx", " ", 
         SuperscriptBox["wp", "2"]}], 
        RowBox[{"vx", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[Beta]", "2"]}]]}]], "-", 
       FractionBox[
        RowBox[{"kz", " ", "wp", " ", "wpp"}], 
        RowBox[{"vx", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[Beta]", "2"]}]]}]]}]},
     {
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}], "+", 
       FractionBox[
        RowBox[{"qx", " ", "vx"}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]], "+", 
       FractionBox[
        RowBox[{"Engy", " ", "wp"}], 
        RowBox[{"vx", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[Beta]", "2"]}]]}]], "-", 
       FractionBox[
        RowBox[{"qx", " ", 
         SuperscriptBox["wp", "2"]}], 
        RowBox[{"vx", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[Beta]", "2"]}]]}]], "-", 
       FractionBox[
        RowBox[{"kz", " ", "wp", " ", "wpp"}], 
        RowBox[{"vx", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[Beta]", "2"]}]]}]]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "kz"}], " ", "vz"}], "-", 
       FractionBox["Engy", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]], "+", 
       FractionBox[
        RowBox[{"kz", " ", "wpp"}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Beta]", "2"]}]]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8539046485716047`*^9, 3.853904706649699*^9, {3.853905252235127*^9, 
   3.853905269154873*^9}},
 CellLabel->
  "Out[31]//MatrixForm=",ExpressionUUID->"910a25c2-9c48-4797-844a-\
0b8423e97afc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.853904714823449*^9, 3.853904727782793*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"a85acb9b-d404-4743-9451-3583ffb2e2bf"],

Cell["\<\
\\left(
\\begin{array}{cc}
 \\frac{\\text{Engy}}{\\sqrt{1-\\beta
   ^2}}+\\text{kz} \\text{vz}-\\frac{\\text{kz}
   \\text{wpp}}{\\sqrt{1-\\beta ^2}} &
   -\\frac{\\text{Engy} \\text{wp}}{\\sqrt{1-\\beta
   ^2} \\text{vx}}-i \\text{ky}
   \\text{vy}+\\frac{\\text{kz} \\text{wp}
   \\text{wpp}}{\\sqrt{1-\\beta ^2}
   \\text{vx}}-\\frac{\\text{qx}
   \\text{vx}}{\\sqrt{1-\\beta
   ^2}}+\\frac{\\text{qx}
   \\text{wp}^2}{\\sqrt{1-\\beta ^2} \\text{vx}}
   \\\\
 -\\frac{\\text{Engy} \\text{wp}}{\\sqrt{1-\\beta
   ^2} \\text{vx}}+i \\text{ky}
   \\text{vy}+\\frac{\\text{kz} \\text{wp}
   \\text{wpp}}{\\sqrt{1-\\beta ^2}
   \\text{vx}}-\\frac{\\text{qx}
   \\text{vx}}{\\sqrt{1-\\beta
   ^2}}+\\frac{\\text{qx}
   \\text{wp}^2}{\\sqrt{1-\\beta ^2} \\text{vx}} &
   \\frac{\\text{Engy}}{\\sqrt{1-\\beta
   ^2}}-\\text{kz} \\text{vz}-\\frac{\\text{kz}
   \\text{wpp}}{\\sqrt{1-\\beta ^2}} \\\\
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.853904728120315*^9},
 CellLabel->
  "Out[23]//TeXForm=",ExpressionUUID->"38220ff6-cd42-4636-a800-38294a31264b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", "%", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.853563992199687*^9, 3.853563999343721*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"1c49f04b-a137-41c3-bc78-733d3142d4b3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"kz", " ", 
       RowBox[{"(", 
        RowBox[{"vz", "-", 
         FractionBox[
          RowBox[{"vx", " ", "wpp"}], 
          RowBox[{
           SqrtBox[
            RowBox[{"vx", "-", "wp"}]], " ", 
           SqrtBox[
            RowBox[{"vx", "+", "wp"}]]}]]}], ")"}]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "ky", " ", "vy", " ", 
         SqrtBox[
          RowBox[{"vx", "-", "wp"}]], " ", 
         SqrtBox[
          RowBox[{"vx", "+", "wp"}]]}], "+", 
        RowBox[{"qx", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["vx", "2"]}], "+", 
           SuperscriptBox["wp", "2"]}], ")"}]}], "+", 
        RowBox[{"kz", " ", "wp", " ", "wpp"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy", " ", 
         SqrtBox[
          RowBox[{"vx", "-", "wp"}]], " ", 
         SqrtBox[
          RowBox[{"vx", "+", "wp"}]]}], "+", 
        RowBox[{"qx", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["vx", "2"]}], "+", 
           SuperscriptBox["wp", "2"]}], ")"}]}], "+", 
        RowBox[{"kz", " ", "wp", " ", "wpp"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"vx", "-", "wp"}]], " ", 
        SqrtBox[
         RowBox[{"vx", "+", "wp"}]]}]], 
      RowBox[{"kz", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "vz"}], "-", 
         FractionBox[
          RowBox[{"vx", " ", "wpp"}], 
          RowBox[{
           SqrtBox[
            RowBox[{"vx", "-", "wp"}]], " ", 
           SqrtBox[
            RowBox[{"vx", "+", "wp"}]]}]]}], ")"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.853563999916602*^9, 3.8535648234814997`*^9},
 CellLabel->
  "Out[48]//MatrixForm=",ExpressionUUID->"05d427cb-3dec-4533-972d-\
f73b8e3032d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"R", ".", 
   RowBox[{"PauliMatrix", "[", "1", "]"}], ".", "R"}], "]"}]], "Input",
 CellChangeTimes->{{3.853563852999949*^9, 3.853563860398509*^9}, {
  3.853564133535634*^9, 3.85356413381497*^9}, {3.85356416431111*^9, 
  3.853564171006279*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"5935140b-1b68-4d45-859a-e9ec8a6d2a32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "\[Theta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Theta]"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "\[Theta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Theta]"}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "\[Theta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Theta]"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "\[Theta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Theta]"}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.853564171294795*^9, 3.8535648234878063`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"bf9ac751-c4f3-45dc-83fd-0134dd600432"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.85356386289598*^9, 3.853563867366117*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"548648a8-bd95-43e1-b739-05aafa9d1cd3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cosh", "[", "\[Theta]", "]"}], "-", 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "+", 
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cosh", "[", "\[Theta]", "]"}], "-", 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "+", 
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cosh", "[", "\[Theta]", "]"}], "-", 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "+", 
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cosh", "[", "\[Theta]", "]"}], "-", 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "+", 
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.853563867723506*^9, 3.853564140260623*^9, 
  3.853564174525874*^9, 3.853564823520928*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"108545ac-1d93-4048-95b1-266aaaa54638"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ExpToTrig", "[", 
     RowBox[{"R", ".", 
      RowBox[{"PauliMatrix", "[", "i", "]"}], ".", "R"}], "]"}], "//", 
    "MatrixForm"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "0", ",", " ", "3"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8535695022226677`*^9, 3.853569569582511*^9}, {
  3.853570353856015*^9, 3.8535703541506157`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"f62f993f-7940-469d-8710-aa31552ed307"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "^", "2"}], " ", "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.853904228732226*^9, 3.853904241807107*^9}, {
  3.8539043424327717`*^9, 3.853904391480157*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ba1c82e1-915c-4fe6-b0b0-d154978e2a9a"],

Cell["\\alpha ^2", "Output",
 CellChangeTimes->{{3.8535695048133173`*^9, 3.8535695698930397`*^9}, 
   3.853570354545247*^9, 3.8535705118072844`*^9, 3.853904244297574*^9, 
   3.853904344345262*^9, {3.853904382520928*^9, 3.8539043917826*^9}},
 CellLabel->
  "Out[4]//TeXForm=",ExpressionUUID->"db88b0bf-4ac8-4e15-88ff-845c4b0ca1e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.853570505567895*^9, 3.8535705082312317`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"75193bd4-c9b0-4d7c-afcd-edf7da7d87b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Cosh", "[", "\[Theta]", "]"}], 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]},
       {
        RowBox[{"Sinh", "[", "\[Theta]", "]"}], 
        RowBox[{"Cosh", "[", "\[Theta]", "]"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Sinh", "[", "\[Theta]", "]"}], 
        RowBox[{"Cosh", "[", "\[Theta]", "]"}]},
       {
        RowBox[{"Cosh", "[", "\[Theta]", "]"}], 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.85357050855431*^9, 3.8535705137185698`*^9}},
 CellLabel->
  "Out[130]=",ExpressionUUID->"e5758219-d50b-41eb-ad7b-aba8a32060fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"R", ".", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}], ".", "R"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.853564350113161*^9, 3.853564361568853*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"b948a618-3046-459a-b084-a6c5cd2a1a7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cosh", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sinh", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.85356435481308*^9, 3.853564361974428*^9}, 
   3.853564823544327*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"9f3aefa1-c841-47a8-a7be-31a3ed6a6c6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"R", ".", 
    RowBox[{"PauliMatrix", "[", "1", "]"}], ".", "R"}], "==", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cosh", "[", "\[Theta]", "]"}], ",", " ", 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sinh", "[", "\[Theta]", "]"}], ",", " ", 
        RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ".", 
    RowBox[{"PauliMatrix", "[", "1", "]"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.853564428585884*^9, 3.853564470481488*^9}, {
  3.853564528289691*^9, 3.8535645305530167`*^9}, {3.853564656674469*^9, 
  3.853564665962384*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"64006aca-f568-4fe4-b463-e9e923a73b0f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8535644709600058`*^9, 3.853564534187895*^9, {3.853564659756885*^9, 
   3.853564666342136*^9}, 3.8535648235710917`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"87c59df1-8510-471a-bcad-017bc4ab642b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Rot", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cosh", "[", "\[Theta]", "]"}], ",", " ", 
      RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sinh", "[", "\[Theta]", "]"}], ",", " ", 
      RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"HamPart", "=", 
  RowBox[{
   RowBox[{"wp", " ", "Rot"}], " ", "+", " ", 
   RowBox[{"vx", " ", 
    RowBox[{"Rot", ".", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"HamPart", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], ",", " ", "\[Theta]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.853564682163064*^9, 3.853564741593851*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"c1930a6d-e6a2-4b95-8c39-c538b5297e10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cosh", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sinh", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.853564715968449*^9, 3.853564741892494*^9}, 
   3.853564823601119*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"509d35c2-8341-4c3e-a98a-d44515cac24d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"wp", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"vx", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"vx", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"wp", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"vx", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"wp", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"wp", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"vx", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.853564715968449*^9, 3.853564741892494*^9}, 
   3.853564823604664*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"2ad355f2-bbe1-4c76-8ad5-3d40583d690b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}], "+", 
         RowBox[{"Log", "[", 
           RowBox[{"-", 
             FractionBox[
              SqrtBox[
               RowBox[{"vx", "-", "wp"}]], 
              SqrtBox[
               RowBox[{"vx", "+", "wp"}]]]}], "]"}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}], "+", 
         RowBox[{"Log", "[", 
           FractionBox[
            SqrtBox[
             RowBox[{"vx", "-", "wp"}]], 
            SqrtBox[
             RowBox[{"vx", "+", "wp"}]]], "]"}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.853564715968449*^9, 3.853564741892494*^9}, 
   3.853564823608115*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"7ce66038-151a-4212-aff7-bfd2f21a7b10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["HamPart"], "Input",
 CellChangeTimes->{{3.8535708373284082`*^9, 3.853570838375618*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"4771cdec-613f-4513-9d61-bb64ab41a872"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"wp", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"vx", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"vx", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"wp", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"vx", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"wp", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"wp", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"vx", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.8535708386955976`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"12a0f5d4-3cdf-438d-8c95-d6636fb03368"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vx", " ", 
      RowBox[{
       RowBox[{"%15", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", 
     RowBox[{"wp", " ", 
      RowBox[{"Cosh", "[", "\[Theta]", "]"}]}]}], "==", "0"}], ",", " ", 
   "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.853563876807417*^9, 3.8535638820386543`*^9}, {
  3.853564186359623*^9, 3.853564244566781*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"f47de474-8562-453b-8c42-cad18d26755f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}], "+", 
         RowBox[{"Log", "[", 
           RowBox[{"-", 
             FractionBox[
              SqrtBox[
               RowBox[{"vx", "-", "wp"}]], 
              SqrtBox[
               RowBox[{"vx", "+", "wp"}]]]}], "]"}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}], "+", 
         RowBox[{"Log", "[", 
           FractionBox[
            SqrtBox[
             RowBox[{"vx", "-", "wp"}]], 
            SqrtBox[
             RowBox[{"vx", "+", "wp"}]]], "]"}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.853563882389324*^9, 3.853564207615633*^9, 
  3.853564245333892*^9, 3.853564823639617*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"d21496d4-4715-4a46-bfd4-097db9b1338f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", ".", "H", ".", "R"}]], "Input",
 CellChangeTimes->{{3.853490500131315*^9, 3.8534905069143543`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"2dff0e7c-0f38-40ba-b438-6f4771886976"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qx", " ", "vx"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "kz"}], " ", "vz"}], "+", 
            RowBox[{"qx", " ", "wp"}], "+", 
            RowBox[{"kz", " ", "wpp"}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qx", " ", "vx"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"kz", " ", "vz"}], "+", 
            RowBox[{"qx", " ", "wp"}], "+", 
            RowBox[{"kz", " ", "wpp"}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qx", " ", "vx"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "kz"}], " ", "vz"}], "+", 
            RowBox[{"qx", " ", "wp"}], "+", 
            RowBox[{"kz", " ", "wpp"}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qx", " ", "vx"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"kz", " ", "vz"}], "+", 
            RowBox[{"qx", " ", "wp"}], "+", 
            RowBox[{"kz", " ", "wpp"}]}], ")"}]}]}], ")"}]}]}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qx", " ", "vx"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "kz"}], " ", "vz"}], "+", 
            RowBox[{"qx", " ", "wp"}], "+", 
            RowBox[{"kz", " ", "wpp"}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qx", " ", "vx"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"kz", " ", "vz"}], "+", 
            RowBox[{"qx", " ", "wp"}], "+", 
            RowBox[{"kz", " ", "wpp"}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qx", " ", "vx"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "kz"}], " ", "vz"}], "+", 
            RowBox[{"qx", " ", "wp"}], "+", 
            RowBox[{"kz", " ", "wpp"}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qx", " ", "vx"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"kz", " ", "vz"}], "+", 
            RowBox[{"qx", " ", "wp"}], "+", 
            RowBox[{"kz", " ", "wpp"}]}], ")"}]}]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8534905095784883`*^9, 3.853564823672422*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"00398f9b-fcac-4e75-a1fb-6868c4b0d805"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"R", ".", "H", ".", "R"}], "]"}]], "Input",
 CellChangeTimes->{{3.853490510954728*^9, 3.853490539914597*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"9e154ef3-3089-4f13-bc9b-156d446890ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"kz", " ", "vz"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qx", " ", "wp"}], "+", 
         RowBox[{"kz", " ", "wpp"}]}], ")"}], " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"qx", " ", "vx", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "ky", " ", "vy"}], "+", 
      RowBox[{"qx", " ", "vx", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qx", " ", "wp"}], "+", 
         RowBox[{"kz", " ", "wpp"}]}], ")"}], " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}], "+", 
      RowBox[{"qx", " ", "vx", " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qx", " ", "wp"}], "+", 
         RowBox[{"kz", " ", "wpp"}]}], ")"}], " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "kz"}], " ", "vz"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qx", " ", "wp"}], "+", 
         RowBox[{"kz", " ", "wpp"}]}], ")"}], " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"qx", " ", "vx", " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.8534905137182713`*^9, 3.853490540865776*^9}, 
   3.853564823978056*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"3f6a7718-bfb3-4095-9b78-018dec268eb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%9", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[59]:=",ExpressionUUID->"df9d7e1c-6371-4669-b998-bac162eb37b0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SuperscriptBox[
         RowBox[{"Cosh", "[", 
          FractionBox["\[Theta]", "2"], "]"}], "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"Sinh", "[", 
          FractionBox["\[Theta]", "2"], "]"}], "2"]}]}]},
     {
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"Cosh", "[", 
          FractionBox["\[Theta]", "2"], "]"}], "2"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"Sinh", "[", 
          FractionBox["\[Theta]", "2"], "]"}], "2"]}]}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.853490546200601*^9, 3.853564824010569*^9},
 CellLabel->
  "Out[59]//MatrixForm=",ExpressionUUID->"37fe08e8-9a3c-44c2-ba80-\
659cdbde6170"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"%58", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", "qx"}], "]"}], " ", "==", 
    " ", "0"}], ",", " ", "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.853490705669792*^9, 3.8534907519015017`*^9}, {
  3.853565693637166*^9, 3.853565696116048*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"097f78d2-da04-49b8-956f-a4caf911b384"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}], "+", 
         RowBox[{"Log", "[", 
           RowBox[{"-", 
             FractionBox[
              SqrtBox[
               RowBox[{"vx", "-", "wp"}]], 
              SqrtBox[
               RowBox[{"vx", "+", "wp"}]]]}], "]"}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}], "+", 
         RowBox[{"Log", "[", 
           FractionBox[
            SqrtBox[
             RowBox[{"vx", "-", "wp"}]], 
            SqrtBox[
             RowBox[{"vx", "+", "wp"}]]], "]"}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.85349071396957*^9, 3.853490720219946*^9}, 
   3.853490752420452*^9, 3.853564824044245*^9, 3.853565696773623*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"05160d52-d70e-4ce3-a703-cee5f470ed8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%15", "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "//", "Flatten"}]], "Input",
 CellChangeTimes->{{3.853491832142199*^9, 3.853491842157259*^9}, {
  3.853491969238199*^9, 3.8534919706776133`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"8e06f77a-f4a1-4dd5-bad1-d3e46c9737e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "\[Theta]"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Theta]"}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "\[Theta]"}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Theta]"}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "\[Theta]"}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Theta]"}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "\[Theta]"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Theta]"}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.853491842528322*^9, 3.853491970978972*^9, 
  3.85356482412603*^9, 3.8535657048468437`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"4141f4a7-c7fd-48c6-8b1f-264a0f303736"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rsolve", "=", 
  RowBox[{"R", "/.", 
   RowBox[{"First", "[", "%44", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8534920894232616`*^9, 3.853492094814313*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"5bad9592-98d1-46a0-b393-8f682fbae538"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"kz\\\", \\\" \\\
\", \\\"vz\\\"}], \\\"+\\\", RowBox[{\\\"qx\\\", \\\" \\\", \\\"wp\\\"}], \
\\\"+\\\", RowBox[{\\\"kz\\\", \\\" \\\", \\\"wpp\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"qx\\\", \\\" \\\", \\\"vx\\\"}], \\\"-\\\", RowBox[{\\\"\
\[ImaginaryI]\\\", \\\" \\\", \\\"ky\\\", \\\" \\\", \\\"vy\\\"}]}]}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"", 2, 112, 4, 
   23396929441261452289, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.853564824191429*^9, 3.853565704891567*^9},
 CellLabel->
  "During evaluation of \
In[112]:=",ExpressionUUID->"baee2f71-18d0-4126-a5a0-9e0af9c2a80f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}]}], "}"}], "/.", 
  "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"kz", " ", "vz"}], "+", 
     RowBox[{"qx", " ", "wp"}], "+", 
     RowBox[{"kz", " ", "wpp"}]}], ",", 
    RowBox[{
     RowBox[{"qx", " ", "vx"}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.8534920951361933`*^9, 3.853564824208276*^9, 
  3.853565704901884*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"27d585a5-df61-4388-98bc-81697e31a347"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "Rsolve", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[113]:=",ExpressionUUID->"181eb763-e8e9-4f06-abcf-54f6eb634ec5"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}]}], "}"}], "/.", 
   "\[VeryThinSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"kz", " ", "vz"}], "+", 
      RowBox[{"qx", " ", "wp"}], "+", 
      RowBox[{"kz", " ", "wpp"}]}], ",", 
     RowBox[{
      RowBox[{"qx", " ", "vx"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}]}], "}"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.853491984126732*^9, 3.8534920979190063`*^9, 
  3.853564824242793*^9, 3.853565704931201*^9},
 CellLabel->
  "Out[113]//MatrixForm=",ExpressionUUID->"68c471dd-1ff7-4c56-933b-\
18867689adc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rsolve", ".", "H", ".", "Rsolve"}]], "Input",
 CellChangeTimes->{{3.853491904525632*^9, 3.853491919540889*^9}, {
  3.853492100998129*^9, 3.853492104886302*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"06ea864c-423e-492f-ac39-f50912a50ad7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}]}], "}"}], "/.", 
    "\[VeryThinSpace]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"kz", " ", "vz"}], "+", 
       RowBox[{"qx", " ", "wp"}], "+", 
       RowBox[{"kz", " ", "wpp"}]}], ",", 
      RowBox[{
       RowBox[{"qx", " ", "vx"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}]}], "}"}]}], ")"}], 
  ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"v", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"w0", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"w0", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"w0", "[", "3", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"v", "[", "1", "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"v", "[", "2", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"v", "[", "1", "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"v", "[", "2", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"k", "[", "3", "]"}]}], " ", 
        RowBox[{"v", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"w0", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"w0", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"w0", "[", "3", "]"}]}]}]}], "}"}]}], "}"}], ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]]}], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}], ",", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "/", "2"}]], "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Theta]", "/", "2"}]], "2"]}]}], "}"}]}], "}"}], "/.", 
    "\[VeryThinSpace]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"kz", " ", "vz"}], "+", 
       RowBox[{"qx", " ", "wp"}], "+", 
       RowBox[{"kz", " ", "wpp"}]}], ",", 
      RowBox[{
       RowBox[{"qx", " ", "vx"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}]}], "}"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.853491907488235*^9, 3.8534919200051823`*^9}, 
   3.853492105153722*^9, 3.853564824280889*^9, 3.853565704963689*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"9ed4eb29-e586-4aeb-9ac0-03b58a80f464"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.853492107232036*^9, 3.8534921114295893`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"ee4d4562-5b7d-452f-90df-c095b02f5c80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         FractionBox["\[Theta]", "2"], "]"}], ",", 
        RowBox[{"Sinh", "[", 
         FractionBox["\[Theta]", "2"], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sinh", "[", 
         FractionBox["\[Theta]", "2"], "]"}], ",", 
        RowBox[{"Cosh", "[", 
         FractionBox["\[Theta]", "2"], "]"}]}], "}"}]}], "}"}], "/.", 
    "\[VeryThinSpace]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"qx", " ", "wp"}], "+", 
       RowBox[{"kz", " ", 
        RowBox[{"(", 
         RowBox[{"vz", "+", "wpp"}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"qx", " ", "vx"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}]}], "}"}]}], ")"}], 
  ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"w0", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"w0", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", "[", "3", "]"}], "+", 
          RowBox[{"w0", "[", "3", "]"}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"v", "[", "1", "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"v", "[", "2", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"v", "[", "1", "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"v", "[", "2", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"w0", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"w0", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"v", "[", "3", "]"}]}], "+", 
          RowBox[{"w0", "[", "3", "]"}]}], ")"}]}]}]}], "}"}]}], "}"}], ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         FractionBox["\[Theta]", "2"], "]"}], ",", 
        RowBox[{"Sinh", "[", 
         FractionBox["\[Theta]", "2"], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sinh", "[", 
         FractionBox["\[Theta]", "2"], "]"}], ",", 
        RowBox[{"Cosh", "[", 
         FractionBox["\[Theta]", "2"], "]"}]}], "}"}]}], "}"}], "/.", 
    "\[VeryThinSpace]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"qx", " ", "wp"}], "+", 
       RowBox[{"kz", " ", 
        RowBox[{"(", 
         RowBox[{"vz", "+", "wpp"}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"qx", " ", "vx"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}]}]}], "}"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.853492112117346*^9, 3.853564824317667*^9, 
  3.853565705002913*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"fece2095-5466-495f-853d-511c9f401da4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"kz", " ", 
       RowBox[{"(", 
        RowBox[{"vz", "-", 
         FractionBox[
          RowBox[{
           SqrtBox["vx"], " ", "wpp"}], 
          SqrtBox[
           RowBox[{"vx", "+", 
            RowBox[{"2", " ", "wp"}]}]]]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "ky", " ", "vy"}], "-", 
       FractionBox[
        RowBox[{
         SqrtBox["vx"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"qx", " ", 
            RowBox[{"(", 
             RowBox[{"vx", "+", 
              RowBox[{"2", " ", "wp"}]}], ")"}]}], "+", 
           RowBox[{"kz", " ", "wpp"}]}], ")"}]}], 
        SqrtBox[
         RowBox[{"vx", "+", 
          RowBox[{"2", " ", "wp"}]}]]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}], "-", 
       FractionBox[
        RowBox[{
         SqrtBox["vx"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"qx", " ", 
            RowBox[{"(", 
             RowBox[{"vx", "+", 
              RowBox[{"2", " ", "wp"}]}], ")"}]}], "+", 
           RowBox[{"kz", " ", "wpp"}]}], ")"}]}], 
        SqrtBox[
         RowBox[{"vx", "+", 
          RowBox[{"2", " ", "wp"}]}]]]}], ",", 
      RowBox[{"kz", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "vz"}], "-", 
         FractionBox[
          RowBox[{
           SqrtBox["vx"], " ", "wpp"}], 
          SqrtBox[
           RowBox[{"vx", "+", 
            RowBox[{"2", " ", "wp"}]}]]]}], ")"}]}]}], "}"}]}], "}"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[116]:=",ExpressionUUID->"3fbe4146-cb8d-4c44-bb4b-3d5e7a92c65e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"kz", " ", 
       RowBox[{"(", 
        RowBox[{"vz", "-", 
         FractionBox[
          RowBox[{
           SqrtBox["vx"], " ", "wpp"}], 
          SqrtBox[
           RowBox[{"vx", "+", 
            RowBox[{"2", " ", "wp"}]}]]]}], ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "ky", " ", "vy"}], "-", 
       FractionBox[
        RowBox[{
         SqrtBox["vx"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"qx", " ", 
            RowBox[{"(", 
             RowBox[{"vx", "+", 
              RowBox[{"2", " ", "wp"}]}], ")"}]}], "+", 
           RowBox[{"kz", " ", "wpp"}]}], ")"}]}], 
        SqrtBox[
         RowBox[{"vx", "+", 
          RowBox[{"2", " ", "wp"}]}]]]}]},
     {
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "ky", " ", "vy"}], "-", 
       FractionBox[
        RowBox[{
         SqrtBox["vx"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"qx", " ", 
            RowBox[{"(", 
             RowBox[{"vx", "+", 
              RowBox[{"2", " ", "wp"}]}], ")"}]}], "+", 
           RowBox[{"kz", " ", "wpp"}]}], ")"}]}], 
        SqrtBox[
         RowBox[{"vx", "+", 
          RowBox[{"2", " ", "wp"}]}]]]}], 
      RowBox[{"kz", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "vz"}], "-", 
         FractionBox[
          RowBox[{
           SqrtBox["vx"], " ", "wpp"}], 
          SqrtBox[
           RowBox[{"vx", "+", 
            RowBox[{"2", " ", "wp"}]}]]]}], ")"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8534921180916243`*^9, 3.853564824352541*^9, 
  3.8535657050325203`*^9},
 CellLabel->
  "Out[116]//MatrixForm=",ExpressionUUID->"2efff665-8d7a-49af-bf53-\
229e47c0ff0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalues", "Section",
 CellChangeTimes->{{3.853498141355153*^9, 
  3.853498156161334*^9}},ExpressionUUID->"94ecfb5a-b019-4c30-94c5-\
67c3bd9b9456"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Array", "[", 
       RowBox[{"w0", ",", " ", "3"}], "]"}], ".", 
      RowBox[{"Array", "[", 
       RowBox[{"k", ",", " ", "3"}], "]"}]}], " ", ")"}], 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Array", "[", 
       RowBox[{"v", ",", "3"}], "]"}], 
      RowBox[{"Array", "[", 
       RowBox[{"k", ",", "3"}], "]"}]}], ")"}], ".", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"PauliMatrix", "[", "i", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "3"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.853498625674036*^9, 3.853498691648899*^9}, {
  3.8534987641844273`*^9, 3.853498796408373*^9}, {3.853498868881484*^9, 
  3.853498871584663*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"887ee126-ad3b-4776-b35e-336995625155"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"k", "[", "3", "]"}], " ", 
       RowBox[{"v", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], " ", 
       RowBox[{"w0", "[", "1", "]"}]}], "+", 
      RowBox[{
       RowBox[{"k", "[", "2", "]"}], " ", 
       RowBox[{"w0", "[", "2", "]"}]}], "+", 
      RowBox[{
       RowBox[{"k", "[", "3", "]"}], " ", 
       RowBox[{"w0", "[", "3", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], " ", 
       RowBox[{"v", "[", "1", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"k", "[", "2", "]"}], " ", 
       RowBox[{"v", "[", "2", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], " ", 
       RowBox[{"v", "[", "1", "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"k", "[", "2", "]"}], " ", 
       RowBox[{"v", "[", "2", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"k", "[", "3", "]"}]}], " ", 
       RowBox[{"v", "[", "3", "]"}]}], "+", 
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], " ", 
       RowBox[{"w0", "[", "1", "]"}]}], "+", 
      RowBox[{
       RowBox[{"k", "[", "2", "]"}], " ", 
       RowBox[{"w0", "[", "2", "]"}]}], "+", 
      RowBox[{
       RowBox[{"k", "[", "3", "]"}], " ", 
       RowBox[{"w0", "[", "3", "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.853498692226221*^9, 3.853498711383499*^9}, {
   3.853498768079261*^9, 3.853498809063511*^9}, 3.853498871941432*^9, 
   3.853499890351297*^9, 3.853499993526284*^9, 3.85356482438722*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"1b875e1c-589a-40c4-ae39-ca0e1b65adcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.853498877081872*^9, 3.8534988797448273`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"09aefc1b-8a30-4fd5-a1d2-584309200a05"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"v", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"w0", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"w0", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"w0", "[", "3", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"v", "[", "1", "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"v", "[", "2", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"v", "[", "1", "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"v", "[", "2", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"k", "[", "3", "]"}]}], " ", 
        RowBox[{"v", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], " ", 
        RowBox[{"w0", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], " ", 
        RowBox[{"w0", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], " ", 
        RowBox[{"w0", "[", "3", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.853498880147607*^9, 3.853499890414651*^9, 
  3.853499993583317*^9, 3.8535648244269533`*^9},
 CellLabel->
  "Out[68]//MatrixForm=",ExpressionUUID->"6b1c33c0-be96-4294-8e2f-\
840b76911a9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigen", "=", 
  RowBox[{"Eigenvalues", "[", "H", "]"}]}]], "Input",
 CellChangeTimes->{{3.853498895306326*^9, 3.853498901921425*^9}, {
  3.853499905435114*^9, 3.853499922626973*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"c6a280f6-fd68-4c3a-af23-4df9ae0c4eb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SqrtBox[
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"k", "[", "1", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"v", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"k", "[", "2", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"v", "[", "2", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"k", "[", "3", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"v", "[", "3", "]"}], "2"]}]}]]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], " ", 
     RowBox[{"w0", "[", "1", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"w0", "[", "2", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"w0", "[", "3", "]"}]}]}], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"k", "[", "1", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"v", "[", "1", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"k", "[", "2", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"v", "[", "2", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"k", "[", "3", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"v", "[", "3", "]"}], "2"]}]}]], "+", 
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], " ", 
     RowBox[{"w0", "[", "1", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], " ", 
     RowBox[{"w0", "[", "2", "]"}]}], "+", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], " ", 
     RowBox[{"w0", "[", "3", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.853498902291206*^9, 3.853499890448645*^9, 
  3.853499993618041*^9, 3.853564824456456*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"0ff97f34-1e50-4d00-b8ff-d1e055ff59f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"eigen", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"k", "[", "2", "]"}], "->", "0"}], ",", 
           RowBox[{
            RowBox[{"v", "[", "3", "]"}], "->", 
            RowBox[{"v", "[", "1", "]"}]}]}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"w0", "[", "1", "]"}], "->", "x"}], ",", 
          RowBox[{
           RowBox[{"w0", "[", "3", "]"}], "->", "y"}], ",", " ", 
          RowBox[{
           RowBox[{"v", "[", "1", "]"}], "->", "1"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], ",", " ", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], ",", " ", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BoxRatios", "->", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.853499111307872*^9, 3.85349927987405*^9}, {
  3.853499386812201*^9, 3.853499419691494*^9}, {3.853499641671821*^9, 
  3.853499672907443*^9}, {3.853499925155386*^9, 3.8534999260347233`*^9}, {
  3.8534999788503637`*^9, 3.853499989405717*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"429a283d-4292-4fe0-aeb3-51192f1a7808"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = -1, $CellContext`y$$ = -1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], -1, 1}, {
      Hold[$CellContext`y$$], -1, 1}}, Typeset`size$$ = {540., {275., 283.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`x$$ = -1, $CellContext`y$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Plot3D[
         ReplaceAll[
          
          ReplaceAll[$CellContext`eigen, {$CellContext`k[2] -> 
            0, $CellContext`v[3] -> $CellContext`v[1]}], {$CellContext`w0[
            1] -> $CellContext`x$$, $CellContext`w0[
            3] -> $CellContext`y$$, $CellContext`v[1] -> 1}], {
          $CellContext`k[1], -1, 1}, {
          $CellContext`k[3], -1, 1}, BoxRatios -> {1, 1, 1}], 
        Graphics3D[
         Arrow[{{0, 0, 0}, {$CellContext`x$$, $CellContext`y$$, 0}}]]], 
      "Specifications" :> {{$CellContext`x$$, -1, 1}, {$CellContext`y$$, -1, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{608., {349., 358.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8534998906595783`*^9, 3.85349999381713*^9, 
  3.853564824516829*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"7c4b1d3e-9eca-40e9-b772-0d4f2b7ad72c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot3D", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eigen", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"k", "[", "2", "]"}], "->", "0"}], ",", 
           RowBox[{
            RowBox[{"v", "[", "3", "]"}], "->", 
            RowBox[{"v", "[", "1", "]"}]}]}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"w0", "[", "1", "]"}], "->", "x"}], ",", 
          RowBox[{
           RowBox[{"w0", "[", "3", "]"}], "->", "z"}], ",", " ", 
          RowBox[{
           RowBox[{"v", "[", "1", "]"}], "->", "1"}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", "1"}], ",", 
         RowBox[{"z", "->", "0"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], ",", " ", 
        RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BoxRatios", "->", "Automatic"}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0", ",", "1.61"}], "}"}]}], "}"}], "]"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "2"}], "}"}]}], "}"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "->", "1"}], ",", 
    RowBox[{"z", "->", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8535000190025673`*^9, 3.8535000268100843`*^9}, 
   3.853500057275908*^9, {3.853500102683033*^9, 3.8535001228824663`*^9}, {
   3.853500270443449*^9, 3.8535003149231052`*^9}, {3.8535003638356524`*^9, 
   3.853500374730878*^9}, {3.853500618922586*^9, 3.8535006247549963`*^9}, {
   3.8535009244999847`*^9, 3.853500934604073*^9}, {3.853564876930904*^9, 
   3.8535648838903837`*^9}, {3.853565041555367*^9, 3.853565042617928*^9}, {
   3.8535650755802193`*^9, 3.853565090931282*^9}, {3.853565200740551*^9, 
   3.853565202331521*^9}, {3.853565633924924*^9, 3.8535656348679953`*^9}, {
   3.8535717155619993`*^9, 3.8535717375064993`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"49dc7b9c-7b31-4d2d-a824-6affd4246601"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJx0nXVAFV3zx1Gxu+WxFTEfC/Ux0MEGuzuwMbC7uxMTbGxFRUCUkHNFQVGQ
S4iUeukLIgIWqMhPd8/Mvvf8WP7xvd/3PLuzn52dMzP37LkNpy8aMauokZFR
dFkjo2J//521NqCgoIA1fDvYraDgE7O07HPHO7uSZtDYPp+t7H+RzizmDrpz
vYKGWVVoYG+aR7rO2LH+59VlNe27Rg2K9fhKuvXhBxWTx5bSXGnptMbUOod0
n2u3oq8MKK5pK43/SPrIUp3ObRpXVFOj7oKrdrEppN8yKrd9cM0Cllfw9+89
6Q6DB65ZlZjHAvybuplah5Ees2Xx3radvrJBrXs4NLF2JT3K+dSjIm2ymeXk
ysGNrf0AdZt/XZomaD6wcL2NuV1sJOlmDfKbVTyQwrYdqWNpap1A+lyXu6uM
7BPYmTu7U46YppE+qN6Trea13zPXl1/2//msHL9t+uI1W2MYcp693MXBw+4D
G/Xjaddm7gpn1Etc6p38tKHCGfUKry6+aJdUhjijbvTEaNoL15LEGfX9xXca
W9sbE2fU7xzb5+W/pwhxRn3t0cGjwvvnE2fUb/V702C37jtxRn1cdL2n5Ut+
Js6od/q+pnT7kI/EGfW4MlPvW1mkEmfUtfoKG//wJc6o/9BWX62d+JY4o/5F
nz/Cq2EUcUa9Tvde64wGRhDnm2Wrbv57fUG1Ss67t1HhjPoE/4OzijiXJ86o
b/a5PGvxNIUz6j+KRzwZ1kDhjHqZko9b380oRpxRNx/pafMjyIg4oz5+3NfF
g07+JM6otwg/bzTg81fijPr18x+H2sRnEWfUu5b+b+7jnmnEGfWfpe2ql3iU
QJxRT7StOeGJZRxxRv1cVP3fd3JfE2fUjWaMdpjjHEqcUT/cM2G9x6Bg4pzp
tGL23/u359B8p8/DFc6oB7xfF/jdSuGMuuanZaZvTmniTLrV9YVtLpUgzqin
l8l5ZTtZ4Yx6rU/eDW+ZKZxR33iIBS+v9IM4o24f2dupqtkX4ox6y+DXG+DE
R+KM+vP3I+o+8EgizqiXsco2jjkQR5xR35dpPrBE3wjijHrbsEHHcge+Is6o
d/4nY+zH58+IM13XV+ulxxY8Ic6zJD+PZT+mVyi2sbXCGfXuL0KiG/0oR5xR
LxtVLLyOo8IZ9VIP0laa9VA4o36sQsd5g/VFiTPq3a6OCp3buYAhZ9T7lAuf
fO1xLnFGPct7XSmbPTnEGfXRHw49qHUhjTij/nxM5mG7tjrijPrJN6zx96fh
xBn1rrFDy5y8F0icUb88oPEOU2s/4oy6TZht/I88b+JMdpZsXaPsDg/Bn8PY
grMrfF9UE/05jI2Z55kdpCkn+HMYW11pTt/R40V/DmP99iTaPv9cXPDnMFar
4qW+/x4pKvhzGJtgtm12xOzfzNCfw9i6TqWKvPL5LvhzGHuzY0LvwE7Zgj+H
MY9xUe6XqqQI/hzGXDZ+XrVp/hvBn8PYi637q3VyDBD8+Q8H66Xnu1z3FPw5
jD3Mst/Rt889wZ/DWNsLLN/B/4bgz2HMZp3Rp0/rLwuc/Vh/M69r/xUXOfux
DffH/5N7VuTsxzZ/6HviTTuRsx8Li1u4vFOAyNmPta9fes3EiSJnP2aq6+Xp
mJgvcPZjExzrLZxSXeTsxwY8uOD7eXiWwNmPjRq9sPjcyYkCZz/2IH+kqeWJ
YIGzH0uqVL123sA7Amc/5jKmxZuyrc4InP2YbkDr/8yL2guc/ZhmrX+q/bS9
Auc/fNbNmxz7YjtxNuJ/8ueKxBl1+bPCGXX5s8IZdfmzwhl1+bPCGXX5s8IZ
dfnzN+KMuvz5E3FGXf6cQJzJfumzH3E2Ev6Qs6gjZ1FHzqKOnEVd8GdQ8WdQ
8WdQ8WdQ8WdQ8WdQ8WdQ8WdQ8WdQ8WdQ8WdQ8WdQ8WdQ8WdQ8WcQ/ZnHE1CJ
z6ASn0ElPoNKfAaV+Awq8RlU4jOoxGdQic+gEp9BJT6DSnwGlfgMKvEZxPjM
50dQyTdAJd8AlXwDVPINUMk3QCXfAJV8A1TyDVDJN0Al3wCVfANU8g1QyTdA
Jd+AwvONBFDJn0ElfwaV/BlU8mdQyZ9BJX8GlfwZVPJnUMmfQSV/BpX8GVTy
Z1DJn0ElfwYxf+b1C6jUg6BSD4JKPQgq9SCo1IOgUg+CSj0IKvUgqNSDoFIP
gko9CCr1IKjUg6BSD4JYD/J6HFT6G6DS3wCV/gao9DdApb8BKv0NUOlvgEp/
A1T6G6DS3wCV/gao9DdApb8BKv0NEPsbvL8EKv06UOnXgUq/DlT6daDSrwOV
fh2o9OtApV8HKv06UOnXgUq/DlT6daDSrwOVfh1gv27ZyTSTgoIQHrdfMqfT
V12NBroz+ynvJ5la/2ZPm20y+8sjYHLR5t2LVNLgfUG926+2q3NDK2maPvL1
tLLPANRr+J652WJwNJ0X9Qs2rqH9xrxhHfYnGTWyduLPVyRr1W7zvNV3I8ge
1DfMujSzWfAzllE8ODrG4y3pF/r1NA6qxWg81l9zejq9GXJKQ+PxunS268/o
a11n44evMlkYG8BQ1/S/6hre/y3Zg/o/WzZXt7Z4Jsybf45Tft877cRHNF4+
7595YOXHKv85XhXm05fsev6JvNMz7gh2urK2TcI7Zq3fTnaivjkla6/H1JVk
J+r27b4teuXzRph3XFkFd4s1l6sEiOMBxxvOR67sVIZPSt8+R0T7Ae0X7AQV
OwHtFOwB0R7OAZCzYA+I9uB45C/4J6j4J6j4J6j4J6B/oo7PxYlj3V97XYuj
42N/+96Ksf6LGinHQR3HG85HkazCwdLzOn9+JcxHkaxo2T126z75CTzD2PUN
lnlv3NyF/O0lq2ryumKFkuHC/fJjrQK6uMUc8BHu15+6+8CHO8cWXBKO78ca
DHmys3HBcbovWNfJnyPp+GLdh8cXdTy+qBv6oR+M/timw4pKMeJ1AV6X8HwB
Pl8Cf0D+QjwBMZ7geZHP4M0DBi+I9eC6E3N5uPpduVbrSZfP6w2uiYl3T967
IY4HHD9Te7Jdc2t7huNPDE6ssbCtRhjvCr8e1Z/b9boD65TgXNnetIDlbE1Z
YBebyVwHvRyzek0lzYKn4xubWmcC6uOGbZvglxJNxxF5CscBleMAHscwz3QF
o9tdbGfmrhf9BNBP8HlBe8b0KPPzTHwljcCHFc7HleH1Tli7YdkR00DirPHa
PeXotHmk43GiQgKH/8w7Leog6sgfj4PXi8/duEPVatbcH0v2yM9XAEt71z/6
iaUP3S/Ul2vcUx/3DBTvI8P7aBh/vJn/vaqPvz91o/F4XQ0iBvn2OnFb1AF1
Qz/842/mnTr9HHhQ1AF1vF61+47+P+xAdkj2HsX/8b5HHB/YcK0+ignjmcp4
huMFP2HoJ/1iWth42IWT/UbfLOCy2TRRB1FX6xehnehXwn0EvI94HPSHC2fm
mFV9aS/4gyvLamS/wNF/j6gD6oZ5RQALmqlfUuKRH90vtE/+7ISfNfI/WWzz
gE2ea/57BU2s7U2tqX+YxRYkffnRwk0LA/7K1D/MYsazS3QsdSkMFsX+qXqp
f/inbqk4dtyQUq/h2N/h1D/MYrUG6AeVLRcFS6TxH0n/p+59k8P6WPCy+/t/
pJBu+y4gh63SQTHps470oWlt/vsUkAinpOOHkV5q7owHFo31cFPSXUn/t1na
Jq+XH2GnpGP/MIv1H9rJ2mtpDrhI540kvVZW54093L/BIWl8AukbXz+MMbX/
Cf0kDmmkn7Wzd7y7wsiSfyY95SyYDx1WzBI5x/29bLsPrMHg8eZldwQQZ9QX
m6bOY9+fE2fSHY0KfuS9JM6oP28y4mq2bwhxRv2wzIU4o97pmJdes/Q1cUa9
80i3SifvRRNn1Cedz/zSYOt74oz6ZFuXet+fJhJn1IdMCy2aZpFGnFGP3FBt
n13bLOKMeiPp+r8QZ9Rnmk/yrHUhjzij3iG7YYrRvwXIl/QNof9WtdlTlDg/
5Nd34XivStOdGXFGffH7sPG7Tj8mzqg/7HruRFLwE+KMulXB7gdjTwYQZ9Q1
dWtev9X5BXFG3eJOi4pBtUKIM+oLQvL/5D9hxBn1cb49JzULfkOcUfet8XJk
58/viDPql88WG7v6bhJxpvNWubbgVPwH4ox60vf+D1M35BBn1H83Dhw77Nl3
4ox6yORqHZ0P5RNn1EsdtZ33MqIIcZZ5JDDL+5tKZa13J86oD9vVp1zsaw/i
jLrR4aM1HP09iTPqlXyiT23f+4g4o24bf+Rg3z6PiTPqX85Nyn/j9pQ4ox4X
6eHQ5XogcUa9/cISL4ec0hJn1DPPfPza0TGSOKN+ud7AAjtTHXFGPaFC4LBN
81OJM+pH3k9akrsxizijvszd6vqlKt+IM+o3V5z8frfuL+KM+pmGL6wCOymc
30t+HsuMYj7+WwmuEWfUbWJL5qz5doM4o66Zt9jk9vTbxBn1zTu+rp6V5kKc
UT/sd3R0vWQ34ox6rdNPz+prPSTOdBy3X+mnZ/gSZ9T1+xY6GA18SpxRH9Zt
0BntxGDijPrMucbBVhZviDPqKwPWR5UvmUicUd/Sq9S68P4fiTPqGE+QM+qZ
p6vltUv6QZxRn/vCcXwzdyPifILbu3ni8ZWxL44RZ9I73dtS0PMkcUZdc2Nu
gf00R+KMulH7fNuDK88RZzpOE/fu5kWdiDPqbWP+29G44ApxRr1BQbpf2VbO
xJnOa+K0/9gCN+KMeq1Nv+7mDvQlzqib51lVjDkQRJxRL/YZDsCJt8QZ9YNW
VdKXV0onzqhf7dX+g+3kz8QZ9YDW0SYsJ484o/76d0PN5+EKZ0f5/MzIb1D7
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
MGY9ZPgro3shgj+HsTyfJaf+vsdh6LdhzDswoFVqSxfBb8PYP7vHLNxe54bA
049ZngbzXWVFnn6sksnEhPflRJ5+bJNZvvHRCiJPP5YdMrtqYCWRpx/zaRXT
O6CqyNOP1etX/EnZtiJPPzY7bbJZtoXI048N4e8pG/L0Y86HjjzsXCJZ4OnH
BvXIblnuWYTA049Nrlx/S4K5p8DTjx3fPmn03/Xehjz9WKM13nuigg8LPP3Y
++qLLnvf2UM8jQz+FJ6GusLTUFd4GuoKT0Nd4WmoKzwNdYWnoa7wNNSTiKeh
riU+RoX+pavo5G+g4m+g4m+g4m+g4m+g4m+g4m+g4m+g4m+g4m8QWOpinxd2
/8/fQMXfwNDf4kg/tc6h7YRJp0Q/BBU/BNEP8T1ulTgJKnESVOIkqMRJUImT
oBInQSVOgkqcBJU4CSpxElTiJOS4NmnQ/MFjgXMY7HJ88ujRVg8xfoJK/AQx
fuJ73CrzPqjM+6Ay74PKvA8q8z6ozPugMu+DyrwPKvM+qMz7oDLvg8q8Dyrz
PqjM+1D4vJ8AKnksqOSxoJLHgkoeCyp5LKjksaCSx4JKHgsqeSyo5LGgkseC
Sh4LKnksqOSxIOax+B63Sl0GKnUZqNRloFKXgUpdBip1GajUZaBSl4FKXQYq
dRmo1GWgUpeBSl0GKnUZiHUZvsct9m1QF/szqIt9GNTFfgvqYl8FdbF/grpK
PwTEfgjqYt8DdbG/gbrYx0Bd7FegLvYlUBf7D6iLfQZ8f6riHcuXXhUrEmfU
Dftj1AcDwz4Y9bvAsN9FfS0w7GtR/woM+1fKe/EqfSow7FNR3wkM+07UXwLD
/pKL8n6uQR+J+kVg2C+ivhAY9oWo/wOG/Z98VoRfX+yx46tyHBS/9bE9a2Jt
n8Haeqz7Z/hrxW9Xh3Y1tzf9yMKalNea1FV4duD7B3xM82tec4XCM0uKS5ms
1qczycMTFL91lp6jTFYy3qfthPkKT1vpvn9i3aYGpCxvq/C05X2nu4LfmkrX
9YFpsmwyHBMUv9X1/RBk9cd+k4D7L3usyyKep6V9Aj6yUl+3r8m0/UA8x9Y0
M/pr/3qvZcWKFU8lnlU2PzH5a/+HxJPdbRwSiecr6T3CTFa888ARD7J1xLPv
yekpHnap7HDUzI37Gis8Zc561qeTxn3HcIXnI4mzns1qHzfYf48SB9ZInNPY
zdZ7Un1ClHjbUeKcxrKXhp0b2EzhmS1xTme7inmldXdU4sBtiXM6W9D9vy69
JitxwJn3l1oL8VbmnMpqb5nSre9jJd7KnFOZ/s4A7zfLM4jne4mzng0IHTAw
MjGFeMqc09juLy+TRt1JIJ4y5zTW8GfApTu13hNPmXM6a1Vx8u2vi2IoDsic
01nWmK7Jg3MiifOe1v5BdrEJrFeRdtN2MCV/kPknsuBOn7wqxiv5g8w/ic3O
25mzq4zCWeafxELWZOnjeiicZf7J7PaTM4/ttirzmsw/mV0MbJR07AF+j5jC
+aewra5es5vcUOa1LN5fOiHkDzL/BPZqao8sa5tPxFnmn8gcX3fr75mXSpwb
S/wTGYR/mPFrZgJxlvknsfb5d27ufh9HnGX+yaz9JbcWD8e8Ic5jJP7J7F8P
v3kXloUTZ5l/Cmt/e9HqS7e1xNlx39DZ1vZxrGa772cmLlI4V5m81yHW4y0r
eJDnG75D4bxXui/vmHHbHS/eX1TytCKcx+iQh/t8/ZV8WOavY8e2dVr89YuS
D8v841l5b/cb8+YpeZrMP54Zr9L1sa+v5GnzeH/pi5APx0t84tjlt3PnOa5Q
8uFxEoe3zHnjt/D4PYnEWSv52ztWa2DVPo2TYolzf6/Ts//ud2K527rnCLcI
4izz17Fd7weMjKml1NEy/3j2fkC73507vyDOMv94ltV52dX6nQOIc2OvauYP
7MLZ2vQ+pUd2UDiflvhHsKkDm0Xt7qlwrirxf83Wh3zp1GyEwnmfxD+STY6q
nX9jjsJZXpcXxdKcPgxavV3hvFbiHM0821z+tXW8UnfkSH4bw/oOGX1zoFap
Oz7zvlOsUN/J/MPZkayUBtdylPpO5h/Bli8utuWWzTviPF7i8Jpd+jrpjG5M
GHGW+UeyKQv3OTcNfkY8ffdFOhz5Y+eUEzPf2l71JZ4dpH0UYljVBbGb9vh5
Es9xoW4F1vZP2QbfBz/mV1R4Wi1vPvvvPg31hqSZHK+u8Oxc83yQvWkgM3Hu
32x6XYVnM+m+vGRD5tevaN9U4VlT4h/MTPLLzZrbUeGJ3yMn6WqXXGWv1Mvr
JM6hbMUK6+dLQ5R6OVelD5YicXvKjnUyqrEQlL5EhMQngJUZEG+7pnQkcXNt
Pcjo7/fjmxZOiCgY4E7cDi7/L/h3QQgLfje45ub9t4jbI4lnKDNhGfMszK8R
t1HLsgNbWdszs0UPswcXUbjN6xvyu6m1E/s+adyLD0UVbmahV0552t1iRUvo
yv0wVrgt4/teWDQadOx2SYXbCIm/B+ubXcVmelmFW3uJ85/60Lms/aGGCrfS
/Lo7unS869pe7He58e/fFW6amrfNG/+xf8bSYZnrqyn9LkdJd2I1ouIauyxW
ntOel7YFu/8577ysI+UHFttHfP5JW+iYX8DY5IQdJadW30V8Sso6mLTa1bNL
GYVPU/k4YOJTtNaX0gof68mnjP7u07CxQd3cU6UVPnMle1zB4/Y/m2qXVvhU
lY5zC1Z1e5Y4o5TCZ5RsP9RzzGu7voLCp4V8vdCuS7NVPcoofJJV+l0Z0vft
DKzq9nzhna3wqSjzhxcxpb596x1OfDrJ9x1mlTxW89S0ecSntOwnUO6MdWrS
i1HEx1P2K3Au7m5XpIXCZ6vsh7Cl7JPGG1sofOxDH8+O8QiGuG76bhVaKnyc
ZH+GEUOzvt9rqfBxk44fCMPsPKtMa6XweSI/F9BndpErqeMVPuHycwQxFtVf
7xuv8ElT6VMtlZ9TGNDQp2bQTCWOfePrFHw7NZ55Y3wMxbGSchyAV40HDX5a
9Rk9j7XkuAGnVlwpV2QgPo9x0EKOM9BrcvjtXM0V4mwhxyVYntC1woqZjsR5
qBzHIKdO2eiPNw4T57Zy3IO25b5NqmyjcH4ox0kIezi2aOAMhbOlNH+9gYOh
6abjbBXOz/l+GC7laxYru1DhPEyOz3C0q03HYSsUzlFyPIeEi8YWe/IVztPk
+A813r4bZFNDmS9sVPpUMv8YcLz9+90zz3TiLPOPhmejuhX5eT2eOP+Q+L+B
MpcntprX+DVx3ibPd9BSM+lGSpPnxLmcPD9CZ/Y5uoA9Is7H5fkU5tYcOMMt
240415fnX2g4Y8G5Fq2difNIeb6GevUtN66+pXA+Kc/v4DehZ8VT7grnODkf
AP/9NkefM4UzyPkD1KtTxftZsML5mZxvQLrJ1Asu7xXOMv+3kHi74tUFmcq8
LPOPg/4pZbI6tM4lzhm8/3NMyDPlfd3iobJ25+aQHUqfarmcX8HlgVaLKmYn
E2dPOR+DEu28xv749ZY4/+Draxs1cPb+bazkPzL/d+CZNeLVuvkvibPM/y1M
2FmyoMaNJ8T5hJxPwq7Vc3rGj35EnCvK+SfcalF28O8ySt0k80+GF/3NZoyo
rdRNMv9kOFF3VLuubZR8PlbOh8HhwMpZn/or+Xx9OX+GlDu+K2COks/PkPNt
8PNySAivr+Tz1+T8HN738Fkfsl/JM6/z/k8roW6S+afAcI/Jbt+slbpJ5p8M
A6Z2jNONSSfOK+T6AiJcvs6/vjaROMv8k6D8nXznIXOUfD5f4p8I186aXpil
jyDOveR6Bw7/XLSu9aEQ4rxTro/A9cem4NlrnhPnl3I9Bc1MKwd33qBwlvmn
Q5Db+IgmJxTOMv80SLB652vlrnA+yffb6213Om9QtMJZ5q+H11vbup4sqdSn
Mv9UsJxnauHRS6lPZf6pYLXBO3NZg5/EeSbv/9wW6n2Zfzo8fnWg7/GZSr0v
80+H8ls3nasepKy3aSfXy/BlRq2M0b9TibPMPw3GJWX3rb5NqU9l/npIC80c
pr8ZR5x/S/xToXPfnZnZWyOJs8w/FXbOKRnX1SiMOO8c/nuQh90nWPR49YqG
BQrnF3LfAE7VXefatLHSp5L5Z8Ky3ruytgxS+ioy/4+QFriz3cONJYizzP8j
rNI223/WR+Es888AfaC/cY8ySl9F5v8B5kwto+sfq/QB6vO+0GmhTyXfl0/w
xObqqnX7lD6VzD/zz7y88YHxlWziLPPPhKrHFlS03JlBnPm+klCp3eK0W0kp
xFnm/xHC21z7vZLq2STOPwN22fsOu/FSiT98PmWG8ylxZoac02EP1/dNGOjk
cu0t3S/5Pn5gR1t333diQRTZ/1OeX1j38dblo5ZH0Hm383pqcNj07c2oHonj
9eAbtm7a3EX3qvuJ8w47Et/w7TWfR6RfkPMcNnLjkDKBKXfEfIB179TJr+2p
K8SZ5xtMJd9ghvkGfo/zkt22s9rsUsuf9PY83640rsPd1CbX6bpw/ONidScb
/U9+gvrVjtpPx27doPGjeT5/N3TGoZz122n8TDm/ZUGaW84pa3aSnq2V64It
e+c/evFssZhnMsM8E783cWVXXvt+qDgjlHSet4Nh3u4Co3ieXK3q5Ez3+o5k
5y6eVze271Yj83/s5PaAoT1kPxjaT/aAaA+vv8Cw/nKBJzwvTar7+MzX4U/I
Hl6XgWFdRn1XMOy7kn+CoX+SP4Poz9jXNVynR31yZtgnx+9HItn5DUdqF5ke
TnaifmKBUdX/9XPUjznnVG85S0M6rj+5WC75x6es+8QH/efm5m77FjcVv8/y
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
uCn10apzmRkbWpTRDJSu9xvpo844mQ16UkLjK3H7THr06IRti6YU0/D95kh/
Z/sxM+hHAZO56Umf4mJdfUu/PJbAv4dD/SHfJy1Dur8YH7TQMNPjEHwIYAv5
/qSo73xfdszZPA82TDq+8p7li/fGJunzb3M+yvqg/Yf3tFx77ArbLPHJJP1g
ZpFJwcUucg54vVHwLC44a6xtSc7hM+n95h9cebqcMedA/g+Xmn7MrfzQSDNd
Om8a6T/DDtc99f4HM5U+4/d3UVCK74NqIflPKOlZOx0eh+1+zq/3Pend3ix+
0rO7hl9vCun6L+Mbvfn6gM2Rxn8k/b+v5cp00Lvy66K4ARFXAvf+3b9Uvi6K
GzC8Y3Tr9buKaNZLfChugPlma9NFl3/xfZyV9Wy4j6hsP8UTKDH8w9dnv1+y
//i+maj/KnejTunS/myIdF6KJ1DBpVb9QHcNeyPZSfEWup70HPB3n8/jkt9+
ID3LpcGMKnt+c3uU9V3X+b6adaV8Jon0EV1GOM2spWWdJHs+kP6lwpmCcTGB
7K6UP+Dx9XBye3LNv/tbFuPjUO/C942sIx0/nfSzNwNyyo8KY2Wk+RrXF2jZ
RbbgfOxUDWvyyNfTyl753q1475Bpdrsq8ePjcTLYMb5fnJDPMMxnrtuYlqxk
vZXi5IXw1bdCT79hi70aOfa3DyL9S0ubSxN8Xor+wza6j/A/3k3Dlp1MM/m7
vhbtvL65ydmQR17ic8SmL5nU0mvYbebnlNk+jn4vW8vefl9YvP/EBPZOnnhI
n/1mwsyw7aFiXGIYl45K+QDu/6dhZxZsvXd9Qzw7ZqgD6kJfDrAvJ9gDaI/Q
rwPs1+kM7QS0U7hfoHK/AO+X8P0p4Penwn0EvI8DDfMuwLwrQ5rv3hLnGtPH
LjCzcWEd9icZNbJ2Im43n7zZNrf5Q+F+aZjPyOo7NrieF46jYY6DD44Yk3yE
jR++yuTv/vjIYWxk4v5966LFfjKo9JMB+8mCPfCunVm7W90fMuN9Xi8Xx16l
47epUnBgbGIA25y+17Ye+acG1tybP2ziKl+xXwrYLxWuCx7x6xLmQYbz4BVJ
9yf9Yf+X6etMr7IKUn6ivJef671lfKD7BXE8eBY+HnC8cF0Mr2uj4XWxtfy6
ZP60Lgnad5yYXi/sDJOXfyh1x6/V/S3si+M6E9w3N4OdNF3Q8MCyZ3z9ulKP
ODWY7ryhcTDI74Mp378vDnu17eh23KdJqUcsS5+du6VIOCyR1wuSPiI5+tXa
npHgxd+XQ33ehSEtRznEgOy3OtITplcYEdRTB6f4egvUlz4PCGXDkuAmX2eA
evMJy9s/eZVGv5OOuvHDqEYPVmeBC64r4rpRvWchuyK/wCG+Dhj1a892dZ/w
Lg/68XWlqK8YUtQlaGYBGPLUsztZNaccX/pE4Kln0wd+sk/d8ljgqWeXwzza
pkf5Czz1LMWqm3mP+OcCTz07oe9YsmpIkMBTz2Zcfcd+FQ8VeOrZlLa3xhS9
ECHw1LOT3xZsne0VLfDUs3O9aqUu3a8TeOrZwQrft0SEJQs8/xxnf8mac4t8
FHjqmfn+CVWNin0WeOrZm9R/F2/tnivw1LPrfmOnFfmO65mzSL+S4HAsq0hR
S0POSazRr1Lzh6z1FjgnMZtA25dedx4KnJNY8ZQq7MNXX4FzEtsw7+SoMu6P
Bc5JrERU46gP558KnJOYc1Lp7W4OzwXOSSzy4mF7jcUrgfOf+sh5/bQGg8IF
zknM4WaD6BPe0QLnJNZrSFvdkah4gfOf6x1m4f28ZprAOYndLfW1pX2PbIFz
Euv/rta8mR7fBM5J7MGgqwcXXv8lcE5ipvtnVS+ztIjAWcfWd71cdL/+nsBZ
x+oO965oUcFF4KxjzglXhq/u5i5w1rEnF1JLfe3yQOCsYzf9JnpGdPIWOOtY
95X1zcxsNAJnHRtwyvFZMbunAmcda+j+qGbIoxcCZx2zelu6UcXLYQJnHRsx
MniWvV+swPmPPelOx/p1SRY465jWKL51QqNPAmcde7HRbvbKEV8FzjoWVGpM
btbmnwJnHSu6sn3o6q9GAucoNqTxifoLTlwWOEexGTeyei2zcxI4R7GdVV6w
70OvCZyjWBebhL150TcFzlHMomedRl3O3xU4R7Hw8cfL2rZxEzj/3Q933rVt
/R4KnKNYz/W9u1qM1Aico1j8rztFL5Z8LnCOYscXG83opwsXOEcxh7zAI8cW
xwuco5i/sbNxpaoZAuco5tavQsUV9b4InKNYwYgpyVf3/BA4R7HKG8tfGHVI
5KxleR/n7Z6Zai9w1jIvbTWf6imHBc5aZvWTlX275LjAWct2bYx9NvTpKYGz
lu1oZBnaasBZgbOWebpMKzcm+aLAWcvinKvXPJR1VeCsZRZ1i0Wsd70rcNay
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
LuF+cL7+IsT/XiRvtf9/2rN5/Y7f83+v94J7
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
vl4vyrxKOoAyS/ltteZz0qah/fUeakcu252yl8bWU2lfvCbs2bV/UX07FF2u
SXjeHYue458h70LqOALeoOfVnBP6ucaE5uOV5HeTPofx24X/1+Xec+dFj+H1
ZevlHpRMXbYeUvKhbBVqT4019feDQtsqrfd/2ln/bxP0Z9KjaXxKn9EwsHQC
jYJuTWvd45K3I9e9Z6hHY/TgoLOTnqROGHf7Sd6XjEr5l8J71PvcMbTDfwW3
ZdMwNluG+xigMUZ6YNFzypbwv/jV1CzdXYui37f0JFlgvffm4Rl/L7gt64d5
Q8/RINSj6zcJfW9LeE5dd0Ts+jqTPp26Lz1b8f5AtqF6kfcHY+H9I++hZUM5
MPIauIzy5cTr+VI4SSwXPKV3SrpTxWOhnXTyvK9GdNwjZA/TvlDjiHrO4f9m
0q2WvebPIv8Y9Q3thTm3vdZBfr+c49ySZZP5lDkxsrxwP3wC/Kvug/K1EssC
kzSPkn82579C/ueZZaUNmmdJ+/D/R0XL81rTVsBZ4rVuOZwmlpXmUE+byLLD
bPhYuK7215Q5NLM8MpP81uTfzf314uhZ8hw4jzK/aKyUPacdVbb8/g75eyeW
B9/T2Eos80aUOT6xjPyzxg1cgb9Tv0ks9/0Ft0wsb36jPp1YJv0UPiCxTLoF
PiKxjPmJ+kpiOfRdeB/Sbcj/SWMusaz6Mbwf6b+J26S+5FSt/1pXSLtS/iju
7UTSuhxbwZ0S91+NH/UlyUqTSQ/VeJGMzG+tE8vgJcq3Syyv3U6ZIyLLdHdo
vYpsE5sOH613KjlSc2rmNU9z3vDU+4Mq8jsmlpH/pv5WcEb5jprnU+/h7qT8
UdTTRbpTXbdsWeN1yuyeeM/0huadxDa0qfDHsW1xd8FfxLbpTYM/gXfR3gBu
W/E+WzbN6pH32dIPS/e4a+Z156SKbTJ671ti2/2mq+/FtvPMhL+Obd+bAL8d
2+53N/xl7D297Kd7RN67y/a6Z2Tb0UMa45TZkWusVn+oWG6VbbdB5H255JA6
kW1Qj+jdxNbBa3w1KXkfKbtww8j6gNFw3ch2qocp/0ds29SDmg/hCzmnG0dt
LTjS6xWsB2ibeU3XfnBgkIUkE8l+9QD5v8a26c2Av4ot/76gtYD0nMxjUPvi
y8q2O5xQtsz4otaaxPLgS1r3EsuYL8O7JJbrpWduwj235ZxDZccgPUM2XLhB
2fukNzVfJ5b9tTY1jSzX6/4Pjmxbu09jP7Z8qj3g1onl63WaPxPbIWfB31Dm
Burej2MO//cgPZBjbtG6Ltm+a0jHF3uN1vp4LL/vL3mKMttx/FWwblpy9/P8
v0NieXyt1qPEe33ZmmtG1qPIzr6X9Iyxz72QdFfe92F6l6TrONaQ3yL1urRL
WJv6U+6bgm3encPcLjv3q5FtIr+XrFeWvePHkvXKsnf8IDtLan6ubB1qS90v
+X1j24RkR5EuWTaOL8i/Ddn6cMpuV7GOVraJD0vWScsW8xt8C2UOpcw2FduK
n1N7JNYFSkfaN7JO7g14YGTd2JvwILhRbL1Zb7ie+hZ8vuZeeAV8HnxA7Hbo
Hlk3WQ9+ieuuimyX+VLvijJr4R7kNYytP+wFN5B8AfeULAp/XrB96PTYMods
Wo+ktndtlh9E7DX2vNh6dNlfPihZdy4bzUeSXyPr1R+DJ0bWuz4E3xp5r/0A
PCGyD8z9JfsySKe3HH4vsu9BOfI6/lnBe4RJkXW8j6jNI+v2F5asX9wIX6E1
Dv65YB+I0bHlEclP0s/1KdiuId2YbByyR0i3JzuFbBbS1clOIZuFdHWyZchu
Il2+bMT/laxjkz1F9o7HU9v9vih7r6O9mPYZX0W2iexE2i22/fGc2Lq6Swu2
uchfQ3q8pSXLJIUgF0nXKx3Cpfx+mnTN/H5WxfsdyX4rU897TcnvIh0O8851
ke0XjeFrI/sUHQKPiWz7aCZdVWSdYcvc70Y+Hi1yt6n8SZrnfk/yHZKe9W3u
4Sr+b0r+6Mh69SbwqMj684PgkZF1JvWCLKk+8Sz9/H369d/c26EVz5sapx9G
Xht3Jd22aJvgoCDXSdaSzLWxbFurbMSbypbhn5YNLne/kR/UM9Tfgd9qVmw7
ki1K8vDI2GNf+4uW/DaU655BelTufib7y5HwLZHtLEfyW1+toRXrvzdRx2B+
a87/l5J/KmndzHPcyfA2sXV0bXX/sX05joO3i+0f0i6yjl+2g0u0DmrthE+O
rNeXfrUfvC+8TP0hsu5f+tX+cB3tqeBz4b1i6//PgGvG1o130dji/m+ObF84
HL4psi73MHhcZH24dPybKT+E/7PYerOWOkf6ptAmu2k8k9+R/BqxbQqnq6/w
24Tw7AdynBJs1nvGti+cpjEX2y7QIXJbbg2vLLmvSZ35aMn9hWKFB0vWuY7i
vbws+RQeLRk+tq2sPmVeKVnnOpL8l8ivk1sOqZfZliX/t/Ul63IGkL88tr7n
YnhxbP3Q5fCK2La4WpRfV/IeX/vcZeR3K3sNaiK5SbpRyd1VtsXtpz5Ysr52
LOXfjK3TvRHeGNsGKJvyppLtirIXbyzZ9iib9WZ4QWSb9Vsl64Ancu57sfXH
t2v+iq0/kd5gYWy7n+zgr2m9536u4H72rrLdTzbx10vWdfWh/BOx9ZcXwYti
6zX7wkti7+H2DWNPNmGNK40p6YakI5LNXT5s2sNp/90y7IP0v2xZdSnzYsnz
pfwkZA/Wur190bLmDbHrHhvbni15QzaRXcNY1py2T+SyWpdlq5Qdc3XJ8/Yh
Ye7+vOw98uqKbaf7aJ4oWec3UGOfc8eEuVpztuyZtbX+Sm6I7JP2vNYIyg/S
HBhbzzcUXhdbV30VvB5upr1I0c8vPeKV8NrYuiXtXaVf2FK2vHdtajuqbHbP
UP84yvekzGOx9f094EdjjzOpqZdRZhj5Z5A/Pbb/4+nw7bH1KtKZPBhbH98N
fii2v9KF8MOxxyjdu/BUyf6SXcmfFdtH8jS9k9j+dGfD98X2yToBnhl7/qb5
CktK9r87k/w5sX2y2sP3xvYFOxGeHXtN0Lbn4ZLnaYmt80qev/krzIevj/4n
yhYe114r6JwalDzHbEX+ipJ9wU6hzlslD/B/fY56JfuFnUT+PbH1RZ3g8bH9
Q0+FJ8X2A+0M36YysfUK0gXK7+ws8ufGtmN0hx+J7b/WFp4S20+tDTw5tv/a
sfDE2H5tx8AT4H5wO/iO2D6VreFbYu/FWoZ+/nrqe+uVeJ1qHvpAg1BG/Vh2
FdnFni5ZlyD9gtYk+bhJP3Z/bD+L5mGN05iTvkP9VXoM6Rmln5KP3nGk02L7
xB0P3613F+QlyU2vcT9HFa0j1bp/RFj7D+M4PPRbjTv9L/mqTriW5IqaoZzK
jA1j8/rY5zUL+funXndmy96XWxczW7qT1HP+HPLfy63vngF3Lnme196jBf93
LdkX67iydQWnh/3E4RzPFO3P9QFpHe0pOFYVvdeQr9OHcF3S87VucLzG/00z
7xWOpc5DKq5D9p0TZB/S85NXLexJT6KeSZx3UdCFDgg6UOk/m4a93ruZy0zk
6MNxNceZYV93Udl53cuWPXQtXfOOkuUo6Uy+4NmbaP0h/9yy94J9JXfoPI5W
nHNzuO6CotunfcnPKXlM46SOZIQqzwUvwHPC2NFv0tUcTX0v8/vV/N6L8x7n
eo1yyySSTaT/b6H2pUwl8X1q7ya5ZgfJdZoPyvaTOVL7Qd5dl6Jt7odozSj5
t734P4H3JK0pPxa4K+fWlVxYso+N1vNhoY0OzP2utba/mduPVv63r+S218qu
Okw+Qipfthz3KtfZVboLyUnhWjuH+5AeqXW4T91vy7LtGp1lH634/ctueFjF
e8RD4BmS3Tku056oZN23/P+u4pwuknXL1r1IJ9MssZ6occhfn/id/Bu7j3QJ
/aRf2f32bNIXctuPZS/WeWeE/iMf2x+1NiT24f1B96N9GOW/pvy4in1Xf1Ob
J/av/1NjXhzepd51OeidWiT20/9PfTux3Kg2Pqhi/ZtsiI0S65ek8zkusf/+
7+Qfldh39Q+N7cS+/0XKtE3sg6/Juk1i+XOK5jH5TpQ8/2ru7aRnVV8KY7dz
6J/tA2ssa28iGfsZ6bB5xvd5xuupZ0Q4d++S9/HnlDw+7yWdyzGzZHu+dHdN
SRvmHk8baIMrSh4nGiN1A9dR+5fcZ2qHcX9yGPuNKm7/hqTD9Q45duLoGFj9
aXB4rpOLHsNqQ41J7Tflb7Yitb6tQ8l9cWA4V3UMCs+i9rim7Laoot0Wc8+v
SY9QsR/3V5zXMHE/Vh3Sgw2t8nr/CmW2lR2xaJus/Duku5ftbLvMtjD5nG+T
2eb1P3tuZnuT/NKPyKznka9aZ/kHFG1nvCOz7k62e/mSSHchHcYOmW1P8g+X
r6z0CdIryIdW+27tv2+osqwsX8FSZjlW8mzzYHORjTjLbJuTT1cB7le0384Z
mfUqskf/l9o2JL+dSmb7nWzQ8kOcDH8Q26/1RNK/cutSesLfyRcms61nA3mp
/AyKtkWeklkvJDuv/Bq0D9V8d25mXaLsm/I1lT1Cdgn5rXxZsP/yMZn1ybL5
tsqsM5cPRovMOnP5bCxNrFM6WDI7/99ftA+GfFZl75DdQ74k11LmUvi8zDou
2XPbZNZdy+58PsfGom3EsplKPpbvZL3c647WH9lfNV/JNt0ls15OtviOmfVR
svl2zayLk437rMz6N9l8u2fWsct2LDuO9u5qO/mvSYaWDuzMzLo72Yt/pJ3P
K9pXamSVZdk3tBfLbLNT/EL/MBaOCf26VRjjHXnOWhojpHUofxvlt6L8LLh6
yb4iarO2Jc+zayv2D+3Ns/bMrY/Q/KY9UJuSdXGdypaXGsoWUfa80pj0o9Q6
5Oe1Zw+yk+S7mxL3gWfUlqn3MtrT/J56jZOv1+lBZjiWdOsq22U3hP201tN2
HD+ktjPKT0y2g0Mo+yJlTy3bPnKY9JapZWnJ1HpfspO8RJk7E+ufX+Ue+ide
E++K7Sv+UcH6qsaZdcuKPZFNQrYJ+SocJVt70T69DTLrtxWD0DCzzlmxCY0y
62kVs1Ats81U8SxHp7YJykfioMy6UMWzHJZZvy37RrPMelT5rx6QWdetuIYD
4TuLjmXQnlZ7W8Uy9Kiy/PpcxbZU2TaXke6d2aasuA/pcj4u2L5ZK7OeXPER
NeCbio6jqZ9ZP6/Yh70y22oVO7NnZru2YmpqZrZlK65EMStfSmZLHIPyBXwg
aauKZbDWpOeVbGeSvDSibJaM1LPstfTasufpYWGu/jB2n9S++oHErLzr+G1M
yXON7Nujw3p9XMW/yY4wpWS56LLQR9RXtMZrHPQP60LXsMZofTkg9zr/Ju13
cdl9qleQHa4MssQlZdvIhpft9z1J4yt2/QNCP2wTbG2Sc6TX7xvql6++1tJO
pA9yrdW8gyvgEznG8nse9CiSKXWNqZSZQpkLyF+SeC39nmutLTu2Qv60BwU5
Z5+wxmqtlV3sJcqcWLB/Ztfculpd68Wy40eGwi+XHSdyleS0suNHhsGvlh1X
cnXFa/XcUOddHNNLnh9bh3f6Je//ycTj/gfurU3F7+LY8FzS6e+b+V2NDe/r
GPJHlXzuvhW3WWfSAcFOIXuF1mGt6y10Te5/Lvffs+K5a0SYv07M/D4lF+ne
RpYsx6/h/GMK9jE+OPO9SU5QnQODnKA2k4yo+Xoy9d9A/edSZijnjiP/o9g6
K92b7lH2nfElv9dO4T3Kz1CywbSSbSu6/rRwD+q/U0Mf3je3fmhTlfuJ9gCS
Hx9MLIPpWmqzieE9NqlYdjq8YllUe5I+4fdJoYzkXO0LFhbt0zE7vKMp4Tfl
zw7cM6RTwlgYGlhlNAanhv7cJ/Rt9XGNEclP9cN1dA3t38+sWI7rSrpVYpuO
1srpoX/o2UcGVj+5seT21LhtX/H/st9JXtd6onrm0D4LpRMP71eyl2RIyYCS
C1uXrGPU/Z6Uee7QnqtpGCcaL8rTbypzttov7J2k374ttM/kMD5mhTbR/3P+
TxvODM+o+u4J15CteUZot2vDHCXZdUb47f+37YzAuq7O1T1ofJ9CP/yD/5/g
nIML9jlfUnYslfzSNbccFN5pm/De9f4VO7ud2iBxm2v93Ye0d9n3onlJMrDW
3L0r1jmrHsU8PZvYpv9fbJlH69RPseNWt1dbJo6F3VbjLnGM7zbwqYnjYitw
+8QxtZINeiaO8a0BX5g4ZnQX9YXEflOKV1mf2gY1W+tj7BjcmpTpkTh2dle9
i8TxuDncIXHsb6pxnHhsaqxLblc87l6k3RPHE+8Jd0tsB9M6rvX8qcT950fp
KsL6LZmnesU6hP1Jh5S8R9BY26NiHcIBFcdNvgXvRZpWLLfvVnFM52a4RuJY
Le0ztNeMqiwTaD1V7HJZ4z1xrHCmfpdYzulA+XncT4Vy58ILNT+U/E61H9qS
2+9c/tIdgswkWatdxb9r/l+XeE76J7YdUvoR7eErVZaTtKfoHsaG9km9gn7s
5th5GivaNzWo+HzZM+UnIx3Ty6ljf3dT/0wc31xN9we/q3VXesuK7XCyx12j
Nis7VnEM/E7ZcXwj1cZlxzNeB79fdgzjaPjU3DprjeVFZccDKnbjvbJjD0dV
vF+UrWpn0vNy2+S0f/yYMhdIR1XxvnkEXIt0edmxaYrvWAEfVXBsyOKyYxUV
67Gy7Jg7xZvMCuNc4/npsmPZFFdyTm4brfZuG8oemyMqtrHJ1jYW/rLsuKQb
K97n6X5S0lvL9j1T7Il00NJFa28zVX274NiNE3PrlLVO3St5uuDYkPvK1ocr
lmSm+nbBcR/zyralKt5kRtn+gYoZkd1IMoP0V4qz313zm3QLuX3IJMtJ5tEa
pr6itVFzy9slrzU3lWxXerTsOE3FtjwCNyg4bkVzrdbHr0qWL3SfL8Ctcts+
JW9oPdRzPUH+w2XHeCqGRfFfsjmuIn0u+LepX00r209PcSuH5tb/aj0dW/7f
FvJ/MSzyMd05zBXfRq5HNkz5rX9LfpPEtjzZDM4OenvpHqWHvCqzv418uSUL
Xc99DeG8gZnPle/30Mz+PPIJz1P7usjfWHtRyR2yhQzjt1+K9i2/PLNvj/z8
FXMg/YL0hBdn9ueRv3evzL5D8puVv6P8TwaWbevRmNXYHZTZd0g+5w1T++BJ
L6p5UPPh4LJtMbpnxQmeLpmp6JhujfeG5J9ftn+6fLfkw/VOah2+Yp9lt9Ke
dU2V9YqSoc8rey82qmDfWMmukoUkE0kXp9/foPyVmfVd0nu9n1r/r5jr2Rxb
l/ythuaZfVHkz98gtX+gfNEbcawq2Be9dWbfFfn/a+7V3CXbl74JcGHB8a8X
ZfZxkr/xxMx+RPKfn5TZl0n+9m+ltnEo3nxkZn2X9F63ZNZf6dsLaWr/JcXL
VOOc4/n9fs1/mXVo+l7E5tT2EcWkS+89jrYuUWZUZp8lxQjcEJ5dejL54Mmm
q7jA6zPr6/RNjKsz71P07YtI/r4Fx+yUUvtZKZZnQmZ9nb4j8Vlqm4K+QTEg
sy5OOrnPU9t09D2Kvpn9xBQz8nHYb2qf+2lqe42+cSE5XvK8/Kcv4f/Pio47
kE+1+oN8ObLUvluKDRyfWaenb1ZUUvtfKc7uk9T2IMXUr6yy35hiWmtX3Jfk
N6I41z3UrxL7yEmWlD67U2ZfYn2vQP5/khn0jYJvU9tAFb8vvzT5p+kddOP/
Z4v+7sHfqW1kin3YvmJd8hT5m5N/SdHx+3+m1gtpL/9Laluq4uv1vQj5x8pP
Vn5ldcI6Niaz7lTfCVlcZZ88xYDLJ0m6kVb8vyW1rVYxKRdk9nXRNxD+Sm2P
kw+/dMgqO4M6Ts7sO63vMGifovW4P799k9ruqW9NfJfa7qlvTdSv2N9JPgby
mfzf/lDyTsW6h5nU+S/lhxUdA/J1aluqvk8iX/rBvFcZ9BS//q/2OonbR++i
XsU+tz2C3VLy9q3kX036T2o7o2INfktti1RMkPz0pKeRT8LPqfV10l1oXMjv
TvHvkkUkk7SnnvdS27/03YZyZpu4Yh9qpPbrVkyH5HB9K6Ya97lTZpuy4pKk
j9VeSXumd1PbAfXdhr2DnKk4rD34/46i45LqpfbzVwxLzdR+vIr7qMWxoOD4
F8X3SIaR71jPILtKht0rtR+vYk+qZ7ZlK6bpZo5fi/4+zM6Z99eKq7ons7yq
77REmfWc0ltK3pMOV8bPuqljDRTboj3m5VznuSr7okv/tBreLbFcJx/LOLNv
gOI45Kcue5y+QaEYLNk4ZEeRPkHz/W6ce2xmfz/FNM3NLJ/rOzO7hD6jvjMn
syyt7+Hcm1ne1ndpksy+Coo32Ta1/63iZeTXJ98S+Zgcltp/Q7GcK3LHNkvW
Wp47dlqymWwles+ncj/LcsdRS07rT72biv7ux9O5Y6QlazVLHXuimND1uePt
JeccmtpfXfFKK3PHV0t+k3+/dIbqH0/k/m6FdAKyaz0vGUC+Iql9wxRb+mzu
+HDJS8/njidXHF/X2DYCxej3zOwTq1iVsZltFpqTTynbh0/j8YrMcru+f7ID
9d9TcEzQkal90hSjOjizDK/vmRye2qdFMa1Lcn+nQLLcY1X2qdU3K27PbPNS
bFq/zLK9vqmyMPd3N6T36J15flN8zYLc38iQbuTGzH7CMoyPg+OSY9AW5f5+
h3QjQzL78Wpt1Z5Le0fpHPXdG/kayefov9yyjnxr9a0J+Q3Kf7BHZv9kxStN
yB0zI7vhVpn9QxRnJJuU9oeyX/1DmY6xfZYU4yibiOxp/+Zua/k/1M4sbyhO
MK5y3IV0rbIPao7ZrHkpsv1ZcfFfpPZJ0HeWxuX2F5fdtmVmP1jF8em7E/KV
ks+U/CDXFBzbq3uRDUWx+5dm3k/pmzZrcsf/S4ZflTuGX3uHZ3J/L0D7BcUQ
SW7Umn1kZj92xVEenjmeRTrPz3L7ESpO+fPcfoqK4W2Z2s9Qsb3FKn/bSL70
W+sZio4rbJXa51Bxwfp+yfea00gvy6xX13pdldknR7Fg26f2P1dc26+p/UYU
/7gpte+EvmmzMbW/gb5187IcLWLHdb6U+xsNismSH4JijbQGvJr7WyeKOd2Y
27dJ3w7aLrV/u2Lftknt064YuumZ98L6xtSm3D5e+qbQ1Mz2O31vanNu/yrF
Kt6Zec7Xt5tey+2PpVjXKZltfPrultZUra3Sw4/IrJvVN21uy2xb1Lewrsls
w9L3vt5I7Y+h70e9kdv/TN8Cej23j5q+ezM6s8+54kyrBXu85tkNuX3X9D2c
t3L7dSmWc1mV/dT1zavhnPN50d/wuTuznkHf17o2yFGSAydnXjf1zbHrMr87
fa/so9z+qfIxeD+3r5ti6PQ9Lcmxp3Avd2Xej+vbVtVSxz4o1vjd3L5u+s7S
rqljGRTPWEwdv6A4609z+6oq/v3F3N/OUKzxO7l95vRtpU9y+7kqFv6D3H51
imGfkVmnoe+hfZzbX1Yx5m/n9oFT7O2bqX1X9N2k3VLHVijW8sPcvrbyqfh/
j030GQ==
             "]], Polygon3DBox[CompressedData["
1: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
+22pPku8Q3y3Jvn7R+3k//9Y/xA/kfgg8V/Be6idgRvwJmpaju387Q7+9hvx
Pdk/mv3+YN6PTct8OGYTvcr6vEub7dmfrA5/PmEVPc37LX8+URW9YlqOeY+2
X3G+5znfhcQfIL7pQPSZDevo8c+2o79PQ/t3af8l7Z+j/QV19J9NBqLXqG+r
R6thqmVuZH3AsTeAH+GYfZvUQz+2Uy/v36Re+r2d/PGtXrSpQdq+5HjK8bsT
/7rUI44XG7Uzp43D/n+a1FM/tVOf7NeknpKPkz/ap0m9/EM79dDejiHmT+3k
90ty/W/6vlfhxyfi88/h3Dfy+RPw+d1+7o/jy0KD4azkrrwnaq1y+GonctBy
+3JqcmtyamrfagpqrZO0ojXIscm1yYGpncvpyu3K4aqleI+913Jceh/kuOS6
rHGtdRfm+g8Ev1f0PTlsuexJW9EG5MjlyuWI1CrkxOXG5djVKuTY5drl1NU6
5IzljuW81SrkvOV+J2pFu5GDl4tXc1ArnoTPXwL8PffrKT5/ButruTj5SfYn
le9h/y/iTxOfvImW9o/8i/MzeBm5Wdo+C57L9w28aTd82lzW5+2cY1X2v+W4
9dvRPOXT1BTMFc0Z1eLktNUe1BzkutUY1BrUJNRO5Nzl3uXY1Vrk2OXa1STU
WnZmOwh8cJmDVlTfYH9h+VT23zOPZP9Qxw8+f6du7r8aqmPq1vSXF+gf35T5
fnXwHeDXC7+xTdFjvy3z9z5lPld0Nz/ft+QDQ7qpb/Yu+cM/JV9dE3wn+I3i
T1kbfDf4rZIPbVnypS9KfrgW+C7wm4Vv2aLkT5+XfHId8D3gt0t+tXnhZz4r
+ce2Jd/9ruQnB5d6qtdNvXNQqZfqbuqX953HuRdHsl3FMf/tRkvel21/9pfp
Zn63JjjA/tjN8z6H7cBuOExzcXNytbMVmpxvH2Kvcv7trX/Ax7Ntzf7qbMuy
P0c7Od92Jb/8vuRXu5T86ZdSz+1W8unfSr24a8m3fi31of3Q/jh7Ozmg30ft
+qhyDWvTbiX2F/Cd8PO68SKcWr7fn02uZYlu8odDOf/fzge+6+CjwF3fR/DS
4MPA/zi+daOnHwEeQnz4bvTtwy3W7Fvd6O/z8e82fvd2/A3HEK99f7vRv48D
N44/8oLmL+AR7P/2ZfCx4J7vfzd6+CngEe3/4JXAp4JH8v0Arww+DTwyeHx5
LPAs4Ou53oe5D9OCZ+4l/3sIPI31GPha8IPgqcGT9eJ30PcwMXhi8HnEbyY+
EXha8JXge8GTg6cCXwq+CzwpeGrwZeC7wZOBJwGfD74FPNTxpBd+Xe/DJODp
wVcRv4/4FOBZe5lvnHemc3wCX038fuJTOl+CbwE/Dp7e8QZ8K/gJ8AzgGcHX
gB8AT2U+CR7e8UXeDnw8uO94KK8HPhD8O+074MXAB4B/A1eO5YN5H+wr9mH7
8jryo+zvwLa474JjUDseGD0VyzkmtzPHjc01LEj/2pv9v9WbON+6xNdqp0/Y
N3yHfJc8h/6cpRzj2F/OfMDvCJ6snRzaHMXP11tyrNfE/hrdtPUYa7Dxmnz+
1yWfXrSb/u07p2bovOz8fFp5nzcr/rlPS72i2Gh+vnY3+cT0Tb7viyU/8vrM
t1fgb2t1k887l69YjtmZ830O/on289N+B/Cn4B/A81r/gj8D/wieD7xfL36Q
tnMjeP9e/B8Dzp3gvXrxj/xV5m/vo/fTe6j/w/fZsWpDtg2cP5rMN847L9J+
z178MH/6LMB79OKH+QO8APifJvfO72I+5HjnvXFOcW7ZtPDdn5T6cAPww+AP
Sj1sjrNhN59v7vNyuUb9KdP2cw1ei3rSDP2MiY5Ljk+T9TPmOPbM3U4t4z33
Pno/ze3knBbphLOSi9Kzt3Innju9fHrKnPOGtuM1kyObtRPOSu5MT+NGnXg2
9TrqgZvNd6sdb5w1/kzgKdup/b0H3gufr7nis2WMtcaepp8ab9du+re5nDX7
Yt1wANbycgBLd8N5yA1Yky/czRxnrX4KeN5uav6le9mWYjt5MLGD2J619iHe
5e/7gO8D7+6cwPxyTMkxHNMc28xhzGUuAU/RT45irnKzNXw/OYy5jPnrlOCj
7BMcf4E5rmMd+B21JDmLXvrE5J3kyPYVa9x1B1ITWfs6Jm1UcpwRm3BWz1Xh
iOSytgVfBd7YPkL7XcA3g7d2jrc2MI+o4tHQq7GpYzh4dfCr4G3Al4LXs6YF
b+KcAF4N/Ap4V/At4G3M4cE7g2+qwuHJ5W0Pvga8Kfgj8G7gW8HbWiOAtwNf
Dd4E/CF4I8dE8Crgl+QSwdfJWdvnwRuDTwSvCn4ZvBn4dGsU8GvgLcDnVvG4
6XXbHHwWeE1zKLlI8PXgLRxj6oz5jv363wblDp3ju+HgxuxlznHuOZz4Mk3G
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
jwDvaW3F8ePbf73X4HPAY4EnAa8B/r1O7Xus2tFgOAq5iun8roOp2cazv3dT
y51rzQWe1Htb6olxrM/Aa4F/rlObHsn59h5MjW3tumcntffX5qDgg8G7D8bj
/EoZT1x7uGQZX2Ys49drpb+fV/qDmrprzS5pRWvX87tQeR/0AltjWzvu30nt
bU1vbXlAJ7W+NbO18b6d1NLW3NbyB3VSi1uzW5se2Ektb05o7b9PJ7miNbu1
/t6d1PLW6Nbee3VSu5vDmstuBd5wMBrg0iWfcPyzRl+M+Dad1O7WwMuBd+2k
Nh6UUwGfBz4EPBr4YPBl4MPBf9bhCo4H7weuiO8KPg18AHgAvAv4VPD+4A54
tyFZX3zgYPxcB4EvBR8GHg68L/h88KHgjcGvyU2A5x6MX2Vv8LnggwfDqcqt
6hFy/dxZxMdwvnHsGow+87jcA+3nGozfahj4WvAw8AhNajs5IrmicYkfSfw6
4kcOJuc399+pE+5CTmVx8LadcC1yIIuCt+6EG5GDWR68WyfcjJzBMuCdO+ES
5GyWAG/XCZcjJ7IkePtOuJKz+fwxuZ6JuZ7VB8OPn24uTfxoubImXIeclNyU
fPkJxG8l/j+5K863HfgEtRnwH3W4n+PA/xkMp7EseJdOuA414qVKPqF2rEfC
tXOXtuKd0KPuWjk91nrXHyvjjZ5HvYdq3sOV8Udv4VMlHzenMrd6ptQTw8p4
rcd8qlJf6D1/osw/5tfWG/ILevPNT+9rUj8vVSUnMh9UQ1ZLVgPWiy1fobff
nPH+Jpqv2q+as95YNWa15lVLPnpLGX9XKuOxaxBcm/toK2sTfijz9+Ot8DOu
4XAth2sgXPurR+qhKn3Qvqhn7srC3+ml0zP1oN6qIfFSqfHfXsVzp/avZ+yB
Kpq+XjI9CHdU8eDpTdCjcCd45yHxLpzCc7qryjvku+QaraPBKw8JH9gtfNra
hc+TLzy28HOOdQfUmQv1UD9Wx/N3ReET9QKqof9U5iO9v3eV+W+tMp/oKdJb
pCfCtT7W065VsMZ8qIlHxbWSrmnQu+IanY1KfuTaHT26roV+pBXvrvXyZgPx
yDzSxKPr2veHW/HuuubGtYB6YFyL8+8akIF4aFwb4poB13LroXEtwfOl3jqu
5B+ueXEtpGsaXAvzUskXTi/5sp7duUr+oJf3q5LP3Vfyv09Kfnh7yd+O6YQv
dU5ybtLzs1bJH/UC6eFZqeQH/3p7+vGO6Blx7ZSeEb0jerZcO6WHqyr5gGuf
5H/WqlLDWcvpsdRraf1kvabHS6+XHjDXVj1Q8gn5IPke1yxsVfJN1zLoMXJt
s2tQ9B7pWfK3CfSE6GXSo+RaTz1Repf0KLnWUY+Y3iXXUMxU6lfXVrxf8p/r
Sr7rHHJs6X/OLa4J3q8bvda1wt1uvLVqxmrH4zfRUheUs2T/0TLeP1VlPlAD
+VeLkdMiPnMTLcQ1566fVZPSi6EnQ62qzzasHY1+Kdc6lvH65Srz08RN1q6v
6ZzN/nBsJw+JxqzWrGYhNziVOT344yZ+4req6I3qM2pe6tfT9aNhqaOpp6lt
qR/M3g0/qDfiycJR6tfR26B+s1k3+q3a0gxNtJzFy/XMw7Yd+5uwLaO2CT6k
HQ1TLVNNQS3j8k60htmbtNXzM0f5PnKhaqKTF33G3yrQMzt5P/qMXkxzmkn7
4TT1LehfkOt8rRdtpsffTiL2ei/aipq4Xo1ny3zzUZX5UY5THVA9UO5z8sKX
nt7Oemn9ua5dVmNTu1QjklvVw+R6cDlQvYPqL3KjT6mRsP9Klfn9iTIfv1Rl
Pn8OfIb8VpX5V8+vXifvmeujZ2E7oZ17tngTDlhfoBqj3LB6k74O/R2Lgp/p
Rat5u0q+Ir/n+LmS96CJh8rzr1qer8/UZ3se2zrsP13mV/uH+Yn60DzdcMB6
X9SP5u/mnkxe9K8Fu+GAvZ/mHAOdeETMRdr95DMTFj1zoB8+b6Kif+oJ0fsu
Z69XRE+IXubvh8Qr8p8qY7lroP09kiHOT+AJil6qB8L374sh8Ubo6dB7qgdF
r8ec4Db4NvCq4GfqcHmuQZBPdY23a739DRd/X+WnJnr6b+zP4vl70WrUdMxX
1MBnLJ+nNv5JL94K+5T6nt/J76ZnVq33xyb6/a8cP/Ng7oH3wnug1vtDE7/A
L17HYL6T3817tkO5Xrnfg1rhH/9ukt+NXPjQr5v4D76s4le4qpd8WU3MfE1N
UG3pf51ohR7jsWq2cqsP9KId3lulXpi09J/dS741gjVBJx4OvRzP96INflUl
/1KDcS2BGozazAtqnMR/qpK/PVjyV3MI65sresnX1dTMHx8q+fbDVfI1c96R
OvmO5sI/d3K/Py/385smfgk/X7/GwyV/fqRKPq7nZeYyHuuF+Yv2jw3JOT33
I/Yp8KNV8kU9M6610AOkl+bvTn6LQU1dbV3Nyd+K8TdK1KLWbvKuXCznAl6v
yW97+JsK6zeJOzYuUd6nq3upd9QwzX9nKfdvjpJ/v9jLu+I7cyz4yU76q54N
vRt39pLPqpFaP91b6gtzJOtPPVl6sfUI69U6FTx8JxrDCr1oYv6Wjp4XtbLT
fKadaPQrgY+3RunEg7Ug+KVe9iv+dpz5fS9tPafn1kOll1sPkt6qi0p/f730
p2PL+387eH7HVvCInWhWqzj2lnrp7ir18Su9+L26tDlhMJ9ZlfFjXmIv9+L3
8hq9VufMf+fOdn7fw2M81jYL0/bGXuYCNWLrkdt6qYfVGKwf7wFvD76tSv17
dy/1gxrwv1pwL/W8GrH15XW91K9qotYz1/dSn6qZWk/c0ku9r2Zs/ammu5Tv
bida77W95KrmrNZTd/VSP6pRW9+qCfrbSHpu1Arv6CX3Mgezfr69l/dXzdl6
+US2upN7tmgvmrHj03860ZKd45zr9MAtTvzmXvgKOQ/rfz16eu314Ondu6GX
+ltN2PpXzdLfKlKjVMvUc6a3Xw+fXrRuGS/O6MSL4G9e+dtX/uaTv+fzbi/P
2j5mX9OT51oPPWl69T7rZa7SP7JIk3fId0nPnPnEyk28O/4mznwlf9Cb4G+G
+NsharquXVATVus15zD3cI50rjQ/02ek32jGfvINf5tm/TJ/TtbEq+Rvlvj7
PnornKvn7sZjcX+p1++pwufoQfW3ZvRA6k1dzvm6nd+U8fd8Xu3lXvtMfDb+
ZsNN7fzmgr/lYD5kbuZv+MxWxouL2jmH5zKHNJf0mrw2f5/FXOOiMp7ol1mv
m3p/wZIv+lsr/obOsr340VwfZI64bMkX9Q4cUbB+mlm6yaHMB9WMXdujp1At
WY+Oa1f0ROrdUZN0LZCeTrVKn5HPSk+o31//ij4qPUFjN/Hg6MXRU2W+qidG
b4weqXGdq0p+90wV/kMPp2t99Czq7dTD6dpZPVZ6O/WAjlLmJ72hZ5T56vGS
TzzWCx/zdBW+5T1zriEZYxxr1NT97TU5Mbkx/Tf6KPV4jdHEQyQ3qKZu/jR1
E61RD6d+az2nrsXRM6oXVQ+pa3X0mOot1a+jj9I5f/QmnrChZb7XK6bn0d8S
0lOlF/JF8412PMTmX85nQ8v4ab4ytB+/4uqd8I9v0ebAIakXXO/3ehMvxONV
1uO8Bt5vSDwSeiWcg50LnRPlRp4mvuGQ1LzWvuac5p7WDHJNE/bjBVm1Ez7y
zSbrBZ6ssp5v1H78fgt24v8bpR+/3wKd+C9fbqLtWtNb2z8P3mFIan5r/1o+
FjxdJ3415/yHCj9gPWlOYG6gB1Ku5/0m67Veq7K++o0m6xWeqLKeyd/Y8re2
1MxcL/5cE61ZTldut9ePf276Tvxw5hAPF75CLuiVJtyDHIVchb/f5drzzVrR
vcbvZ+x1DJY/NSc3N3eNmHyHNZa1ljm73KD6mrmYmpva2yT9zK3OsfK1zzTh
GuRI5ErG68e/ukInfO3E/fhR1+iEX1YjVis+oBV9caJ+/K2rdcI3v9rk3nkP
5WLMWcxdzHn+KvX6g4Vfkd82BzIXMqeSq1RjVmveohU90pzhrsK3yGWb85n7
OebJHTvmOfY5R8ttO0ffXfgYue0PmqwPe73K+gFrFmsXayi5RGsoaynXeMo9
2ofsS3pgnN86/XjHpujEb/gZ5zsT/EkVv6weJ+tXveh6n5yjnaudo+Wu7YP2
Rfuo3mA5w+U68QDLJepP0sdsDT4B5/6yyXqHz6v4Xb9osp7/syp+WT3Ei3Xi
WdZbrEd4iZLv6h3+qMl61zer+Hsvs007np2hTd5Z312fqVqCnuIlSz5svvU5
bc7i+E+r+HffbdK37GOuf32niXfqxSrrP/UsL87xeqT1MttH1ij5m9rEBiWf
Mx9VK7CP2FccQ9QqPm1y730G+ovfAx8FfhU8nt+tidffOUM/np4t/eB62/Vy
WTNaO1oDyn2/0ITLk7OTu3uxCXcnZyd3Z41orSinILf9YZP1iG9U8XM55jv2
O2bLhTf9+Ftn6MQ/vFwTb73P3GevJrJ8J++MWoljlGOV74Raihz3sp14xOW+
+/3UBtYI1ma+YyuUfEqtRE+4v5XmGKZXfK2Sbw2W+UE96M7CR8pnftKEW/iw
il9bPtKx0TFSfvLyXrhGOSG5Iecg5yI5HrWAP5rkvubA1sLec++9Y9z4vfj7
Zu7m+8pnPFpHa/c3xx6u85kflvdH7/hXTfxxX1Txn//SxI/+B3i2wfgB9+jm
eZoLbFvFmyA/7O/7OaZ7/c4prt12TH2ifB/XjspJPVXi8q32AfuCz2T5Ju+g
76J9Zknwd0387D9W8ZPLfy1Y3kfr4e2qrM3S/+XvdYxbxtNhZTxwDnMuc4x3
rekY5fMPKv3Hd+zN0p/01jsnODc45vhbHI45jj32MdcyOcc41zgH6JV2DYdr
1/Xgubbje673Csc281RiPzfxv/8OnnUwc4Zzh31Sb7VrFOYs/IP1rn10hlJ/
6n13zcIcpT50LYP1sXyFnkTr38nK+Hd6md++beK9/aGKH1+P9pSlXrO+1POm
902Pt2sphpb36YQyn/sO+S45BumVdMx07JQf1Ls9O9gfXNPzv2Iv9etUJb+X
P5mD+JBST67cy5qcucv1ulbHNS4LlfFZ/vL3Jm2tQeVOHJNeLPOha9W9Z947
++BivYyhjqWOsa5FGFaHm5aj1hvkmO7Y7hjo2gjHYMdi+7RrEVzj4W8d6ml3
7Yd93L4up+HaizH7GQsdkx2bx+pnbHaMday9shc9UA+uet7/6nif9EzpnfKe
e+/ts66NsM/+WPIP6+ux+/GyOqY4tlh/m5/IYczdi595zm5qCPnKf/tQFc5m
nl44ly9L/uXaETkJ8zFrfGt9PbKjtzMnOTf91uRZ+Ux8NnI+cj9yRAv0MkZ4
r67vZOyQM5I7kpNayPy3idfN3EXvzq9NvNz2AfuCnJXclX18Edo/1cR7Z/2p
dqJHTa+aer9+JMcfvUMHtuL3Gb0fL7FzonPjjlW8Spu28nuGjjmOPa6RWYLz
H1nHm6YnTG/YGP3Mpc5hzmXOec59zrmuZXmiCRcpJ6m2M24/c7djvmP/OP2M
7c7pzu365x5sRUNRS/k/lyuI/g==
             "]], Polygon3DBox[CompressedData["
1:eJwt2XfATuX7APCHd9s7skdRttJSqYgGaShtRWmoNJBvQsvK3mRvRdISlVUo
IykNZFRSVFaIjPp9rt95/7jquT7vdd/nPOc559xD5Xadbn4ibyqVmpYnlcrw
/y5ZqdTatFTqELxevj4zlRqUk0odZOeIfuw4W6OukjY90lOpdmK1mu94NntS
fotYwVZlp1LDdPyB/DF/O6XdZ2wEW8yeYP+yzdoe1Hcbdq34WNvPWYa/PyZv
KZawNSyTPS6/QSxlv7ELWW/5HeJT9j3br79b5a3FJ2yJ4zzs8zO+x9f+tlS+
0rkMdS4LeUd9nGSfsgHsbfYQO8Y+Ya+yBawD+5sN0edxfdUXQ/T3r2OuVjdc
3SJ1j6s7ra6zWKPmoGt6nbp16gZre4zVE3XFU/lSqd38iL/fo+3dYpWa5frr
p7/58gf0d0RfK1h/9hZ7kB1l69X2ZO+yd8RT+Z07m6XvHxx3q2jhGAPZH6yy
qCQeYrNZnfiu8tWOf57+ZrJa0T9byRqwWax2fH+2itVnr7N67BH2OWvI5rC6
7GH2GTufzWcXsifZBtaIzWXnx3Vi69hFbDqrzu5jS1lNNoPVYPezZawWe4Od
F/cU6yiG+R7zWMO4p+Tr1V2s7vb4neQrfP9CbKhrfCcbxt5gxdgI9gR7l21h
57P32aNsXtwrrBZ7k7Vlr7GP2ZlsPLuPjY/zZWXZBNaRvck2sdpsPnsm7iO2
hzVhK9nT8Xuy39hV7FP2FPuY/cwuZUvYY+xt9j1rwN5lk3zfir7v7fwDVk3N
4+Id+WZ157H31D3JPmI/sUbsY9aJfch+ZJewj9hE/VXQXxu+kFVRM4GVZ7ex
91lVNplVimeNLWJnsUXsataTbWPXsMWsGevFtrNr45isOXuB7WDXxfdil7Gu
7Ft2JVvALmVd2Dfsivhe7HL2LPuOXRW/GWvMusW1YU3Y++wq1p09J0a6Nz5i
17AX5TvVXa9uIWvCnmdbWTP2HruC/S+uIWvKPmBNWY94llhzdn9cG/ly168c
m+j6tWYD2GLmkKmB7DY2iC1hBdhgNkV/1fR3D79bDFQ8lZ3F7o17S9052k1j
Z7O20Z6dG/cUu4B1Yl+wS9hb7KJ45tmX7FLWRgyO58VxC7IhjnsL68veZj6m
+rObfejD3mLSVD//uZUNZB8xr5HUINaKvcxeZ/6X6s1uYr0lb+ZNxo6+7Eb2
CpvLnFKqD2vHJrJPWHk2id3LRrF3WCk2ht3FhrN5rDgbGc+H77aY7WfN2eK4
n9kH7E92Nfsgnl/2Pvud7RWtXdNn4p3P/op3n7pl6h5nC9hu1pi9zfqzH1mp
eA+zXfHss9fjHlV3IXs9nmk2n+1il7EF8RyxhewP1pQtjGeVvcV+YZezt9jD
bHY8G6whm80eYXPi2WAXsDmsM1vKDrOWMUbF+4AtYvtYM7aIjWBZLvAVfBLL
H9eTFWLN2SxWgo1mhdk1bDYrzsawIjHOsjmsJBvK/pNfJMawDDaWlYxxlrUU
vV3T8aw0uynuGXXl4n3IzmA3svmsLBvJstmVbDIrwF5lP8tLi65sj+8xnGWq
a8wuF887xjhWirWKe0vdmfG+ZnFDXczGxsd41tgueRnxLNurvy5smfyIa3UD
W85eZltY4Rgr2DbWIcYa+Rp11dhM9py6dXFzi7v8bwPrztbL88Szyr5gD8az
GeOdtlXZDPYAmxrjHavCprOHYuxia9lZbFb85jHusa9YTTaP3c1GxLVjJdgo
9rzjfsHyinvYl+yeuK7yBepKstFxX8VYyDayc9lc1p5NinGbVWCTWdeYS7Cj
rBVbwf7HVrOT8byw1axbzNnYCXYLW8VeYptZIfEo285eYJvk2aId+4a9GHNA
eYGYV7At7BW2VV5EPMZ2sN7sB3lR8TjbyfqxnfKSooS4z33Ql233ubjopO4n
dT3YBnmauJdtZM+ylfJ/nPNxcae2PdmXLF20VfeVuj5sm7yYeIL9yHqxr+VZ
IjP61Hat+dVrXmjLY0wyv8qUj3FNC8gvUDNK26Ixp+Pj1C2LcSrmz/JTIl6k
Nflu9rz8uDgmryK2s87yk+I/+bniF9Zd/pV4W/69/gaycvKvxSK2g41k1eT/
RJ+sajjrIj8RLq8mdrKu8tMij3OpxX6Nubr8W993vHxFzIlFIS/4f3mWugZ8
n7pX4txENjuP7Y+5dXYyx+whn6jdJJERg0O8X9Rdwo+oG6DuRtbB79A+2ouz
Ym7Lt6vJiuul7i75RrFA/p2+BrCy8g1iDtvAXmEl4pzDWX3Ha+zzFWJLXBvW
kDX3+RrxjfiC1WONfL5UrPY7HXOaz8YcQXzu3F6MMSrmLTH2sq/lW9U2jOfP
36/1+TqxOX4T/Z2vv6t9bia+j/Nm57EmPjcVX4rX2Zf66u2cS8rX6qcTG88m
iDT1m/iy+C3k49XVjGsqprLPYh7CCsi/iz5ZA22u9Pkqcb1o7/zauZ6NRA3X
9Fe2Q1123Kva3i0/oJ/98V3jmVK/OO4vvs3/M8VSdXfK73d+Q33/VWoquhbD
Y73Ef1NTTKxX96D8oNgrLxG/CXtIvk/8Ii8sPmf3y/8Sf8hLiY3skTgXsUde
XHzBOsgPid/lJeN6sYfjNxPToq+YY7GCcY2d38CMZC0Ta5oc1+Ic1tL5tnGu
V4tSsS4QLdht8ktFUfm+eB9oe0K7t/RXL86NfcKOszdZHXYkzpGdKb5hHeVt
1fWP+a8+34+x33W+j70ac135Ga7Vq45zLL6zduXjedX2ifgt1L0R398xvhJn
OOd2bIy267VdF3N8/bVnY2P+Jj9bf2P1t0v7H7TNEEv0d0ecs/hZXlCsZm3l
P8Y9KL9Q3zf7fEt2MjeOOXKjWMOJz/T/gBjnGBsco7q/jXOMn9Vu1TZdfKy/
2+V/x28iLxfPYayr5Ufjd5eXFd/G+lv+p9glLxT3KrtPvjPuVfkFzuVGn28S
Dzru5JizO24dx53quD/Fs6TuInWtfb413ksxB4l7mR/V30A20Pc4qW2H9OT5
jEnqAHGCdWbF1K3KSq7zXO1+ZDtFf/1ui7Uu+0E+VF1R/V0oFvq8Js7Rsaq7
9ofZfnlL+SZ/ezTuR/ETe4qtYvfKa8f60ndoG+s7UVvb7TGHU7fNMYapKxbP
S3Zyv8d9f5W6kmr2xBwu3ofq5vjbOfHbik0ZyfMbz/EFMRcS77I96iaqK5+d
3C+j05J7L+7BsY77E3tH3W/xLlFXIe6DmGPGs83GsjLxe8T8lO1iY1jp7GQP
YGZacu/FPThRfxtYb3UfxjpC3SHXNC3mcM7tKn6ajdQ2I9aX7Lq4Z7QdH88q
6yV/L9b36vZqmx7rRnXX8jR1r2Un4+pXacl4HOPyonzJnsffacm+Q+w/rGd7
s5PfoYy2nfXRNOZgoqt8buwD+NvPWcn8YEfuGB1j9Upta2g7298/jnFA27PZ
j2pbxTMvry+qscxYR8V6RV0B5zItO9kH+T13rhFzjrX5knf2kxnJ2BZjXAf3
Vd6Yi2p7JT+l3xHafi7GxrtUTWeWLm+prq/Pm9hz6m+Q7405l7q/2Vx/qx3P
C5vIvmZ9WFbuO6efc3jXub0nRjmXTWyUurWxflb3X+yRxbMV7yrWj+XEu4BN
ykiOG8fPZjeofUl/17HY23s5Mxn3J2Qk76V4P73suy1jrWK/JD3ZU4u9tVe1
/UfbZ1hRtlL+u7oV2h5j81gtx1jOboq9h/Rk3y7271ayO+N7pSf7cbEv10v7
ffprz07E+igrWau9l5bsScXe1Azf95u47x1jXewNaJsnxnc2kq2JfQWWinGR
9WEfxV4SO6i/8iwj9iv5DY5ZQf5rrBHlf6qbqq5KPIPxLLCtbAgrEuNTPEvs
9vjNYg6t5rdYN7LD6cn9FffZrjhntjfmPqwia56T/IbxW3bR/hr5L7EOVfc7
m+xvldTtjjUi+4NNYZVzx7dBGckcLOZi3f0eX7HB7NPY41B3PCuZ236alqxp
Y237pmu1hU1Xt1ndIHWF473OZrAtbDArxK5knbV51Ln1FPW0bcF7sk6xnoi5
IasU94HPd8RY7W+VY63F98mrx3s25mYsH8tQ15j9w16MeSPLG2Nv3OesF+vq
vDc652P6ullXm/y9oLoC/t9M3X/q+qobHu8d51tb7aCYSsqz1aWpuyzuN3U9
1eWwdHZ5jN/shZjPxHxP3oMPjeM4vyHa/6uvGqJvLONi70Wckp8d61eWR95f
HJVXFL3YaX0MZqfl1UUfllfeTfySu+6JdeMf6go4l/wx/3Dsf51LH+fxP3W7
c9eXscbZ5+/51eWL95m6JmKR3zeNHfW5btxH2j6lbSFWUF3zjNT/P6z9WDo7
Ge+0mHvGHEjbmY5R37W6yzE+Unqh/Ex1VWL9GPOueLdrW45Vi/0VVppNjvc4
OxVjoDjguM/GfEv7c/R3S+zB6K9OrIfFuax1vItYXXlebY9oVyfGKW07xdgd
46i8doxJsd/PRsQ4oG0dbQfH7SPPVHc65irioLpu6mbwmupuVfeeunpxj4vv
5f/F2o394PyHxbHV1Yo5ejz6sUch8rCabEBMD2JcEEfkFURPdkrbuY7zqGMO
U3u1434Xa2T2CBvCmrJvY2+XdWQjWDP2fez/sS5sdnoyjsR4Mp89zsbEPgrb
Evtw7DE2KvZb2ObYh2NPsHGxt8K2xv4k68xmxj4K28mWsVfYG7G3xw6wpexl
Nif2ANn+2ANlT7HJ7Hq2LfZK2dNsKmvBtse+KHuGTWct2Y7Y72UvsGlxz7A/
Yk+ZvchmsLvZn2wJe4nNiv1Iti/2bVl3Npa1ifc46y5+y12zx9r5QOxRsD25
6+lYnx+MtT07JC8rurN/Yt3N/pKXi/0ddoL1ZYfl5UUPdjL2X9ivuXsFsS+w
P3evtGp6sv8U+1A73FM91O3N3Rd4Ut2h2GdgB3L3grqxv9lC36Ob7zE87mnf
45fYy43nlY2Me5DtZovYc2w0u439yj5kz7PXYoxje2L/U+zP3b+K/aaj8V5l
f6Yle4dPs8NsNrtEuwfYp6yxvIzzrhx7nLH2cZ9P0H9ZVjXew+wMNik72bu+
Mj35N434t40jai7nl8V6IydZ3w7Nn8y1Y879T06yHhgX6/gY93yuGOOAc26X
uz6IdcKJnGQO/lr+ZF0c6+PDOcm6ehg76PPaeAdlJHPmmDvvj70g+Unns4DV
z07WorEmPZqTrINH5E/W47EuP5KTrFuHs0Mxj/M5j/hA24v8vYLvUt33vZnd
Iu5UdyD2oGJu5Rhvq2ug7jTbzSrEGMfas5OxhycvEvMB1oZV1l/N2I+LWtdv
JqvKasfeG6vEZrMi2l7CWscYHft9Ocm+Y0Z68m9v8W9wG/Ml+50l0pN9yNiP
/C5f8i4+oa+zxNmisXNep88pPq+Ocdu55Jefiv2r+B0zkjVqrFVn+d0vVtNe
X5+4tJfLS+ivdGYyJsTY0Cp/MlbkZCbv+njnN2N/xrgf46z28x2jrmNcG3NM
ff/EGsQYI28Y9zPrGNdB1M2X/NtYg/Tk3xbi3xj2sDuykr3A2BNs4W9vyOvw
B+K4MQ+IfctYqzr26PzJNauXN1lPt4o5pTiek6z3xuZP9j1i/+PvnGSPZGS0
02d+fTd0zJGOVURe2jHK679N/HaxntFmJM9Rd5664eoKxd61yMfOZyNYYfl4
UZxdxiayMrEnLQrG/JKNZsWykn2Z2J85lpPsCY1yLq/xYuouVTdBXems5P6r
4VzaqblfrFBXnp3F2srLOL8p+qnEzo09XVY+5qdsqvZV4p2rv3n6qyGfIirH
u5nNZdXlFbU9J9Z42pbTdrq243hRdY3UjVd3hryUurLqblVXSN1odWewcuw2
VpiNiXuXFWMtWCYbxCZpXzbGNv3N0F8leUl1Z8Y9rq5grCHUdXA9pqj5Vl5X
3ZTM5P4rk5k8f/EcLnENqrBasSce7w61s7QtyoqzliyLDWHFWUnWiuWwYWxC
vNucSxPHmeYYFeQTY24S4yybzirKC2tbNDOZo8dcfbC2xViJmHezbDaUrXHO
PbV9KeaF7vvl2k4W5WKM1t9M/VWW/x9QmUdR
             "]], 
            Polygon3DBox[{{2318, 1591, 1262, 1263, 1592, 2319}, {2378, 1654, 
             1247, 1248, 1655, 2379}, {2559, 1516, 1318, 1317, 1610, 2329}, {
             2120, 2119, 2602, 1599, 1600, 2603}, {2270, 1493, 1598, 2601, 
             2126, 2127}}]},
           Annotation[#, "Charting`Private`Tag$149191#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rsvZVEUB+DNvcZzhqAml0pBJjNoXPEHMI3SdDpXMtN4v4WEWkEpChIR
rzARYSJCKQrGeL8SUYhalPOdTHJ+51vrJPuss3dOovVn84+0EMKY1Ciiuszt
ieMfQijgFEs5xyqusZ57bOIxv/OWKb6yl++cZEZmCDMs5gLL+YtfeMhdRoPr
5FT5lUXSEQvhj76TZ+ziX3bznD28YC8v2cd+uVIP8JqDvOEQbznMO47wnqN8
YCoeQrqZSXnUV7NYvvm2E30DD/iZm0xwnoWcZowTfLPnHr6wjdds4REb+ZtJ
rrCSsyzhkvXPrDUznxWMy0F6CJ/0+/wYnTnzovcwlzvM4TazucUsbnJDoqNd
pzFhlRlcZjyaSdsPi3SFdg9jaf//g38glEBL
         "]], Line3DBox[CompressedData["
1:eJwl0rlKXFEcwOETGTUWksIt6rg2IuILCEpwi0viMigB991uJo1L49LYTRQR
EZmBEEIQ9Qn0CbQXtLYwpVhoKX4Xix/fOXDhnPu/t24ulUh+CCHsaC0nhHab
RTboJj+EYft7zvCJqejhjyFs8hN/sZpZNvOcrWzTpfUPXnOed/zJ/9ziC3eZ
66yaghC+cEvFWtGwxnJDKOE4SznBMk7yM6dYzmlWcIaVnOWc4tbzrOICq7nI
Gi6xlsusi87L8/7cVr1WldCpOxYxwxjTfHb3DT4wyVvO8oqjHNGFdQvP2MQM
40yzkBt8NdPoAzxymgXm0OiMdQ1F82JndIdYCIP2JxzgP37nX37jH/bzN/uY
ZUa91sfs4RG/8pDdPGAX99nJPXYwYQ4dOe//wxvZ3Tm5
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1668, 1961, 2609, 1870, 1667, 2610, 1871, 1669, 2611, 1872,
          1670, 2612, 1873, 1671, 2613, 1874, 1672, 2614, 1875, 1673, 2615, 
         2399, 2709, 1674, 2400, 2710, 1675, 2616, 1876, 1676, 2617, 1877, 
         1677, 2618, 1878, 1678, 2619, 1879, 1679, 2620, 1880, 1680, 2811, 
         1962, 1881, 1963}], 
        Line3DBox[{1682, 2401, 2711, 1681, 2621, 1882, 1683, 2622, 1883, 1684,
          2623, 1884, 1685, 2624, 1885, 1686, 2625, 1886, 1687, 2626, 2402, 
         2712, 1688, 2403, 2713, 1689, 2404, 2714, 1690, 2627, 1887, 1691, 
         2628, 1888, 1692, 2629, 1889, 1693, 2630, 1890, 1694, 2631, 1891, 
         1695}], Line3DBox[{1697, 2405, 2715, 1696, 2406, 2716, 1698, 2632, 
         1892, 1699, 2633, 1893, 1700, 2634, 1894, 1701, 2635, 1895, 1702, 
         2636, 2407, 2717, 1703, 2408, 2718, 1704, 2409, 2719, 1705, 2410, 
         2720, 1706, 2637, 1896, 1707, 2638, 1897, 1708, 2639, 1898, 1709, 
         2640, 1899, 1710}], 
        Line3DBox[{1712, 2411, 2721, 1711, 2412, 2722, 1713, 2413, 2723, 1714,
          2641, 1900, 1715, 2642, 1901, 1716, 2643, 1902, 1717, 2644, 2414, 
         2724, 1718, 2415, 2725, 1719, 2416, 2726, 1720, 2417, 2727, 1721, 
         2418, 2728, 1722, 2645, 1903, 1723, 2646, 1904, 1724, 2647, 1905, 
         1725}], Line3DBox[{1727, 2419, 2729, 1726, 2420, 2730, 1728, 2421, 
         2731, 1729, 2422, 2732, 1730, 2648, 1906, 1731, 2649, 1907, 1732, 
         2650, 2423, 2733, 1733, 2424, 2734, 1734, 2425, 2735, 1735, 1964, 
         2736, 2493, 1736, 1965, 2737, 2494, 1737, 2495, 2738, 1966, 1738, 
         2651, 1908, 1739, 2652, 1909, 1740}], 
        Line3DBox[{1742, 2426, 2739, 1741, 2427, 2740, 1743, 2428, 2741, 1744,
          2429, 2742, 1745, 2430, 2743, 1746, 2653, 1910, 1747, 2654, 2431, 
         2744, 1748, 2432, 2745, 1749, 1969, 2746, 2497, 1750, 1970, 2747, 
         2498, 1751, 1960, 1967, 2748, 2492, 1752, 2496, 2813, 1983, 1968, 
         1753, 2433, 2749, 1754, 2655, 1911, 1755}], 
        Line3DBox[{106, 782, 107, 783, 108, 784, 109, 785, 110, 786, 111, 787,
          112, 788, 789, 113, 790, 114, 268, 791, 115, 321, 269, 1147, 285, 
         116, 306, 270, 1162, 314, 117, 1138, 271, 118, 792, 119, 793, 120}], 
        Line3DBox[{1757, 2434, 2750, 1756, 2435, 2751, 1758, 2436, 2752, 1759,
          2437, 2753, 1760, 2438, 2754, 1761, 2439, 2755, 1762, 2656, 2440, 
         2756, 1763, 2441, 2757, 1764, 1972, 2758, 2501, 1765, 2000, 2001, 
         1984, 2505, 2817, 1995, 1766, 1996, 1997, 1985, 2759, 2499, 1767, 
         2500, 2814, 1986, 1971, 1768, 2442, 2760, 1769, 2443, 2761, 1770}], 
        Line3DBox[{1772, 2657, 1912, 1771, 2658, 1913, 1773, 2659, 1914, 1774,
          2660, 1915, 1775, 2661, 1916, 1776, 2662, 1917, 1777, 2663, 2444, 
         2762, 1778, 2664, 1918, 1779, 1973, 1987, 2815, 1919, 1974, 1991, 
         1992, 1990, 2504, 2816, 1920, 1976, 1998, 1999, 1994, 2818, 2002, 
         1921, 1993, 2502, 2665, 1922, 1780, 2666, 1923, 1781, 2667, 1924, 
         1782}], Line3DBox[{1784, 2445, 2763, 1783, 2668, 1925, 1785, 2669, 
         1926, 1786, 2670, 1927, 1787, 2671, 1928, 1788, 2672, 1929, 1789, 
         2673, 2446, 2764, 1790, 2447, 2765, 1791, 1975, 2674, 1930, 1988, 
         1977, 2675, 1931, 1989, 1978, 2676, 1932, 1792, 2677, 1933, 1793, 
         2678, 1934, 1794, 2679, 1935, 1795}], 
        Line3DBox[{1797, 2448, 2766, 1796, 2449, 2767, 1798, 2680, 1936, 1799,
          2681, 1937, 1800, 2682, 1938, 1801, 2683, 1939, 1802, 2684, 2450, 
         2768, 1803, 2451, 2769, 1804, 2452, 2770, 1805, 2685, 1940, 1806, 
         2686, 1941, 1807, 2687, 1942, 1808, 2688, 1943, 1809, 2689, 1944, 
         1810}], Line3DBox[{1812, 2453, 2771, 1811, 2454, 2772, 1813, 2455, 
         2773, 1814, 2690, 1945, 1815, 2691, 1946, 1816, 2692, 1947, 1817, 
         2693, 2456, 2774, 1818, 2457, 2775, 1819, 2458, 2776, 1820, 2459, 
         2777, 1821, 2694, 1948, 1822, 2695, 1949, 1823, 2696, 1950, 1824, 
         2697, 1951, 1825}], 
        Line3DBox[{1827, 2460, 2778, 1826, 2461, 2779, 1828, 2462, 2780, 1829,
          2463, 2781, 1830, 2698, 1952, 1831, 2699, 1953, 1832, 2700, 2464, 
         2782, 1833, 2465, 2783, 1834, 2466, 2784, 1835, 2467, 2785, 1836, 
         2468, 2786, 1837, 2701, 1954, 1838, 2702, 1955, 1839, 2703, 1956, 
         1840}], Line3DBox[{1842, 2469, 2787, 1841, 2470, 2788, 1843, 2471, 
         2789, 1844, 2472, 2790, 1845, 2473, 2791, 1846, 2704, 1957, 1847, 
         2705, 2474, 2792, 1848, 2475, 2793, 1849, 2476, 2794, 1850, 2477, 
         2795, 1851, 2478, 2796, 1852, 2479, 2797, 1853, 2706, 1958, 1854, 
         2707, 1959, 1855}], 
        Line3DBox[{1869, 1982, 1981, 2812, 1868, 2810, 2491, 1867, 2809, 2490,
          1866, 2808, 2489, 1865, 2807, 2488, 1864, 2806, 2487, 1863, 2805, 
         2486, 1862, 2804, 2485, 2708, 1861, 2803, 2484, 1860, 2802, 2483, 
         1859, 2801, 2482, 1858, 2800, 2481, 1857, 2799, 2480, 1856, 2503, 
         2798, 1979, 1980}], 
        Line3DBox[{2004, 2312, 1384, 2003, 2912, 2218, 2005, 2913, 2219, 2006,
          2914, 2220, 2007, 2915, 2221, 2008, 2916, 2222, 2009, 2917, 2223, 
         2010, 2918, 2506, 2819, 2011, 2919, 2224, 2012, 2920, 2225, 2013, 
         2921, 2226, 2014, 2922, 2227, 2015, 2923, 2228, 2016, 2596, 3012, 
         2229, 2313}], 
        Line3DBox[{2018, 2507, 2820, 2017, 1399, 2019, 2924, 2230, 2020, 2925,
          2231, 2021, 2926, 2232, 2022, 2927, 2233, 2023, 2928, 2234, 2024, 
         2929, 2508, 2821, 2025, 2509, 2822, 2026, 2930, 2235, 2027, 2931, 
         2236, 2028, 2932, 2237, 2029, 2933, 2238, 2030, 2934, 2239, 2031}], 
        Line3DBox[{2033, 2510, 2823, 2032, 2511, 2824, 2034, 1415, 2035, 2935,
          2240, 2036, 2936, 2241, 2037, 2937, 2242, 2038, 2938, 2243, 2039, 
         2939, 2512, 2825, 2040, 2513, 2826, 2041, 1423, 2042, 2940, 2244, 
         2043, 2941, 2245, 2044, 2942, 2246, 2045, 2943, 2247, 2046}], 
        Line3DBox[{2048, 2514, 2827, 2047, 2515, 2828, 2049, 2516, 2829, 2050,
          1431, 2051, 2944, 2248, 2052, 2945, 2249, 2053, 2946, 2250, 2054, 
         2947, 2517, 2830, 2055, 2518, 2831, 2056, 2519, 2832, 2057, 2520, 
         2833, 2058, 2948, 2251, 2059, 2949, 2252, 2060, 2950, 2253, 2061}], 
        Line3DBox[{2063, 2521, 2834, 2062, 2522, 2835, 2064, 2523, 2836, 2065,
          2524, 2837, 2066, 2525, 2838, 2067, 2951, 2254, 2068, 2952, 2255, 
         2069, 2953, 2526, 2839, 2070, 2375, 2376, 2840, 2071, 2381, 2382, 
         2841, 2072, 2527, 2842, 2073, 2528, 2843, 2074, 2954, 2256, 2075, 
         2955, 2257, 2076}], 
        Line3DBox[{2078, 2529, 2844, 2077, 2530, 2845, 2079, 2531, 2846, 2080,
          2532, 2847, 2081, 2533, 2848, 2082, 2534, 2849, 2083, 2956, 2258, 
         2084, 2957, 2378, 2379, 2850, 2085, 2380, 2314, 2377, 2315, 2851, 
         2086, 2316, 2383, 3032, 2597, 2384, 2087, 2317, 3013, 2598, 2088, 
         2535, 2852, 2089, 2536, 2853, 2090, 2958, 2259, 2091}], 
        Line3DBox[{2093, 2537, 2854, 2092, 2538, 2855, 2094, 2539, 2856, 2095,
          2540, 2857, 2096, 2541, 2858, 2097, 2542, 2859, 2098, 2543, 2860, 
         2099, 2959, 2318, 2319, 2861, 2100, 2373, 2374, 2355, 2362, 3028, 
         2607, 2101, 2351, 2352, 2338, 2606, 3020, 2361, 2102, 2394, 2395, 
         2339, 3021, 2599, 2103, 2544, 2862, 2104, 2545, 2863, 2105, 1484, 
         2106}], Line3DBox[{2110, 2960, 2260, 2108, 2961, 2261, 2112, 2962, 
         2262, 2114, 2963, 2263, 2116, 2964, 2264, 2118, 2965, 2265, 2120, 
         2603, 3024, 2343, 2266, 2122, 2967, 2321, 2344, 3014, 2267, 2358, 
         2359, 2360, 2327, 2350, 3027, 2268, 2386, 2365, 2366, 2349, 2605, 
         3029, 2269, 2356, 2323, 2393, 3015, 2270, 2127, 2968, 2271, 2129, 
         2969, 2272, 2131, 2970, 2273, 2133}], 
        Line3DBox[{2132, 2872, 2554, 2130, 2871, 2553, 2128, 2870, 2552, 2126,
          2601, 3023, 2342, 2390, 2396, 2398, 2397, 2125, 2391, 2392, 2369, 
         2608, 3033, 2389, 2341, 2387, 2388, 2367, 2354, 2124, 2604, 3030, 
         2368, 2353, 2322, 2364, 2385, 2363, 2123, 2600, 3022, 2340, 2320, 
         2966, 2121, 2324, 3016, 2602, 2119, 2869, 2551, 2117, 2868, 2550, 
         2115, 2867, 2549, 2113, 2866, 2548, 2111, 2865, 2547, 2107, 2864, 
         2546, 2109}], 
        Line3DBox[{2135, 2555, 2873, 2134, 2971, 2274, 2136, 2972, 2275, 2137,
          2973, 2276, 2138, 2974, 2277, 2139, 2975, 2278, 2140, 2976, 2325, 
         2279, 2141, 2977, 2326, 2345, 2556, 3017, 2328, 2311, 3011, 2280, 
         2346, 2330, 2357, 3018, 2372, 2281, 2371, 2370, 3031, 2282, 2142, 
         2978, 2283, 2143, 2979, 2284, 2144, 2980, 2285, 2145}], 
        Line3DBox[{2147, 2557, 2874, 2146, 2558, 2875, 2148, 2981, 2286, 2149,
          2982, 2287, 2150, 2983, 2288, 2151, 2984, 2289, 2152, 2985, 2290, 
         2153, 2986, 2329, 2559, 3025, 2347, 2331, 2560, 3026, 2348, 2332, 
         3019, 2291, 2154, 2987, 2292, 2155, 2988, 2293, 2156, 2989, 2294, 
         2157, 2990, 2295, 2158}], 
        Line3DBox[{2160, 2561, 2876, 2159, 2562, 2877, 2161, 2563, 2878, 2162,
          1526, 2163, 2991, 2296, 2164, 2992, 2297, 2165, 2993, 2298, 2166, 
         2994, 2564, 2879, 2167, 2565, 2880, 2168, 2566, 2881, 2169, 1534, 
         2170, 2995, 2299, 2171, 2996, 2300, 2172, 2997, 2301, 2173}], 
        Line3DBox[{2175, 2567, 2882, 2174, 2568, 2883, 2176, 2569, 2884, 2177,
          2570, 2885, 2178, 1542, 2179, 2998, 2302, 2180, 2999, 2303, 2181, 
         3000, 2571, 2886, 2182, 2572, 2887, 2183, 2573, 2888, 2184, 2574, 
         2889, 2185, 1550, 2186, 3001, 2304, 2187, 3002, 2305, 2188}], 
        Line3DBox[{2190, 2575, 2890, 2189, 2576, 2891, 2191, 2577, 2892, 2192,
          2578, 2893, 2193, 2579, 2894, 2194, 3003, 2306, 2195, 3004, 2307, 
         2196, 3005, 2580, 2895, 2197, 2581, 2896, 2198, 2582, 2897, 2199, 
         2583, 2898, 2200, 2584, 2899, 2201, 3006, 2308, 2202, 3007, 2309, 
         2203}], Line3DBox[{2217, 2337, 2336, 3010, 2216, 2911, 2595, 2215, 
         2910, 2594, 2214, 2909, 2593, 2213, 2908, 2592, 2212, 2907, 2591, 
         2211, 2906, 2590, 3009, 2210, 2310, 3008, 2209, 2905, 2589, 2208, 
         2904, 2588, 2207, 2903, 2587, 2206, 2902, 2586, 2205, 2901, 2585, 
         2204, 2900, 2334, 2333, 2335}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{681, 899, 2610, 682, 913, 2621, 710, 2716, 928, 725, 2722, 
         943, 740, 2730, 958, 755, 2740, 972, 769, 2751, 985, 783, 997, 2658, 
         795, 1009, 2668, 810, 2767, 1024, 825, 2772, 1039, 840, 2779, 1054, 
         855, 2788, 1069, 870, 2799, 1084, 885}], 
        Line3DBox[{683, 900, 2611, 684, 914, 2622, 711, 929, 2632, 726, 2723, 
         944, 741, 2731, 959, 756, 2741, 973, 770, 2752, 986, 784, 998, 2659, 
         796, 1010, 2669, 811, 1025, 2680, 826, 2773, 1040, 841, 2780, 1055, 
         856, 2789, 1070, 871, 2800, 1085, 886}], 
        Line3DBox[{685, 901, 2612, 686, 915, 2623, 712, 930, 2633, 727, 945, 
         2641, 742, 2732, 960, 757, 2742, 974, 771, 2753, 987, 785, 999, 2660,
          797, 1011, 2670, 812, 1026, 2681, 827, 1041, 2690, 842, 2781, 1056, 
         857, 2790, 1071, 872, 2801, 1086, 887}], 
        Line3DBox[{687, 902, 2613, 688, 916, 2624, 713, 931, 2634, 728, 946, 
         2642, 743, 961, 2648, 758, 2743, 975, 772, 2754, 988, 786, 1000, 
         2661, 798, 1012, 2671, 813, 1027, 2682, 828, 1042, 2691, 843, 1057, 
         2698, 858, 2791, 1072, 873, 2802, 1087, 888}], 
        Line3DBox[{689, 903, 2614, 690, 917, 2625, 714, 932, 2635, 729, 947, 
         2643, 744, 962, 2649, 759, 976, 2653, 773, 2755, 989, 787, 1001, 
         2662, 799, 1013, 2672, 814, 1028, 2683, 829, 1043, 2692, 844, 1058, 
         2699, 859, 1073, 2704, 874, 2803, 1088, 889}], 
        Line3DBox[{691, 904, 2615, 693, 918, 2626, 715, 933, 2636, 730, 948, 
         2644, 745, 963, 2650, 760, 977, 2654, 774, 990, 2656, 788, 1002, 
         2663, 800, 1014, 2673, 815, 1029, 2684, 830, 1044, 2693, 845, 1059, 
         2700, 860, 1074, 2705, 875, 1089, 2708, 890}], 
        Line3DBox[{695, 2710, 906, 696, 2713, 920, 717, 2718, 935, 732, 2725, 
         950, 747, 2734, 965, 762, 2745, 979, 776, 2757, 992, 790, 1004, 2664,
          802, 2765, 1016, 817, 2769, 1031, 832, 2775, 1046, 847, 2783, 1061, 
         862, 2793, 1076, 877, 2805, 1091, 892}], 
        Line3DBox[{697, 907, 2616, 698, 2714, 921, 718, 2719, 936, 733, 2726, 
         951, 748, 2735, 966, 763, 2746, 1107, 1136, 980, 777, 2758, 1116, 
         1117, 993, 791, 1118, 1123, 1005, 2815, 803, 1124, 1139, 1017, 2674, 
         818, 2770, 1032, 833, 2776, 1047, 848, 2784, 1062, 863, 2794, 1077, 
         878, 2806, 1092, 893}], 
        Line3DBox[{699, 908, 2617, 700, 922, 2627, 719, 2720, 937, 734, 2727, 
         952, 749, 2736, 1101, 1132, 967, 764, 2747, 1108, 1109, 1152, 1165, 
         1153, 778, 2817, 1150, 1154, 1110, 1151, 1141, 1155, 1142, 1147, 
         1145, 1156, 1119, 1146, 1143, 1144, 2816, 804, 1125, 1140, 1018, 
         2675, 819, 1033, 2685, 834, 2777, 1048, 849, 2785, 1063, 864, 2795, 
         1078, 879, 2807, 1093, 894}], 
        Line3DBox[{701, 909, 2618, 702, 923, 2628, 720, 938, 2637, 735, 2728, 
         953, 750, 2737, 1102, 1133, 968, 765, 2748, 1097, 1111, 981, 779, 
         2759, 1113, 1157, 1159, 1160, 1162, 1161, 1120, 1148, 1163, 2818, 
         1164, 805, 1126, 1019, 2676, 820, 1034, 2686, 835, 1049, 2694, 850, 
         2786, 1064, 865, 2796, 1079, 880, 2808, 1094, 895}], 
        Line3DBox[{703, 910, 2619, 704, 924, 2629, 721, 939, 2638, 736, 954, 
         2645, 751, 2738, 1103, 1134, 1104, 1135, 2813, 1105, 1112, 1106, 
         1137, 2814, 1114, 1158, 1115, 1138, 1121, 1149, 1122, 2665, 806, 
         1020, 2677, 821, 1035, 2687, 836, 1050, 2695, 851, 1065, 2701, 866, 
         2797, 1080, 881, 2809, 1095, 896}], 
        Line3DBox[{705, 911, 2620, 706, 925, 2630, 722, 940, 2639, 737, 955, 
         2646, 752, 969, 2651, 766, 2749, 982, 780, 2760, 994, 792, 1006, 
         2666, 807, 1021, 2678, 822, 1036, 2688, 837, 1051, 2696, 852, 1066, 
         2702, 867, 1081, 2706, 882, 2810, 1096, 897}], 
        Line3DBox[{707, 1099, 2811, 1100, 708, 926, 2631, 723, 941, 2640, 738,
          956, 2647, 753, 970, 2652, 767, 983, 2655, 781, 2761, 995, 793, 
         1007, 2667, 808, 1022, 2679, 823, 1037, 2689, 838, 1052, 2697, 853, 
         1067, 2703, 868, 1082, 2707, 883, 1128, 2812, 1129, 1130}], 
        Line3DBox[{884, 1083, 1127, 2798, 869, 1068, 2787, 854, 1053, 2778, 
         839, 1038, 2771, 824, 1023, 2766, 809, 1008, 2763, 794, 2657, 996, 
         782, 984, 2750, 768, 971, 2739, 754, 957, 2729, 739, 942, 2721, 724, 
         927, 2715, 709, 912, 2711, 680, 2609, 898, 1098, 1131}], 
        Line3DBox[{891, 1090, 2804, 876, 1075, 2792, 861, 1060, 2782, 846, 
         1045, 2774, 831, 1030, 2768, 816, 1015, 2764, 801, 1003, 2762, 789, 
         991, 2756, 775, 978, 2744, 761, 964, 2733, 746, 949, 2724, 731, 934, 
         2717, 716, 919, 2712, 694, 905, 2709, 692}], 
        Line3DBox[{1167, 1385, 2912, 1168, 1399, 1196, 2824, 1414, 1211, 2828,
          1429, 1226, 2835, 1444, 1241, 2845, 1459, 1256, 2855, 1473, 1271, 
         2865, 1486, 2961, 1284, 1498, 2971, 1297, 2875, 1510, 1311, 2877, 
         1524, 1326, 2883, 1539, 1341, 2891, 1554, 1356, 2901, 1569, 1371}], 
        Line3DBox[{1169, 1386, 2913, 1170, 1400, 2924, 1197, 1415, 1212, 2829,
          1430, 1227, 2836, 1445, 1242, 2846, 1460, 1257, 2856, 1474, 1272, 
         2866, 1487, 2962, 1285, 1499, 2972, 1298, 1511, 2981, 1312, 2878, 
         1525, 1327, 2884, 1540, 1342, 2892, 1555, 1357, 2902, 1570, 1372}], 
        Line3DBox[{1171, 1387, 2914, 1172, 1401, 2925, 1198, 1416, 2935, 1213,
          1431, 1228, 2837, 1446, 1243, 2847, 1461, 1258, 2857, 1475, 1273, 
         2867, 1488, 2963, 1286, 1500, 2973, 1299, 1512, 2982, 1313, 1526, 
         1328, 2885, 1541, 1343, 2893, 1556, 1358, 2903, 1571, 1373}], 
        Line3DBox[{1173, 1388, 2915, 1174, 1402, 2926, 1199, 1417, 2936, 1214,
          1432, 2944, 1229, 2838, 1447, 1244, 2848, 1462, 1259, 2858, 1476, 
         1274, 2868, 1489, 2964, 1287, 1501, 2974, 1300, 1513, 2983, 1314, 
         1527, 2991, 1329, 1542, 1344, 2894, 1557, 1359, 2904, 1572, 1374}], 
        Line3DBox[{1175, 1389, 2916, 1176, 1403, 2927, 1200, 1418, 2937, 1215,
          1433, 2945, 1230, 1448, 2951, 1245, 2849, 1463, 1260, 2859, 1477, 
         1275, 2869, 1490, 2965, 1288, 1502, 2975, 1301, 1514, 2984, 1315, 
         1528, 2992, 1330, 1543, 2998, 1345, 1558, 3003, 1360, 2905, 1573, 
         1375}], Line3DBox[{1177, 1390, 2917, 1178, 1404, 2928, 1201, 1419, 
         2938, 1216, 1434, 2946, 1231, 1449, 2952, 1246, 1464, 2956, 1261, 
         2860, 1478, 1276, 3016, 1599, 1600, 3024, 1621, 1601, 2976, 1602, 
         1302, 1515, 2985, 1316, 1529, 2993, 1331, 1544, 2999, 1346, 1559, 
         3004, 1361, 1574, 3008, 1376}], 
        Line3DBox[{1179, 1391, 2918, 1181, 1405, 2929, 1202, 1420, 2939, 1217,
          1435, 2947, 1232, 1450, 2953, 1247, 1654, 2957, 1656, 1262, 1591, 
         2959, 1593, 1620, 1594, 2966, 2967, 1596, 1622, 1603, 2977, 1605, 
         1623, 1608, 2986, 1610, 1317, 1530, 2994, 1332, 1545, 3000, 1347, 
         1560, 3005, 1362, 1575, 3009, 1377}], 
        Line3DBox[{1183, 1393, 2919, 1184, 2822, 1407, 1204, 2826, 1422, 1219,
          2831, 1437, 1234, 1653, 2840, 1452, 1249, 1586, 2851, 1619, 1648, 
         1466, 1264, 3028, 1637, 1643, 1638, 1597, 1628, 1660, 1480, 1278, 
         3030, 1629, 1647, 1630, 1606, 1627, 1661, 1492, 3027, 1290, 1582, 
         1624, 1504, 3011, 1304, 1612, 1626, 3026, 1517, 1319, 2880, 1532, 
         1334, 2887, 1547, 1349, 2896, 1562, 1364, 2907, 1577, 1379}], 
        Line3DBox[{1185, 1394, 2920, 1186, 1408, 2930, 1205, 1423, 1220, 2832,
          1438, 1235, 1658, 2841, 1453, 1250, 1659, 3032, 1587, 1635, 1467, 
         1265, 3020, 1636, 1588, 1666, 1639, 1641, 1640, 1644, 3033, 1662, 
         1642, 1646, 1663, 1664, 1645, 1631, 1632, 3029, 1291, 1665, 1611, 
         1650, 1651, 3018, 1652, 1305, 1613, 1518, 3019, 1320, 2881, 1533, 
         1335, 2888, 1548, 1350, 2897, 1563, 1365, 2908, 1578, 1380}], 
        Line3DBox[{1187, 1395, 2921, 1188, 1409, 2931, 1206, 1424, 2940, 1221,
          2833, 1439, 1236, 2842, 1454, 1251, 3013, 1589, 1468, 1266, 3021, 
         1590, 1481, 1279, 3023, 1598, 1493, 3015, 1292, 1649, 1505, 3031, 
         1306, 1519, 2987, 1321, 1534, 1336, 2889, 1549, 1351, 2898, 1564, 
         1366, 2909, 1579, 1381}], 
        Line3DBox[{1189, 1396, 2922, 1190, 1410, 2932, 1207, 1425, 2941, 1222,
          1440, 2948, 1237, 2843, 1455, 1252, 2852, 1469, 1267, 2862, 1482, 
         1280, 2870, 1494, 2968, 1293, 1506, 2978, 1307, 1520, 2988, 1322, 
         1535, 2995, 1337, 1550, 1352, 2899, 1565, 1367, 2910, 1580, 1382}], 
        Line3DBox[{1191, 1397, 2923, 1192, 1411, 2933, 1208, 1426, 2942, 1223,
          1441, 2949, 1238, 1456, 2954, 1253, 2853, 1470, 1268, 2863, 1483, 
         1281, 2871, 1495, 2969, 1294, 1507, 2979, 1308, 1521, 2989, 1323, 
         1536, 2996, 1338, 1551, 3001, 1353, 1566, 3006, 1368, 2911, 1581, 
         1383}], Line3DBox[{1193, 1584, 1585, 3012, 1194, 1412, 2934, 1209, 
         1427, 2943, 1224, 1442, 2950, 1239, 1457, 2955, 1254, 1471, 2958, 
         1269, 1484, 1282, 2872, 1496, 2970, 1295, 1508, 2980, 1309, 1522, 
         2990, 1324, 1537, 2997, 1339, 1552, 3002, 1354, 1567, 3007, 1369, 
         1615, 3010, 1616, 1617}], 
        Line3DBox[{1370, 1568, 2900, 1614, 1355, 1553, 2890, 1340, 1538, 2882,
          1325, 1523, 2876, 1310, 1509, 2874, 1296, 1497, 2873, 1283, 2960, 
         1485, 2864, 1270, 1472, 2854, 1255, 1458, 2844, 1240, 1443, 2834, 
         1225, 1428, 2827, 1210, 1413, 2823, 1195, 1398, 2820, 1166, 1384, 
         1583, 1618}], 
        Line3DBox[{1378, 1576, 2906, 1363, 1561, 2895, 1348, 1546, 2886, 1333,
          1531, 2879, 1318, 1516, 3025, 1625, 1609, 1303, 1503, 3017, 1607, 
         1604, 1289, 3014, 1491, 1634, 1595, 3022, 1277, 1479, 1633, 2861, 
         1592, 1263, 1465, 1657, 2850, 1655, 1248, 1451, 2839, 1233, 1436, 
         2830, 1218, 1421, 2825, 1203, 1406, 2821, 1182, 1392, 2819, 
         1180}]}, {}, {}}},
     VertexNormals->CompressedData["
1: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
Xk8q9Eqv4et5lF5Y06m8xAuBFdhneQUzSzAvffe1EMTr5310aT/6pPtp3St4
/UXuBXPxOvtuSb/BvPQgfqAPr7PudWw/XieXx40s6jrJQETmZ7zOvkezB/F6
vtm+iqauhyjMaRpZQl1PqpH9J7zPfYEGpuhLW0XcB/A+T7M224/X0yxuMK2V
ym+KBmaZeD0SeX6c+x8dn4/3n4x0i3Hu/+CTWy9Qn+NCkqLQHzz1Er9bUPoM
O7ugGvW5Z0N0gnpaHjkZ4LxvDH2Sv+iTjOqzZFdMU69XCYRECKu5ODeTPDfC
HP+hgwiytURvPGLBTc0VYgEHC+CX1qM3Pw3of74eRl+v0TvoPPNDHURM3CQT
kMOEr2lTG+7pt5Lg9KrD+NzJz7ChYS+exfME8Lk7ojIvIz46HfSmO0m9t6MD
Q+DnW4GZbBJfUpCJ/pw9Mu4t8ufi10Oy6M9amp68oVSuENRg1iOX6460eIK5
YvCO6YFiKg/UDARNvkto8CDcqwrzwPzPV0KfxT0BxiVtBQuBMqivDzo5L7qH
VP/ulVf7+78dfWGiUf1Hr9zO6Y2eGmp/9MefnP/v1/j5f/TKoTUZwpiv5j3o
/jCVylciMrvCMF/JzBXhfK5dWxe/oz4XKTxwgvO5DI9bmuDzpei+lI3zRfBS
AU98vv64/2T0/v/hJ2TUT/juFo/H+zOg84KGuWvmnK5wvD/LDodxr6f62hpx
ax/kD7Q4QTPsaz6GHoOYex818Thh7g3nuX0Xc++F9XO+YL87HVQ73pLqd9Gy
Cpr4elVJ2xrM1ZvfbBqHufqS4hYXzNUvTjjt2kP1FKPydivsKUqO/W+wp7xs
Gcc8mcgC6+v1Wl8H8sDdkb7zgBqd0AdSd2dtLQa23Vsn6ynN8NbOUVjdoPPf
+9mFt9flrEbT7/t88KFtE77Pg2S2M/U+xENG1gzfR6tz1w58n3ApARfqfUhX
0NMp+D6R4Y9a77nehpwVBrlTQnLJbr3AOssjvUSjVG0H6uSHh9QSSidEdy29
GHWyyNNr4dT3LGhKuxbnuS8PuPpE7gqspJNv+Yt/4f2ZlHfhJHLIXY1WgXh/
5PQGLfHzblQVNURuZtZgloOfl39hRTb2XO4Be2/kNvvvehdgz+20bfqMfYEh
nRyHfLL3/N5e7Av7PU514viNhmga9ggDvfhWHK+NcX6P7zNQcmKOBdWXTY2F
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
tvSUp1B7wtzrmk0ZmUVrtNv2qIfY1OwQ44p/CUFVsVfl5CtJvfDIVoeFPeRR
ypv8LVR/XLC9rYbqj+TSDJVO7I/VAnIh2O+4XsXlUf2OCG6T4Aml+t2LEK21
2FN8O59cw54yPn++BGefhpHOz6lUvm0Zt7IC863WhCOvMd/6LSvQxr5TIJrC
4SrfX5/dj32n7JnEPczJF6YenIp85kF31VrMyRMtjtdhn7p4YEEw9qls+Rnj
kfM0OxxuRV60wmHgNvKi5IFWI+RFRXuT7JA7qU6cxkTulPGm1h+5U7ZFHIdf
VagpcvjVXHEeDr+y5Y81VTp4FTYPidXgeoRL9bIZuB6xrfjCdG9LDziz2WbH
qqFMoj1TaMG4gF5SzZDPLqZymp24P67TkQWzfTjrdD83HL+9xPUu5FxxSSVl
eWTk9VSZd9t7SZUi32tcH5HKym5Rly0m1Z3bf+L6yM6p2zZhT6GdmM1H9RRS
+pTfDnuK4ifhMPSrzhtRHL+6tjee41eySQrByD/PqmbkIv+c6FrYhTnWUdFh
JvrMKq3mfPSZCqFLHJ/J2++1FXnsk41SXdgLVOen1WMvuCfc+xH9Yfr6CH30
h+7bsRxuI7937TjsL+OvqU5GPpy3YQ9nf8Xsqks6yKO4eLSZyKOMek4EI48y
7Jfn7Pe4l3WBC3l1o0rPbeTVf1uHKjhrODCUeRi0FmTVHF/2mvgzZr9bz+ol
iZO9UqK4rWF25C7pxzvjSaT9tRa+tl7iOvAgLj79FNydczt+vmgiMXt/e55f
Qy8RtzgqNNn8LJjlXGxWjXhLfL8sXbm7vJfEz/M/cfyQC0xadYUW4wpkQ7xR
6tmMXjJ+RGeolervdw59tMT+Lpay/Sv29x+OtkswB8ZMMVuHfcHE/jADc6Dc
s7gX6G/lz7M5/tZa+Z0L/c3+L7604VZoKfrJDraTKvrJ5x0u39FPFp5OyUMf
ePStaQ/6QP/zcM6+oK8PVnH2KZ14J7UJufTCy0e9kVeUFcRx1qdSQ/QccX2q
84ukPK5Pvfl8irPOxdufMhnXuYSmF1niOlfloK4LrpdlLUkrxfWyqy1eT3C9
7L/76ejPP9c3/3/HjdL+/16/7i+v/9v4/37/37k67c/13CrO/53TSn6Pj/b6
2Zz14p1p1X+sLx/6bLhtj4NO2l/Wo//X+Ojv+b/G/9AzjOp5dZvW8lhKzzwq
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
IhEuZfZIpx+qJYknSACfajdJyjnImferLm6yxHWNpx4SrjjvfxhW4px7Omk5
IxN5WuQsDc55zGDrRZz9bO3LwA85p5rBMc5+NrpGvSTez51mixWQL0nyjx/A
+/m16PIu1MNS36OXkLvyXGqbhXrYHnK3AXtoesuzGOSEhfm/erGHJh+fuha5
wbjkV8uQg6XtOjiI3MDa3sUex/myviQhT0hYu7Yfx2nO7hw9iHsu4Zzvm7OW
i6OHklcSufj+B+Z0s7DnTrlpzdmHKTZlK6u+pBMuDfhN1FhD+cPnmWGaDxr+
fa6Nh/F5Dkj79POf59o4u34EucF1EiqCHEzj+zYOB2s9pliG8/INYV815GY/
tj7lnHMZVu74jq/n2TDfHznDlyPLr+PrYd/GccyHyeC6wNA53KEOaAIOR658
YZOWX2sjfOd0QfLJ6bKnRStB5sgK85z9VI79cOFXM/X6fWB0m3o9ufth0oEx
Xk9GXz9eLUgI92mcfypYghx7Z1jWK+yVo5/rE8enbNI+/farit9+5crZZ3Io
reK3X7lb9nFjf1fNmjcP+zv3ogWR2N9tc9I/4OfluVHggjmkmefNFPy8xd+X
X8O8V351ezAn7+2wa8S899TQYjzqbfMsP0LpDZ7f7r+Levvj/sPo/T/3yUcO
+8WPo19TcL1Jv1m5EfsFj7fiC5z3uyZdHcGcGXIuVAnn/f2kQgR1OzH2og3m
1Z5FMy+hbvdcU/uJucvrTn005q472/nGYe7Kbc3twudCUK4pG9cLTolUsvG5
2BK/IwPntVsRdA3U7anwQU5PzJrUUIz7gXVrZGNwP/CNBnU/3A8cm7BXGufl
jfnM7bjuOY3dz+kFJReNH+I8e8fimhSubw4/ie3DeXZ6NqMXc2lu4irOOvKp
eGnOOvIf8yYZnTf/8AEy6gO2Qf2cz7XnR+wzXP8N33GT87lcjp0LwfsvmsaS
Rt57LlbzO97//+aTB9JG9wWlvVnBjzrxfV/M4Q8XCmOiUCeKshUszDP9mzm5
Cxya4S7mGfMJRxdjnpE/NU3tAJVnaqe9LMM8c2EePRa5R8FwbCqus5Symsfj
Osv6Wc/aU/UApswf2uCTTCNqwp0n3pmwiWN8P4enJV/X7G/0jCcXpLs5PM1u
98ly5G8rBtfLIk9Wq1ORRf623b1+Kp4rCfRsmYznSoqc71vhuZLUw6Gc3rGx
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
9VvuJckjjcjZzlnnxCemnP4v+qJaguDXPe0rnP5vct7FyVumHbsCtW7u/UhH
Q73A6U+AAWAawtEvNUFrEyj9Ao+u7o0i+mXFX+9LncydE7NwUDpA9OPtG7IG
lH6E8WynfKIfd3BxgfbXvJPYGtEfpF8tvXN4Eck3W++5RYSTb1Z0nKOP3rY0
qlD6CLZuXyBA9JGCezfnPgsn3bGh7hPyjbo59xnI9TemcusfuPV/iLtf1nD3
C427X05yf9/kC//8vg3c3zeTm9Muy81pF+HmtKdyr2txr4txr/tLVGsSfptS
EcXht7XfH1cRfqsCTzk5h0Y+PAwy51ZY/usu+d3nmdwpqE9mYYgC37lDsQU4
70ivE3M9pSNWD0unU3rZ/4JD6fN9eahxifeT+SIahDdPe1N6l4VTXxuXVD8s
wplK0zIkjtFAtNVE7rsqCwOPBg884S9D2+y0akNvGgxKxPbHF/egIX9PirxU
BT71yfrqzqDBri3fd+oq9aA6e6GBRW4V9pfKKaoYNoPx5dzWt7u60WP1YiHL
0Vo84e3C9vzdDGLeAd/bhzpxb+TF5csKG/GpVYeHPx8dLL4qCm6a2oGX2nzP
6n1vwZoX3395ltFhEa8zXyGlx+ary2fG9jHwdM1z2rwxBhwc3Vm01JyOC3xK
LUV0mWiUkrtiwkMmwBWf4UH3BgwBPtVjuUz0er+8NOJIO/y+eOe900gV5pZ/
Crh6kokF37eBnkIneFYv2mN9uQw35u9xEr3ciiwhgX3nKrrg6qtGl7pBForZ
6IU638nFIB3r9zvm0uCihM6TgVlsSp+M7aIdyEbJ4DtrVcab4MK7IMVpuSy8
OvNC1FqJAtTv3XL8yRoa6Kn6nb7rwsImrUNH75oUIdsxh+/cERqECn2Zt16e
hQ5xjJ0Z68rQyKNovdpLGpwbfbZkZngPOrTo1b8vrsAp+8+bLvhNA7vdzZsy
67pxs2rm8VNiNSgTEP4+xLsZDJOWr/H06MI5i07pPV7XgEefM7eBZwts7Ixq
43/QgXIX306N4mnByzmnyl89p8Pumt5uF6rv7/WPiFpUzUBvJ+2CZT0MSIm6
b/xuCh0llXwes82Z2CT0emZTBhOeGqpI+DHqsNqFnWKfSumLU0bPZ3a0w4Pr
L1PUqfuzOPUl+skEJp450V7q96MTunS63q46UITKr54esPzIwBcaF43vxXZD
iqMuX4ZvDvrmNqgVKFB94NSEA/dnsUB95SPG+6VsvGHvvTFWLAs9R2RTzb41
gUvIOSfDDWwUvRkJpioZKCfVcWdhWxN0eDrAb1428oVMTJ1hmYPntrzSGhWk
wZjTMy2VShZu3C6wo8AoH9+tG39zZSUNLvTP+vjInYV0Jzs1OdEiPJ7/qHT5
YRpMq3AwHV/MQvF1/c7i9mV4J9CogPGGBie/i7EXXujBY6c2t+rmV2L98BTZ
L9LN8CPOV2mfWjd+KO7bck6qDjUXdal8mtoC/dYmi47IdWLaR96TU1/TsP2+
p/HMA3Tw7ZtsXFVP8fwnQjpzPzDwreGkQNcSBsRONDWaNqMF51yvk2l2YmKm
dseQytQ2CK7QuUp7VYP9n0/dOOnFxKynT753BnfAMQMj11rxMly193lylGEr
phpPbtgx1AUHuw7ZnF6Rh+6Py+1kHtHRI8H+S01mD2zK2KS+f2IGHr7REq/n
TcOl89vzZGawQXTfmtwZumwcSQsVvDQdsXB+clNvbRP4vlCK+X2Yjdsq1a6t
60jGBEgVphc1wY89CpczVNhY8lPVcj6lX2/lXcmy7GyCK1NthvXmsVGk9PGL
nb+zUNNkr/WUsSZw/hHjXU71GY98T/XJmnnYPyU17/ViGug77RWt9WKhZ7Ln
+ofRn9HeUG7xDyMafP0poqQlyMJ9L9fxTvxahjFzJxWHJNPg8XjDkg6BHrz/
7dAPYfNqLK8IP/fsejO4Z8R6ePJ14ZGvPCfmhjXinbeRYSm8dGg+R2vqVWjD
aHOGctUVimdmeRj2vmJAufgam3AHGr7NfhMj/IaJO57b8tbatsHB7JYuGarP
vljgwty2hImyzcfDFeI6Ya7q8r4pKQUo0fpUcYc4AxP2ft5xU70HglcZzFS+
mIEFP645rsinoYDwbvVnoyzgP2FUtTw4AX3oOXPW1dejlWdsnMfCXqo/LE+N
u8BG46nesUY+8fhRR6rGJ70J5L6c2TT3BhtdKg9JGC2PQ4VJCfnDiU3QvOLE
C2tTNo5dtj6S9DYJP+h+XfujoAm07+UlM/XYeCAufyw3JA2LWGvnFlO/V3P1
m8nmCmxcejHEpGcoA9sNpz051dsEbcrWb61+s3DmxXW/P73OwXXgcfv5LBrE
PF+nsS6QhdrttdI3hT7jjsvPFZX20mDO28tpu+k9uM3mlqxDcjmmx3UoFDfT
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
oao7x4x7c+2Ndq/4tx67/uvRSKzn8JlJquF64soD6TSs57zbFvsUzz0ZCGh9
w3OOdDmV2bknkZUbavFcidMyC4TndjUfLTbDcyVOj0OmcL3ALvrJITy3qHbs
3n5cLwiM9VfFfUp6b+9X4j4lbW2OxbhP6XmVXNnE1kKQawtXG19HhrTip70e
RJxfbS4Sj/EJr97t7QQ+QXZpK8owPmmzyvTA6yNQydyF8Se592oKXp+8gLpX
QREPcw9+a1n+b/05n/3/lbM6+X/XQStfIA2v58LAHxnYf69q2fW3eD3HF+nM
rufem0xv3B9lvlV0dj3/rJvwfcN5HBzR+V9m/vOeP+usMquT//e+mGb2+dzY
dprT8d3p/Fb2+bR8U34fxz3TgLOnibgHdWrfLuG458SwD8b1qQ8+1W54Plpn
Xlccrk8dZeOQB2wcEs7GIc0jd3fi9SwzexJHrCcaHZ3Lh9eTGWZfjdeT/HpS
kFhP1L9AeBivp9BHTQ8cH6yCTmcT8QFZvSLp4fhwM44W3hjwGRJzNVuXvqUj
nuDiFty/vVOx+w2eA6oWNm7Ec0BxKvtK8BzQ870y63B802sW7sV9gB0HPfVx
fKucq7Ae9yF3h62MMaARvNGREoP7kOew80UJO1+4s/PFxK4Vt3FcMmj/epaI
SyhHyGI2LnGx/T2S2P4ee9j+HmJfDs2et6xNP9TxHNOCu0qz5+3i07HZ9TGa
TnlDrA96fvTe7Pr82feNs/t+Mv/PPZUz8zTCsA6Zauu3B+uQfcvGD2AdMpW9
X3Y3HDbjeFLP3i+9F2a1cTfn5dWcPLrg3/uewX7+w7fvfPj5rL/ijynPqXX/
jj9/6h3olv7af9c7/pyTK5rhvx2Ic9LM/v/gaPnsHGL3sj1L8dyxWe311zge
2n5LPKNB8Kmr2XVrFAg+dUDJ8eUugk+dvhv8CeOZQ1Mf0gk8g77n0WbxTDv7
/fmbw15eoh/Kb2e//8/nEQsKXP3vz/Pn+crbq1/9+/mxuQLXaRsHIEo4XYXP
vBPOhS0qj+/tRnPWV+65od0HMqvF88d8umG5rNeW+iwK8gw8KI+mmcCQHLd+
PVAKPw/VhA0ReO82N/1qHn0AFKUtf0lodsBmqTUeiw52o6cnr2TKc/XDCbVz
rPYxMoj58tDu2VPQbcZJWXweog+vX41xaQGpeWwlcR4Of/usIC7DAptvxffS
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
7YreEXXx/wAstR17
      "]], {}}, Arrow3DBox[{{0, 0, 0}, {-1, 0, 1.61}}], 
   Arrow3DBox[{{0, 0, 0}, {1, 0, 2}}]},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{225.99473538505234`, 418.2930722177649},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-2, 1}, {-1, 1}, {-4.236067507663449, 2.414213562373095}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.43807901475925104`, -2.9463188680328964`, 1.6053946258477723`},
  ViewVertical->{-0.06977557342910011, 0.4692785584238724, 
   0.8802891592858862}]], "Output",
 CellChangeTimes->{3.853571791217958*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"28bb79a0-7324-487a-ad1e-e6ff36b3d3bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Squeezing", "Subsection",
 CellChangeTimes->{{3.8535724509870577`*^9, 
  3.853572458243224*^9}},ExpressionUUID->"164359c4-5745-4f26-875d-\
1fe3018e369e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"w0", "[", "3", "]"}], " ", 
             RowBox[{"k", "[", "3", "]"}]}], " ", "+", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Sign", "[", "n", "]"}], " ", "/", "\[Gamma]"}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"v", "[", "3", "]"}], "^", "2"}], " ", 
                RowBox[{
                 RowBox[{"k", "[", "3", "]"}], "^", "2"}]}], " ", "+", " ", 
               RowBox[{"B", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"v", "[", "1", "]"}], "^", "2"}], " ", "/", " ", 
                 "\[Gamma]"}], "  ", 
                RowBox[{"Abs", "[", "n", "]"}]}]}], "]"}]}]}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"k", "[", "2", "]"}], "->", "0"}], ",", 
             RowBox[{
              RowBox[{"k", "[", "1", "]"}], "->", "0"}], ",", 
             RowBox[{
              RowBox[{"v", "[", "3", "]"}], "->", 
              RowBox[{"v", "[", "1", "]"}]}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"B", "->", "1"}], ",", " ", 
            RowBox[{"\[Gamma]", "->", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", "\[Beta]"}], "]"}]}]}]}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", "->", 
           RowBox[{
            RowBox[{"w0", "[", "1", "]"}], "/", 
            RowBox[{"v", "[", "1", "]"}]}]}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"v", "[", "1", "]"}], "->", "1"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "[", "3", "]"}], ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.2"}], ",", "2.2"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"w0", "[", "3", "]"}], ",", " ", "0", ",", "1.3"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"w0", "[", "1", "]"}], ",", " ", "0", ",", "1.3"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.853571831722294*^9, 3.853572134025943*^9}, {
   3.853572202034141*^9, 3.853572347498839*^9}, 3.8535723877626333`*^9, {
   3.85357242024289*^9, 3.853572435410289*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"e30cdf92-0119-446d-a20b-89340ee01e57"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`$4394$$ = 0, $CellContext`$4395$$ = 0.71, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`$4394$$], Manipulate`Dump`ReEvaluateInit, 
       RawBoxes[
        RowBox[{"w0", "[", "3", "]"}]]}, 0, 1.3}, {{
       Hold[$CellContext`$4395$$], Manipulate`Dump`ReEvaluateInit, 
       RawBoxes[
        RowBox[{"w0", "[", "1", "]"}]]}, 0, 1.3}}, Typeset`size$$ = {
    540., {162., 169.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`$4394$$ = 0, $CellContext`$4395$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Table[
         ReplaceAll[
          ReplaceAll[
           ReplaceAll[
            
            ReplaceAll[$CellContext`$4394$$ $CellContext`k[3] + (
               Sign[$CellContext`n]/$CellContext`\[Gamma]) 
              Sqrt[$CellContext`v[3]^2 $CellContext`k[
                   3]^2 + ($CellContext`B ($CellContext`v[
                    1]^2/$CellContext`\[Gamma])) 
                 Abs[$CellContext`n]], {$CellContext`k[2] -> 
              0, $CellContext`k[1] -> 
              0, $CellContext`v[3] -> $CellContext`v[1]}], {$CellContext`B -> 
             1, $CellContext`\[Gamma] -> 
             1/Sqrt[1 - $CellContext`\[Beta]]}], {$CellContext`\[Beta] -> \
$CellContext`$4395$$/$CellContext`v[1]}], {$CellContext`v[1] -> 
           1}], {$CellContext`n, -3, 3}], {
         $CellContext`k[3], -1, 1}, PlotRange -> {-2.2, 2.2}], 
      "Specifications" :> {{{$CellContext`$4394$$, 
          Manipulate`Dump`ReEvaluateInit, 
          RawBoxes[
           RowBox[{"w0", "[", "3", "]"}]]}, 0, 
         1.3}, {{$CellContext`$4395$$, Manipulate`Dump`ReEvaluateInit, 
          RawBoxes[
           RowBox[{"w0", "[", "1", "]"}]]}, 0, 1.3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{608., {236., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.853571953759721*^9, 3.8535719615637283`*^9}, {
   3.853572008486084*^9, 3.853572076973287*^9}, 3.8535721142589893`*^9, {
   3.853572335165469*^9, 3.853572347793676*^9}, {3.853572388829111*^9, 
   3.8535723968139753`*^9}, {3.853572428936943*^9, 3.85357243680973*^9}},
 CellLabel->
  "Out[157]=",ExpressionUUID->"220fdc73-1052-4f72-ac1e-375e03387a10"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Direction of tilt?", "Subsection",
 CellChangeTimes->{{3.853572505306314*^9, 
  3.853572510275444*^9}},ExpressionUUID->"13d5f431-3ff0-4700-a08d-\
04159357cfd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%108", ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.853565645940504*^9, 3.853565647051984*^9}},
 NumberMarks->False,
 CellLabel->
  "In[109]:=",ExpressionUUID->"e19c8d13-432d-4226-9036-fccc6e5533aa"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJx0nXlcTV0Xx68MIZIh0+MxzzwkZIqVOfM8j48xhGSep8xjGTMm85QkSdS+
olSUWyoldEtzISEZe3PPXus8d7/39M/99LOds893r7P2Wuues6o3beHwmUYq
lSrTRKUqXvTp/P5CfGGhsbre60G3Cgs/sK0pxl9aXKiubts5bmCCT0nSbV0L
ctbMr6qO2VJG7TO/OOkfzxeb369jFfXyyM5tXRoWIz1d1fJygHEltaXuOL8Y
6i0z1q9rc6+Ceplu/DfSByf0afNphYnaz+5kjX4un0m3aeUxqmCosfpn4Z+f
D6SPD/RsNGRocbVTq6Cn8xPSSF+zf5L7oGqFrIZflbZ35ieQvqPbpJkBPQvY
yFbdXBv1CyTdaPcjWz/HPLaz2vW2DfoFAurW6Sdsk9XZzLvVQJXP/ATSczac
/BxUI5VFZUxtW3Re0u0i7bPZci3r6Xd8VtHvpNdPnbpt5aaXDDnPWuLp6jM/
m71/PXLFu1UyZ9TL3slc1ribzBl1o382jq5QQuaMuu3lbcuPhVckzqhbXxgZ
OaejzBn1DZfdX7VJKUucUXfzGzAi9Hwp4ox63r3VpafuMCLOqFuuUi9+3vcX
cUbdoq3NtRsW+cQZ9bDR7/fPt8glzqhXsZwbY2udTpxRjz1rterSJy1xputK
GFL2yM144ox6K+O7e1QDoonzFZPKG/7MN7f/x3uJo2TOqFdN3Ld+jbnMGXUH
WBdp8qIycUZdfXnDr57HZc6oTz4Z/G1lsClxRr15vy/LHf6VOaNe+ODMnnHl
Zc6ou3o5TnsSXYw4o+5939N54JEfxBn1lO9Xx09u/Zk4o744ZP+Wo0nZxBl1
zyibdqX8k4kzXVf/Fa4myfHEGfUSJjvmr/4QRZxRtz69xNVnYDhxfu++dFbD
fsnMvfdg8y4dZM6o2+54axfyyZw4ox55tuVqt5syZ9TPWEVWtVkkc0Z9YuPN
s6JnyZxRb/ggXsXyyhBn1E+VbFTl7M6SxBn1uC3je4ZayZxRr1Ii9cMSs+/E
GfWWeZqzDfvlEWfUvdZ9Wr5+XjpxRn3LojLwcs8r4oz6Bd1xoogz6vb9HE93
uhRKnFHfHbV+60H7h8R5ps7OE9iF6UvrW9SROaM+wT+6c/94mTPqoSfLBTY4
KHNGPWdz9dBSQ2XOqLtAxtjImjJn1BumxafWOiZzRj3/dZ6Jb12ZMx2n9uTR
Tb1VxBn1rScdNl58UECcUQ/4XPji+55c4ox61RoxFUyN3xJn1E/UaTP266Pn
xBl1s2nTLn73DSbOqLv9Ovzt+PQA4ox605o/W5ls8RHsOYplbmg9La28aM9F
6/dqwRKrYNGeo9j125+nv14n2nMUm+L/bN6vDqI9R7HG2h53j70tL9hzFAsy
sh87apxoz1EsBBa7OkWVEOw5ig284xbwaZhKsOcoFtvOqHHE/a+CPUex+0sq
1p9m+V6w5yjm/2tEQ5vDrwV7jmKma8fMsToWLNhzFLM48rv32EY+gj1HMc/R
zV+YtLwm2HMUMytzolTumnMC50D2qv7TX6uKi5wDWWNv2zrefiLnQGaXtr5b
cUeRc9E+0y219qJmIudAlr+u1INqgSLnQPZpit3lF21EzoHsZM2YcWvdRc6B
bNPcyglhVUTOgezRuOoHJ5uLnAOZ3xnnxW4tcgTOgczc23rluUqxAudAVkUd
FvFtgIfAOZC53d9g0sz/iMA5kKmud7KbUbBb4BzIbBqYL0sIcyLOKv4j/V6N
OKMu/S5zRl36XeaMuvS7zBl16XeZM+rS7zJn1KXfZc6oS78XMuSMuvR7PnFG
Xfo9mzijLv0eRZxVwg9yFnXkLOrIWdQFewYFewYFewYFewYFewYFewYFewYF
ewYFewYFewYFewYFewYFewYFewYFewbRnrk/AQX/DAr+GRT8Myj4Z1Dwz6Dg
n0HBP4OCfwYF/wwK/hkU/DMo+GdQ8M+g4J9B9M98fwSFeAMU4g1QiDdAId4A
hXgDFOINUIg3QCHeAIV4AxTiDVCIN0Ah3gCFeAMU4g0wHG8kg0L8DArxMyjE
z6AQP4NC/AwK8TMoxM+gED+DQvwMCvEzKMTPoBA/g0L8DArxM4jxM89fQCEf
BIV8EBTyQVDIB0EhHwSFfBAU8kFQyAdBIR8EhXwQFPJBUMgHQSEfBIV8EMR8
kOfjoFDfAIX6BijUN0ChvgEK9Q1QqG+AQn0DFOoboFDfAIX6BijUN0ChvgEK
9Q1QqG+AWN/g9SVQqNeBQr0OFOp1oFCvA4V6HSjU60ChXgcK9TpQqNeBQr0O
FOp1oFCvA4V6HSjU6wDrddaTKoY3KNoXJb/9hP3s2TKpYT8v0iU/48W0zWuc
b2u0SRwPOH7aQTgwP6GU+lHT9Y0TfN6xcXNerDJzrKbGdURdFX9hVti+6uqd
w34P/LPeqL9a2E9VtuRLmifqfZhFWp/RL4ri3aE+21tuDqirm38iq1dpXGOV
SkvzQf19sYs3VS5RNF66f2PZ1BHLaywo+sTxqBt1XDXyRkEQq7rhYY0//hR1
3w8bg6929BM4RLEMM/O/vg0IoPHIbX94qSW1U8/SeVFfV2rl0ztFn/r77BO2
YVqT2ZET/IXjF+VBOffTevc6Q8dH/kWHDSq0cmTuGfGFf+aB+ur4+NB/nJPp
vKi/Tyr1tHHRp/6+48VCevS369PLWRwPOF5Yd8B1F84LeF79/c4LLq2fkjhn
0nMaj3ZyNHTY2n4uKeJ8QJwPjlfgBshNWF9QWF/A9RXsExTsExTsE9A+Ucf7
yLfqkUiXha/p+FgPr5T/JnLxjmpqYTzD8XhdaLe7IkJzrBvECftXLLP7ujSs
46cIYf+KZffDf6eV2KMW7CSK2fTKP9+7101BD2RTsyIntDVyEdeL4XohTznj
+/P7gQDkKeaD+vZQlNeYVhk8Z9JbIc58Ag19582t4RYvXhfgdQncALkJfgBE
P4B1rUf3ME/+rz1HsYbZ0vz09SIOHTF/1tPBsB4FeJxGu1NU9YvsdeCYXp9s
XaKZfavxw5dv0JAuXVcwy44YvKvTpwDSpeO4M88SM+f17bWRdGn+96B/takr
oiZcZ3fvSvcf11lOvbSxNd1CxfFMHI/HHzkjv9i8SQ+F83oxdVsrqx8DTonj
wfB4d8B5CvMBcT54/4rH5xzgfo/fxv8m/R8fQD44XrL/Z/DBdVv7NlYxImdA
zjge7U/6XVwvdzZ+0dE2zYo+BR1QX9V9sY/PfGN13qY0+/kJ71msaeim6uWq
q9NKhse/LLIz1C2suo6dDi9Zscz0WbeL7Bj5a8ol15yT5krzFO8LHI/nVceO
nxBsZSeeFxTOC3heYV8A3BeE/QhwP8LzImfHrBqtSu7xpDgKr8ty/rtqT45V
VwvjGY4X5s9w/vq6F9twyXFHM/9tIh9APsJ4wPF4vfT9454Y4/0ZCcQH/UDo
5vJD71arTn4A+WxtG2K1KiNOHM8UxjMcr7+P3GPRWckTGhVdn/5+5A6qWxc7
tDNyFPxVMFjOPPn4RsFtkScgT+G6AK9L2McB93H9vM8LbBaExARZrWAFQR5p
9kX+EXl6Wqz271NzvxhvAMYb+nn6E+joN9LVLu0yHQfvryXjzv91rKW3uC8z
3JcFv83Qbwv3KcP7VLjfGd7vAjeG3ATOTOSM14vrgvOndVnX871l60mk47oM
fV7aZsyh88RHvB8djmTWKNpf5eNcqjijUuJIcX8E3B9xPB7f5vuIEdOuneZ+
p7Ra+sxlFrfPX98c9AgWJBTRpzpzLnPrfX1Qu+hgePVHpjpzLlOX1eSNGh4K
/V0a9pPrzLlM1fNX7X0zn4KD7jhYZ85lpcdD8M36GhioG/+NdNWsUu1Ln42C
pv3+/MNn0jPaLG+/6ksMlMBx/LPlh5+uRXE+sD/ToTpzLpv5JjivKC+AHN08
E0i3HOxdUJRHgPef01KdOZd1L2fbryjvAAdJB9R7DbHqV5SnQJh0HNI3GVWc
W5TXgId0XtJTXnXzLMqD8HfS005C26K8yQY5S/yymXYfK2d3L4A4o75hy5cV
MzPVxBn1/U3Xlq/8JJA4oz4ULKJK1wsizqibHX90MqN6CHFG3eGYqvD7tyfE
GfW67iUqGJ3QEGfUU3YtcC3KW4kz6lYjbpkV5bnEGXWP9o4rivJi4oz61Dkl
wovyaOKM+vO1VXYV5d3EGfXu+R8uF+XpxBn1dT1Kry7K64kz6msj/6k8dYcR
cfZFu/jkF1uw/DZxRt1tlOb7wEt3iDPq2qqdb/ca5Uec6TgDKxY4XvMnzjS+
Qply2d/UxBl1386nDqeEPyTOqDs0u3za+OZj4oz6BosdF3wGhhNn1Oc++/Wn
bkOcUbcfVnqPSXI8cUY9d/2mBqX8k4kz6u0rXbQ/mpRNnFF/9KFg6OTWn4kz
6ruSxrsMPPKDOKNe+oDd3CfRxYjzQd15ivK0pG0tTp28SpxJt/xlt3eZB3FG
3c06pNjC757EGXVtTI+mK1vcIs6oW7zssKVB4W3iTMfff6DqsaC7xBl1M+Ou
GjBhxBl13xruuw/aPyTOqL+K9XHtdCmUOKO+V/cZRZxRb/7NtsLLPa+IM+ov
TUOHrp+XTpxR3637zCPOqO+yrZS1xOw7cUb9RL0w21ArmXMi+rMy2jb9LE4T
Z9In77Ba3uEMcUZdvb9Xj41WZ4kz6hvqP+g8wO88cUbdbemIKZt/XSLOdJy5
DjWuT7tOnFHf/8+Lg2/CbxJn1OsOGtfWZIsPcabz3vqZdXx6AHFGfeCUX5u/
+wYTZ9RH23nW/vroOXFGfUHwmrjyxm+JM+rDtlkFfN+TS5xRT++4a+nFBwXE
GfU5YcfGNfVWEefD0noz1bPkORXDdxFn0vfHOw/x2UucUd+wuWajc42diTON
r/k7ruO8A8QZdXXkmm0+Uw4TZ9Ivzyl0+fcYcUbdrXOLTlpTN+KMus3t9aVz
15wjzqjXLcwKNGl5jTijvuKfUlXGNvIhzqgnn3j3pf2xYOKM+qc82AOHXxNn
1Nesef/6X8v3xBn1S0F5VSLufyXOqMf8rqf+NEzmfAz34XbHNtWLn0ecSQ+5
nXEgeAFxJn3D5crf2ywizqRbNXzvsXoxcSZ94tAbGSuWEWfS1SYPc3auIs6o
b3iyZ41Nuw3EmfQJh/58j0mcUVfHjR48o2A3cSbdeklwU/8jxBn1Eut/3igY
4EGcUR/vbXvpbKVY4oz6zbFn6rm1yCHOqE/9a8X6yeYyZ9Qn/plmFZmz9Ol5
X8V/9OM6WdeP62RdP66Tdf24Ttb14zpZ14/rZF0/rpN1/bhO1vXjOlnXj+v+
M0+9uM7zvgP35/pxned96fdsIa7zvC/9ni/EdXR8G+mjtHonnkewZ9IFeyZd
sGfSBXsmXbBn0gV7Rl20Z9IFeyZdsGfU3QR7Rj1unb49oz5KsGfUPQV7Rn2K
YM+oi/aM+7EqQt8/ky74Z9RF/0zjBf+Muuif6TiCf0Zd9M+o1xX8M51X8M+o
2wn+GfVowT+jniP4Z9RXCf4Z9QuCf0Zd9M8v8P4Q4g3ShXgDdTHeQF2MN1AX
4w06jhBvoC7GG6ibCfEG6nZCvIG6jRBvoD5EiDdQnyfEG6gPFeIN1NOEeAN1
Md7YL8V7IMbPpAvxM+pi/Iy6GD+jXleIn1HP3acfP9N5hfgZdU8hfkZdI8TP
qG8X4mfU6wvxM+ovhPgZ9Z1C/Ey6ED+jLsbP3ujXhXwQdTEfRF3MB0kfoJ8P
oh4n5IOoewr5IOpThXwQdQchH0R9lpAPoj5DyAdRzxbyQdTbCPkg6oFCPoj6
DiEfRF3MB+P4PirWN1AX6xuoi/UN1G2E+gbqYn0DdTuhvoF6daG+gforob6B
eiuhvoH6FaG+gfpEob6BeqRQ30AdhPoG6muE+gbpQn0D/12hXgcK9TpQqNeB
Qr0OFOp1oFCvA4V6HSjU60ChXgcK9TpQqNeBQr0OFOp1oFCvA6zXneV5y1vd
8Z5wv+UFqG/iv09t5N21rdEm0p9L42EF//c7uvOWUkvr845NnVev9aRonHdp
0j1bh8YN+/aA7xPZgHr15VNvrPmK+0Uu6evHn3sTkmVE8/TTnSeWef4qNL9R
EMSPH3kf9cvSJ+l4XQ/4fDdyP416Vd26ppDuLl0Pq/4FpvzjnEzXi7ob54DH
R32ywE369/+Pz3H8zh6W2XaTntNxkHM3/inlOcnEXzV83/lCK0fSkb9D4IFR
tVPPkv3geIsk5729eznTfDDOHKrTz9D14vhq/Hrx+F6co+ff1S5d7ehH88Tz
3uSfeHwcf46vC9o56lr13scl9qjpOKif4Z94HOl5nESI/Ddxv8olisajns0/
0d7sJTsB0d5QF+0N9Wrc3lCn+xHKhIXPKGaDx+c6yx1pWyNEHQTCeIbjkT/a
oUfVJyM6foqgdUF7s+ky8IRmgj/d16gPaTvxbnW3eFoXzHOP6ezkLR0H7ceO
ry/yIXubW7tnD5+11riOlO/o7NaFzovrvpXbIY7HOHmq7vg36by47g35/HG9
cPxnXX4UQONxfd0EDriO3+2m37FuEAcCZ0DO+DuuF/oBvF6st2zBPIPryG2F
nt+MvI8c7AQd579WOA7GscH8czDnFaD7NZiljKk2eWqShnQv3ac7s9fxfEj6
E93/vwfNdesbCrF8/aT9JJqFjQsttnyDfBxpP9Gw+31iz1lYxdB4PK+7jmcA
6dnS8VlL3bpcp+Og3lE4L85Tsp+NpDtKOhRoJR2Pg/oMfl04Hq+roLN0XtTR
ro7q7OEU6dK+FAybhPnXlThAIOeAOtp5rnAc0a+SP+HX1ZzPF3Wcf1YD6VOK
E4zVkt29ZyqP/aGdnj4kO0PdYYa2wfgGRjbIAc87mNvPL37f4vE3ZHfbGWRl
R3aOuo3uvnOk8cghSucPPWk86vt1/vM2zVMyv/cgzhN1nCfej2j/DtzPo473
S7n10n2KflK+3vSSduMe0jxxfTMiX46yS3OleaI+g18fjsd1d9DVT7bRPNFP
jq9YyW/9WCMbHI/2nCZwQP0S54DjcX1VOfqcUVcLnNH+60ZJ80cd7UrD54mc
0d/YvLq2bISN7H+Q85SOubYV/i5uI4xn4njkieNxnjif7Xr2WVotr6PEX+AG
Ijdc3zW6+skF2i/QP1fh8Qz6edRt+f6C9lyg88PPwJv7GfT/FAfyuAL3cdQl
npchhO9z6K80QeavXVt603GQ8wYet+BxUJfWcQUdB/mYhTuv6VNzP80T74s3
3N+iPeN4aZ4HoCKfR7BuvA9zO9TDbNq1fcQH/f9Rvp/e5Vzw+PmzhpUv2J/I
uZei99YfOH1YzrZU5etdgp5Xcez52O5wUBXScfzA226dD7mgbkTjT0U7h+bF
VyIdx1f4MnZaKXfUVTT+wqbJwVfzzEjH8WdGrgtM90b9J/UHWHJvlPX4+qak
4/hrVhG50UfLc72Axn8c82zX5wVlScfxpS/VeHokugzX5f4GK6dU7vhWU4rs
HvWJ/HlpHI/HSXmy39K6vjwe9c/8OXZJz6DjvPn94nmXEirScfwXzwpfLbr/
5n5fS+NLbPtRzb3gG+n0vn/J6RtW5H/luobGz/RL9fjrzGfScbzx/Xnttzrk
0XNpOL70Aov9h5rlko7jmwz86OEckY3HoeegptwZP71Dj0zScfxuixGLyiWl
4DxpfONbJTv2+viWdBy/1/xopeT4RK5n0HgPmFEt0FhLOo4/t2VJ9sMS8Vwv
RX0AWi9tVnrHJNluUdeGdKtxaZZsn6hnDJlX4sYi2Q5Rj/sYsc9mvWxvqFt2
DXA6XFe2K9SPVdz+bO5A2X5QT803j+y7VX7OBvXj/P0RXHfUfX43e3zI9Set
L/UrqDApdFyZfFpH1KvMWpLSw1ZeL9TvX7YyGzIkndaF9FYXNFv2a4k/6sbf
zDrMbhRHnFE/O2JL8zGzoogzvv8+wepqopW1zBl1C5uSB5r3kDmj/qhbhZEz
+smcUV9U+UWHUcNlzqhHzLFbM/BeOeKM+ph2Tav7xmF9RO4ncKZsnbdNVDJn
1F/y96GQM+rtg9s5V6/1gzij7hra/nBBZ/l+QT3rbdXnZcfnEGfUL38tU9g+
Ppk4o55q3fSuuXcccUa9nG3ducnZGuKM+riI526PtCHEGZ8TXlGnSQ3j+jJn
1EtbPVszv5HMGfX+P6wCnJvJnFHP/vt++J1WMmfUl1eoFrZnrswZ9Su9GwY+
XC1zRn3a/G21Gx8oQZxRP8jf70POqI8/fPvgmljZX6E+zvFLYuqxPOKMurbc
oAMpgzOIM+oZzw56yfUjDfUHSAob3S30pIY4o/7aonjt1i8eEWe63mv+9qGz
/QV7jmKrN50+0LKCaM9RLHEZe3TLTLTnKLZnrf8G50qiPUexHaMGLk+tItpz
FEu5vilS3Vq05ygW0u1KlzMdRHsuGl9m5zbHHjJn1Afz91WRM+p5a7t1uxlf
INhzFDuXVdayeo+Pgj0Xzf9zh+VxzimCPUexrieu7pTrOGifUaxsrwE5Tayu
CtwCmcrrTK3w4iK3QDa/w8IDrUuI3AJZRoan0aUSIrdA9nrTS5duJUVugWyz
ZVJ0oYnILZANCjvbtJipyC2Qnduxo/JjM5FbIHPi71PrcwtkM94NmZnaQeQW
yHomn7pya1SuwC2Q2Y2c36j1siSBWyA7v2V7qlzHRG6BzEWbHumVt4u4qfR+
ZG76usxNX5e56esyN31d5qavy9z0dZmbvi5z05dlbvq6zE1fl/dxlcEfsitQ
sCtQsCtQsCtQsCtQsCtQsCtQsCtQsCtQsCtQsCuofjer7nTb/7MrULArEO0K
n6tX8GOg4MdAwY+Bgh8DBT8GCn4MFPwYKPgxUPBjoODHQMGPgb4fw/03CjLc
v/XbXM9b9G8g+jd8H1xh/wWF/RcU9l9Q2H9BYf8Fhf0XFPZfUNh/QWH/BYX9
FxT2XygxdUf9HZmvxP0XFPZfUNh/wfD+mwwK8SQoxJOgEE+CQjwJCvEkKMST
oBBPgkI8CQrxJCjEk6AQT4JCPAkK8SQoxJMgxpP4PrhCfgQK+REo5EegkB+B
Qn4ECvkRKORHoJAfgUJ+BAr5ESjkR6CQH4FCfgQK+RGI+RG+Dy7WT1AX6ySo
i/UQ1MW6B+pifQN1sY6BukJdAsS6BOpi/YHeuxfqDKiL9QTUxboB6mJ9AHWx
DoC6mO/j+0qt7B8Gr/L+vzoV6NepqB4F+vUoqjuBft2J6kugX1+iOhLo15Hk
9+sV6kWgXy+i+g/o13+ozgP6dR6q54B+PYfqNqBft6H6DOjXZ6gOA/p1GJxv
Dovf0f6vertknvd1/QNy2JzKK17OPSXzXKHrN/CO5QfltDxxW+bZTtef4B2r
27nj62+RMs8POr/0nj03sVE7Z8l2e1V3H71nVf1KRDTtJfOcrVv3D+xwbvnR
JX1lnnYK9bSGuuvKZvf31ryX4yjbrbZ39lPbovk/GuFYYszcAuJ53GN7mnPR
/FtuCL1+tcMn4jmmWmPVn/lruiXZvDF7Tzwr6967es/mm35qlnMrnXhG6PoW
vGcBN1Jyt5aRefY6Mi3NZ346C30Z86D5NDHOz2AHsqq4RjnIPCXOGSxxTsOx
+zfJPCXOmazz7RUR847KPCXOmexLbM8FT2fLPHN1nLPYsm2tXq/2kP3ANR3n
LNZ1Sv/Tl01kntcU6lES53RWIs7nnV+w7G8lzumsd1zYqtVLZX8rcS6y6+UL
Rj8o/ZF4Spwz2aYGZzvm7pXrhBLnTNa8bcc+FabK9UCJcxazOjQxdnyzN+QH
nuk4Z7Eoi7W5rYbGEeftun4Vyaz4wu7LTGxkzhL/t6yB/dhjR/qL+VQKC+qQ
f8h+jMxZ4p/CTG32tRwzW+Ys8U9l9UY//V75qxw/SPxT2fD6g9r6t5A5S/zT
2OQh6/Zuc5T3tVyFepTEP5n1Mp9R1bWnHD9I/N+y/NndV3ickOMHif9b5lh6
VAmf4HfEOVHHP4X5FM6b2qNKKnGW+KeyC9Gbb3v3fUOcJf6pLNQmqMe+U7HE
WeKfxro5xqtHhkQSZ9ddQ2b1c3nFglq9XVG6kcy54qSdrgk+r5lrL7cy5VvK
nHfo1uUNu9w6zsmtnZi3atnH5jeWjgSZs8RfyzbWWOZd4ZjMWeKfxOplvxjT
NUCO0yT+SWyhg3Pw8w9yPDxHoR6VpOPzigWEacIbfpXj4bE6Dq/ZNtuqVq7v
5XhYo7O3N+zTxn9jex7PJM59de/pJrLd5hvW//lEnhLnJGa6PXd2s87PiKfE
OYmlTq8xYFPCY+JZX9dP5TlrWObC01EVZZ7HdJyjWd0ftndWmMs8K+k4x7CM
Hakpu2rKPHfqOMeyH+P9GmfVlXkW033GsQy78/k9hss8V+p4xrOQSU/TrOxk
nh919vmS1fWetDtxq8wzT6HuNFfH+Tlblus8rVuenK9JnKNZVwc3p8Gb5Xxt
nI5DDBt7srbfwsupxMdK9174S/bEu9KI/Df3iM/oyFuF/VweMZvKj3fULCnz
6bOk2awFCcGs3IF+zcyMZT5W1U4/dWkYyoav6hm5sozMp5GO8xNW/mnoXady
Mh9zHc9wtjIo3vNjXZmPEZ/vpia77U+3kPms0nGLZC3PHp0X3lnmk69QX0rT
cXjEov0sT7buK/OJ1tlVMGteacLufevlOsDDXbGuzkXzH7q8eXsTi2Tiw3R6
JDs46VZa4sDLxMd68cfQlv1c2G71nRkL/1NHmtz72e8m/dzZvK1P2+X/p45U
O/L80bvzr7L7y11vnCgm81mge3/ai82s9HvpQiOZz2AdZx9mduJtSEljmc8/
Op73WEJ0fPXPZWQ+paTDseZ3hvv+YyrWkei5BeKj1r0/7cI+n5vvY1lS5nNM
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
FPh9wfTvC5WqsHCIz/aWiwOOf+za2mrwQeqPye8vEO8vqT9fIIT0+tys4X+O
z3Um6sizzNTjMxr9/3m7iefF+0scz68LxOvifEDkg33YEu+8mdhE1y9RTwd9
XQNevWe4/qlLfH/Y783qDqdoPP4kpedabm15IADHazN32tUuypcHxzWwD7Aa
K/o90Pd75J9B3z9roLlqW9s/+ezqUoN2NGp9WdSZqPPzMsPn9WKptd9duJ7o
JF4X6F8XjQf98eSH4XbC7RO1EkeSzv02iH4bj1NvQrBVstVScX+BB0/js6dT
fznaj0Dcj/A+WuG690Ng6gUxH2f6+Tjdd0z/vtMq3Kda8FDViqhbdF2fih3s
Z/qf68L10vcDWqh59qerfdH8u5zce3YKzb8U9VuLCHfv/+EOvq8n538rx23b
Ee4VQjqOfwoTLl0cju9VGdH4zEH2HuO6PSEdx4dWnX/pqc0jvB4av/OH/6iV
oyJIx/Ft5n+/U3AimOuY9+Syrb9DW0dViiQdx8fW7LJpyJ5QrhfQ+J9H698+
t/w56Tg+/VFgn7X9wrku9+U7mGlcv+a2WNJx/ITEYdqkinheuV+fJX//V/o9
g/S9keX3fjDT0ng8TiZ/LxvHU787v7Duj0rEc11Lx+mZ13F5r49vScfx4xvF
rUiOx/cXNDTe6LzZ1Q49MknH8cUPD7peLilFsKdc5tP8nc+hZrmk4/jdXoc/
Okfge48auo6Nw7fH/HXmM+k43ujJhdFbHfJwnjS+3soTXdwLvpGO48eUsTq1
Ih/7dWTQ+PPJrgdzi+F7wRk0/qCHo1mb7r/5uFLUv27g5UHLeky7Q/aJuvOF
08GlrtwlO0Td/Kjq9IN598neUE++XXF7Qw0ju0L9U6HKza5MINkP6nPytWOv
Bz8iO0F9dPMtG9bOCKHrQX0b73uA64769ksX5o6ZFUXri3qeZ+8tsxvF0Tqi
blPnrGrrftkvoP5XaBXbIUPSaV2oH+C+YaqetrnEH/Wu9sOSxpXJJ/6o179y
+eUh15/EmfrXbRv8r8NfHsSZ+s49X2p6fqcncUZ9zqvocebjqN8u6WXG+o8e
fMibOKM+tZvfj31z7hBn1B+/++VUvNo94oz6sHyPNeuM1MQZdX/exwM5o94V
qhQ80oYQZ9QH+LxzS87WEGfUV5aZo6rqHUecUVcHWbW0ik8mzqgHOLVTmYzP
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
49mN2lOS7pa/Qpyl+/Ela9nzUeDHBE/izON5VsNg3vGcLc2bXi28rwdx5n3n
WF7EwzKZ7XyJ8xw+/3Uzf4Sb1aN9RMX7GTJ+HcT5B59/wNxt4wd1SCfOvfj8
3x9OPXBjnJx37OXz3zosedkHf9k/N9fN5xHr3MXWrNHcJcRZ6icZzPLTr445
a7OGOEt9bUPZirYQfObTJuKsm/78J+yzRVSJxWV2EGfp/gpnZn9/7RO3Yj9x
lvapZ8y7oO4Qn2eHiLNkJ5EMfi75y2fWSeLM81PWTsija/H5l8uZmZL+xJk4
8/5aLFob7uv18DTx4c8ns71Lq42wri7nv735eYdVsiwzO0zOf7lDZBlt//zd
gS7ER+on5s5SHv/5uwODiU+yjsNVlgHr/v4aNo74SPm5F/vQ/s/fHZhOfKT1
9WHpjg0T6lezJz5S/7R77P0zW5c2GYuJz2fpuXRm3LAg3mHCGuLD6yRsgVC3
Gcrnnzv+jz6S+Djy+dvo+qRNIz4h/Lw+E0es6tBXrsN85Of9WW3HDS9LmQ+f
D5SocHreg3dziQ+fP5S2+cNhDvGR4gQf2NPz+uVj4+1EPlBF9/cXZhEfqf/b
Vfhb84fDdOLD+cNV3d9fmEp8AqXrhcIJ/71eqhNaO/za9WjMuB3WyKe0dHrY
KenEh/d5g+kV425k9N9NfHz5ee1bNLFcYyrzCefnHXP+9Z/3KYgPt2c42/rW
1cEBu4gPt38Irtd22ZQLu4iP5A/DYafdu7yZ63cRH35/wZDEkj3du+0iPgOk
+xHyJ4zNz4/YSXz4/QuB7kOMvhntJD78foeonC6LLOy3Ex9eBwaNYD+D+PzN
+vdonDTwMvHh/fdgprHd6U8m6A81bBmf/5fL1+3yi98lbmo+n9uW8c771svc
WvL5eB5xPt26r8yN+1uY7mzqk/T6NHHj/hlcSkZm9R7pRty4Pwdrj+tPrj9x
I27oN8d0z0zdN+4MceP7BZxqlvQp08iduPH9BWZbtZ279Yk7ceP7EVxo/Op3
H4+zxI1/7wA9DX4/8hImV2+04Oube8RtIJ//38tLtLyU9YC4STzjYJNlXOLv
iRj/qFT3+Pz9Bf/vyOe/POlp1sLLqcS5GZ9/rvWJ/YM3y/4tkc//YJ17dt3y
ZM58/4Xhu3+0enDsGnHm8QYs8Ro81CnouhCfa+FC93+yHze/QZzx/LfbD3Ru
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
KMRLoBAvgUK8BK0Nx0uQMmSw+Zxm/xcvgUK8BArxEtQyGC+lgEL8DwrxPyjE
/6AQ/4NC/A8K8T8oxP+gEP+DQvwPCvE/KMT/oBD/g0L8D18Mx/9gOP7PAIV8
FhTyWVDIZ0EhnwWFfBYU8llQyGdBIZ8FhXwWFPJZUMhnQSGfBYV8Fv41nM+C
4Xw2B7AOI9RbQKHeAgr1FlCot4BCvQUU6i2gUG8BhXoLKNRbQKHeAgr1FlCo
twDWW/R55sA+Z6u1UeVjmPuANosTfOQ6VY1fd1p2HVaF93eW61QtOt1cmVuz
kvqprm8I9i3LYeZhm7YPfF5BbabrNyHXqUqmZVWrtN5EPfJzznqXhl9kfXZi
TCsbY/WGjOFPX/m8Jt2ptse7zYO+ssa7/J44JAST7rG9dP04y49s8dJ/jTzn
43MWOSzkwQrzhR8z2ECV6ez9DeNJj6t9aPjQQcnslK7vVSrpvV02HY19kMDM
dP0p3pOe1nyDy+a7yEGuIzm+qpi3rH0l3v8arzeDzVyW/OnSjwqcw3fSrxm3
NWl9xIRz+EL65J593lToaawupusPS/0v2Zzyn52CVLnMS9eXBOv0GWxWu35/
/WyUxibq+ivFkn7v1eu6HsaJrLGuv0kK6U7+rrsWXY9lrrrrfUf6x21VHzef
E8mkdcT+ZynsTOrwggk1zfh1fZf1xpqhjQJN+HXlk142Y+hAiwnG6uR7f24A
rN+nsGc3Fn5+N/Uts/erf6yvSzTpCx5GjF6zOp556OzzLem+23umjL4byerr
5p9DesGyc01WjQnj85T7cyezRRErVOX4PPNJr2Ue63Fvh7Fa6muMdWstc2q3
Y1S55FB2VXdeei6VxVbrVmXq0kD+PCgeP46l877NPXXn/Ur6Udfe6T2fGavb
6Y6fRXnxrj3ffnjE+PDjyP35NvI+xgG6PlZyP4z2Lf/+5jP/ApP8v5x3HJ0b
6fynX67kx+T84ljU9i6n/CpzPybnF/Ve2UZ8W1SR//0VtEM1LLvRfuC34abc
j8n5xZvsCVVWBJbhfuwL6W7b9/z5I5bqH/y5dtTn8f63xrzPOOpr3m25ZTzp
PWvD+52RbuehcomNZxN5XxvUo74tbpH2/DoL5n1aUff03d3QN/sAm8D7YKK+
xL3NsRbFtrNw3k8QdczX9uu4yfnF967zyvzplytdr5xf9H3f8MW64Irqy7r+
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
fgM2eZZ/sXnEff4+sPzcSMi2beuuPs3m/fXk50byZjeM7jDk//wGVA7YV/zk
EZyP/HzIlt3vjBrkqvl88kif5rR1oa3nI+yfSHGpw5MhLouDv/D7VH4+xD2h
hnvSZTw++o0MKNZoWYk+WU+gn57fyICcihOWN8v/xftzyd9vhgeZv3Zt6Q0p
Qj3Ejtc3pP4d8vMJll57fjY0PQga/ePA50tNRnTr4M3vI/m5kScW+4dO7kJ9
xWlfxriltbTu5D+rjl7/8UHTYKjO54f6v7w/SZpkP6SPvqYx05jH8n5t8vew
Mbq+ZKFwSv9+YQ/4/WKh70/YQ+5Pzkrr/n8c7gn1pQ3P/P4F7ULrVZL/IT5e
5Ra3blFsO7SR7kfio54K5Q6VviQcXw33Rjv7ezQ+AYFCvSiQ21OGZP90H9Xf
rPGd3fMeFOhfLwTw6wV9nlCO8xTq/7DO7oqVUfVAmNlIjyf04zyv6s1TC5H/
Ju5XuUTxPiDx9HcyMnh/C3v9dYdIvu7Sc1mlSP+h11eEvteGt/x7bU/9+A2S
ePy2Ue9+VLNON9qXHt8c/UIk/T2PMmltGs5IuGkt9U1IJs5H69tEtuy/R6wD
A9aB9cdr4ELghLvRVlfFuj105nV7/XXUwANdndlX/D4F8PsU4fss+G03/Y71
/+q68rgaszd+JQkhabNk+dm3xDR2npFl7CGFsY8RQ1kiEpLsW2QXI2tKloq2
sTyvrbGEV5a5peGWy1y6SCllyO/We973zDmvuf/0uV/XOc/zvO95zrOc5zlN
tBz9Ij4l/QJZXMALpI8Fh8O3cRG+PY4W3pH+eTea/FsPm8aJST924MN1ft/B
a2Tf0ZB+DTI99hOaRuofnIIxzPsjYIPvxqc4HkyBAHYfx1xvaR8fwOh/AfVk
3qNcfDV+YFl/jFASD89Qnu8QWOs7dP2uHpO5uOsU8n78wNIJr8dLdGoZvSHA
MELnY2Yd0XmHMXLQaIaT+a5xdFrX+Kg1tvfvwa1rjCh/f/bx7wle++Z7IsA5
kqcwsHYRGgsku+gLYycI2Kk8r3SIzx+BnD9y5uyHM+Q5tmL1Et4nekk6r0jv
4/UkfTw4PY9XyX7hx+o9vEf03kh2v8An5isPJeVuh56MXhIw44/MtBkj9gK3
rqELWdd7yu9ppn7l1qAhYzz+V1FILr+P06DgdoWvR7/xK8WJ5+6aTHoLQcIN
ePfr30+0p+1J3QH1y/ru6lOvWpWKgkv5ubtXCt74YbrBtD+iNL5OwRvmTK29
1L8IL5TXfcjj67G0qFLvMK29IM1rruBF0dl2tXfbkvP/1G8SV+WFQeWKQlT5
ObfXCv5TzZnmOdFfUKInW8EH7dpdatr3ce7GsnNnooKHT0tolJT6Bus6+UT6
PpHp0WHiCuN5N0sHQaLTXMGDxk1pVXTVltBppuD6/vUTHwTLdRzUb8qKffzX
tIYVhUbl55xzFVzv5eppsmdQol+5LxRDxyd/18W9ECeXn4NS9gvMPfWy18m0
XAwoP49K6/GTCz5uSe/pIEj0myt4r6wai6d8tCX0K3Yp1rweOndnnA2hX6Pg
nV+McI/zsRbWltcFUP9r7uTvNjt7VBR2l78/RgUfWbX6R5N9iA3L+VL2UxSs
qo8y2ZM47P7Zr/+2Q6oPrmYZ2fM1SufwaZ27Wc9OT+osdiD1RDR/3f1aUmyr
DnZCnXK+zBT83W+B40Ne2QjlZRPbNAqeeC3Npvdha4J/VtbXhLufLVsnyfUI
1B/cZHGpp/2RikKN8vfqjYKvPGk1y2TP465yfum63lIw54HJ/id1UrR+/L5t
sNXfKQ6kvoDmhbMquAbYzrMjfNH877Nfcxt7tqxN+NIouPf8mHOxz6xJfQHN
/5b+9clxunN1UidVrODedRtnv/jNUpDuyS5Q8JZJI5Pb1TAXVpc/x7cKHj4x
KM3kr2H1cn6pngk65jPA5N+hdD+33J+P1n1L81I/9JomcG/gUY3wrvxcsYUs
f0hMnrJ5rae94F9OP/XL0qt51rb3riD4SeeoFbx524SXJr8bh4zuWzBA0QNa
2BCaeN78lD2py1DeZ9P+0jjptbctqS+gftDyHfsfbQAz4ZV03lvBZ7j0G7Y8
8R+U5s1W8POGmob1UIDSvdfyvDq4+vPi75ZWcRAkepT1DsWaNwP8r9sSepT1
Dk37r8yMC7ERjOU49XemP7u/RmhTUZgsnXtX8KJuSVt/vvAFDdI5eQU//GFM
1rTVhagn94LLuIttvNvvfYxoKWRb0fWuh2EeaWu2z3QQJPoVPQnTVn3cW6GV
HaFfuacAThS1TOxpWi8S/RoFnz1+05+lMdbk/D/1m954hFf1a24uaKX6AgWf
sOR/Fbv89RUlvp4r+NFDA7tZZX1EUTo3Tv2ygr9GVIzKw/pSvYOCz9q5+E6t
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
LQ==
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
X1Lhz7puXedJ2bXpd/Wy8+s9n5CdZ2j2jppmz/zkrM3ruTXI+pGeZ/2szQzP
+lTrov/nwuy/RnO/96hdUP5EybbrRbJ/qD1WeA3/Hm1mBGV30WaeyL4bVfS4
fjk8seix/Gp4BvwT93YT3FW2Q45r4FlFz5mt4BeKnjPbwVPgh2nkp0o3y9tO
rt8+XfTYfwU8qej5+Vp4btHz8C3w9KLn6pvhqUXPjW3hZ+Ax8L3w60XPLVfB
04qeo66EJ8Pj4C7wm/BY+D74DXgkfBv8StH6Tmd4QdHz8K3wfHg8fD+8tGh7
qeycH8l+A/eGVxStN3WCXyxaj2gPz4QfgzvAzxU917WEn4WnwN3hZfAkuBv8
LjwZfgh+H34GfhB+D27I8Rnv50HZAuHP4Yfg07O5qXvBetAy6u9esn66FN65
ZN3nDbUNPW/61Ok8+/OQE/O2jb9UYd32TWRlZCPm4Gfha8rWE9+HqyGbUz4f
bl32eqi61vQlr+H2ha8rWY/eB24NXxRZx74A+Qyycd5+xK6yL2Q28Ds4rsrb
Xi+9YyHfl0vWcV6Hd9I1879vaczgf29IfF/SJ7vkvUaQj/Jm/uM8+V8i6+Pr
qFO7ZJ+l/nO/snXnH+HjStYxf4KP17zBb8bKHhBZZ1yicbJknWgxvEPJ64A9
qHNNyTrUa5SnJa9BNsFdEq81NsP3J15rfKNxp2y9r5rus+S1RVWtr0vWDXeX
r7Zk3SqGz4WPL5uHJ177VtI6qOS1707wRSX7VeW/aArXo34iH4f0t5J9o1fx
/Wkl+zevgadFtlndTJ3nI9uUZJ+bE9nW1L7sNffOWkPxu7l6v9KztLYKtrm0
1dgg2xnlH8mOp/uC25W95j5C9umS12h/akyXbsnxB1y37LX4wdTpWPJ6/XC4
s54/soX+N28/mnxtN5a8vq8Btyl5Xb4ffEPJ6/KD4A4lr8UPlL2w5DV9LbWF
kvXWCrhJyesnTa6NVZ/r+J3r6Z143fOv5rCS/UHy37Uo2U5QG25f8tq3sta5
JevpdeDbS7ZVHKn2q/tN7J86iHMv4fM0+E/N47KtZPYT2U70HE4pWWc/jvIu
Jevsx8L3qr1zTKfOtqJ94qfl7evRObSG1XqpFp/v0PijNUje63GtabU+OAp5
Z8n+yqPhu+AByO4cJ2fyCq15tQbW3Mp5FhY9dmscniA9Om8/uNqx9Pe66mN6
/pktSP3o+rx97mr3bcrud7L/yCbQSv+FvJjPL2sOk82Ez/3UN5FdIt/PAZor
8h6L5GMbKJtd1pdb572ul01E66R68AOaf8oer2qUveY4Hr5fY1vidtVAa6i8
7RI6j+xbuo8jkY3LHmMORr4c2edya9nfqY7iB3rn/UzbZM/gwuw5yPag9nwq
dR9Qu8vbBnG87FWy85Vst1AfPE9tQ30JPgHZF3m57p2jU952GD0X2WT0rutx
zYPznhev1HgaeZ5tijyx7D6h81yXPYfWGlMTtzHdS9vI59N4/hjfD8nG04bZ
+KN1umyBZb0zrm0Ycmg29upebsy73lElS8U/7F9yW7sUPlW2P+knWodyvCt9
RWtAvruF3ybUHRS5HdYseTxX+QLqdcvGebWJUWqb2f/KX3lz3vfQUX0r7+c7
Iu+xoC3HyLyfXTv1scj11S9U96as/rll/1cT5ILI9vZO8DOy9Utfzts+pfZw
Qdn3rut5R8+r7OemdvpgVi4fbZes/SgO5qnseg7N+790/eeUfX19svHqqrLH
2zizm47K7lHv88m8dZ0+2bk0xj0SuS88iJyOHJf3822X3a/aiWxZes563rKD
rYWv0H1EtnEpPuf4YP/2+tTPRs9U/t/7sns4K7uPLllfaJ+1bZ2rZVZfz19t
5o7sfTXjPzrn/a57qF3nfR1ds3fXJHu3qq++dFHi3+mZ6Ny9s/PfGrmu/N4d
I9eVT/62yNelOCPd6+isb2hceiLvsUmxURrPFGPSLXJ/lw9fY8Og7F70PEdk
7+XYYN/+V6nr6tlKn5EdW9emaxwc+d0MUR+J7IPvEfmdD8v/vx7yWNZ3hmSs
34/O3ssJHGOy71Q+NPut2pLetfrwDfBDkfUcnf++yDFUjSOP5f3z9tl3jTyW
qvxqrnN83u3n85J1ld1KHjMnU36d5t/E9yRWfMKEvHUzne/p7Jwfllwnlt5d
tm53emJWHY2Z92f/q/9XOxmYPU89f80Tl2XtTO9we+L7Hpndu9rplKyt6t4f
z57bvZH7d+fI45eehXT7FmU/m1s4z5ca86WjUtYu2Cf9CLyR8vMp7wF/Jf0N
fhj+QPZjeCfkz5RfAfem/Be4JdxX+gXcWrYX+Cf9N9xH40Gwv+pReCvl12hN
Kr0MvhDuCf+m5641HfxZ5ofaC/lH5P8dSPmv8FVaB2fv4dm83+s3sh1Q3ovy
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
Y8fZToEbxI4xngzXj62fPAOfEzsmeQ58Sux42mfhGnqv8DWyA8WOxZ1A+fGx
43UnwnWo8zbcgTpnx45nfo7y82LHeD8PN4t9ntnSAWPHTs+F68WO6X0aHhUc
lzkLbhI7jncG/ETkmEDFRI2MHFepmKgrYse0L9Q98rs18P1cw+Wx49tf0Voy
9rW9DI8JjhNdoOcdO878Jfji2PHt88qOkVVbfQG+KHY8/IvS3SLHdiq2qmXs
mPZXKR8ROSZTMW+jIsdSKkbrytix94uoc0nsOPb58FWxY+Nfg3eNre8Ng8+A
52h8gxvHjjeeXrbvW75SxXorxkA+7wfURmL77BQfIn1vbM7xDoohUCzBo0X7
yuVP7VZ0bOTDyEqpfffyJX+K/DW2P1GxIntzDJGegNwrcQ7FV4ljKRRTod/v
mThf40vk1tj+RMWc/Bbbn6g4lj0S5wFtQJ4eOwZ7WtlxJFWz65H/Xe26cuq4
BMUPDC46huHI7PoVm1E3K6+SzV/DkE1jx37PLNvXrHnqa+S4on2v44v2t7bI
WDZ5rYllB5bOKf1K8YDSyRVroLi/UsExLXq28ts+nLMfXj5x+cfHFu03vyRj
xSIq5l+x/yu4h/Mj2+cP5Z7HUf4d8org+G+t9T4I1iFkY3k/WKeRLWV5sN4j
O8nCYF1Wa97fgvM01F8+Co7F0fvaKfXYodiY34NzPNRn3w3WmWRjWRGsH2tc
lUFDuUsfwK8F68GyC70arCvLjrQoWN+VjWLH1OOU8gv+je3L0JzyTrCOJXuR
/B2yS52F/DhY59B65L1g/Uy2oB1Sj2XSr9LU46/0rl1S51nperYF54Sor/0V
nHOiPliROs5e/ffv4JwT9Z0/gvNJNG5sD84/Ud/8MzjnRONMPnUcv8aErcF5
LxqLFgfr/bKP3Zvav74c/ic4/0TjwN6pc3U+gfdKnauzFt4zdX7OGj3P1LkB
Gk/2SJ3DsxqumjpXZ6XWa6lzjVbBVVLnAq2Ad0udw/MRXEzte9YY8nqwTix7
2hvBOqJsYmMS+yXlT3srda6RYpKnqH+qnDrVKJ8g/yo8K7G/T36/ofKvqF9L
9wzOtdDadkNwnonWrYpxrkL9K6m7KLGfS/6uCdLD8o7bfDqxL0Zxd6MT+wEV
S/xkYn+fYom/Cs7B0Dp6UmL/iOI85yXOoVNMo/wv12pdx/U+JSNb3nGwExP7
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
k160NPX+RNKvNqSO35VuuTJ1nKJ04/8Dc9EZDA==
             "]], 
            Polygon3DBox[CompressedData["
1:eJwtnHngFdMbxu+9M/fOchOlQllKZEuWFtl+9sq+E7JvhRaSfUkKhVKEyJIK
bcgWokJCKokWWmUJJVKE0O/59Jw/5vudZ94z586de+ac933e551GF3U9pUup
UCgMLxcKsf4vqxQKx+j/9KhQ6JQXCldp21L7HXXsF9m2yQqFGjrhVLX/sFoo
5Gmh0L1YKDwm3Ff4b7XpTj86Z47OvS8pFHoJ7yZ8nXCm9teo/RC1v0ftN6r9
DbIvl32u7Jdq+6vka/hMtkuE/xQ+Wni28BhtdbX/qNqfIltf9X+b8E7C1wj3
E75deGfh7sJ3C98ivKNwN+F6uv6y+jtWn/++Pr+P7DfJ3lD2LrI/rOv7Q9dX
S58zVfbzdOwHtd9fbabo2DuyNwNr/0rZx+t/A9me0vlnqO0x6r+b7H+pj1ba
3z7y/Vin7Wvtb6Vjuewn6/M/0Pk11F8PtR0qfK/wZerjP9lPUvv56rui6+um
/R917rWyba3zq7KfovbTqr4nB8j+TuR7dY/a3yrcWPhq4fP0o64VPl2fMUz7
l+vYRj5fxxbo3HY69o32a8o+WPt11H/E/Vb/71b9Gxwo+6TIv01v9d+p4DHB
2JgnXE/n3qVzvxCeou+zj84/SOd10fl9hVfIXuLeCffiHqntt+rjO537vPBM
tW8o/Jra9BY+QH0PFq4n+xs6f1fZW8h2uc6/U/b9ZX9I9k91ra/L3kT2fWW/
VPbNM/9+B+n63xYeqj4eLrhP+q6v9nfKPlr2B2X/U+ddLfsS2WfLXkPt+zLW
hecL11J/G9T+cLWfpPb3yn6H7LvK3oOxqvOvEV4q/Jnwe+q/ua7nEB3vqvaT
hfcWPlC4s/BztBHeRue8qGOp7Fer/0fV/92yf6xjzWV7Xf1dpLZV2a+V/XHZ
+8n+kez7cq9kv1D2N2XfTf211PGOsie6vp6y/yT7PNlP1b1eJbxa2xnaf1vt
91T71mp/hdo3Eu6n/l9S/4OF1+v4hWq7WOd31vkDtB2v/VE8w+p7gtrvovOb
q91lan+6+vxZtlx9XK/9SbLvJfsBsl8le13dv5jnWf2/J7xQx09T+w/V50T1
/bLwtsJPC58p/JXwqcLThN8SfkT4RZ2/SP0/rP1d1f9A7b+h/obw+WqzQPbd
dM5Lsj9e8Tx2j85vI9sF2n4qeQy/J9vb2lpqf5Tso2WbLNxaeKzwuDxcg9rv
UfC1nSW8VHgf4TeEzxH+uuTf6C3hz7Udr/3JOv912c7X9mPJz+S7so3Q8SXC
ewtPEJ6lra32J+r4q2rbXttC2Zvq2CuyTdK2n/bHyD5Wtt30fQfp+76p7/uY
vu/+ws8Ifyz8dNXfiXNfivxd3xFuJTxaeEzua95ReGTk7/Jsxc/ag8IjhPdV
f4+rv3fV3xNVf6edZH8u8nfdR/bHZJ8i+1DZ35S9sezPyn527m1ZyWMSG3Pk
7tp/IfLcyZz4ZcnHmCtPE54vvGsY/6O11dH+I2p/smwvCO8i/Ljws+H34bcd
J3yu8GPC2i3crT9HCT8qzPp1l/CRws8L1xYeLHyi8DjhJsKPCY/M/Zl89tDI
z+Io4S2FHxY+SXiosL5qoa9wW+FX9X+1PuBQxqxsc7WdwFqg4xNkb6PBtlz4
N20Pab+27tfNzLXq5H7drzXCbwnHwsOEazFPq+1xOjZX+zvKfq/2x8v+cNWf
wWe9IttLzD+y3yT707LfJ/uWwrcIPyPcX7i9PvMXta/q2A2x59C9hJ+JPLcy
BhnLL0Yem3V0/q1Fr/cDqh5z28k+LPJYXFHx2jBb+Irca/5ZwvPCfD9N+BCe
DeEXcz9z9YWfjPws3qU54mbhRsJdhafK/j9+e+EXcvsUlch94ms8o02XUXhA
x47L/YzwrAxnzhGeIXwUY0v4ZdYK4TY8e8KvsP4In8izJvxG7uft05LHPGP/
E21Hsq/j43PPmb/IfljBcylrLGvte7K/mfs71+BZKvhePMEarP1+OtZOtuEC
NYQHCh8fxhNz+RORxzZjdEXJcwpjt7Hu93263y/rfj+iL7q78IPCbwk/Lvy0
2miKLPTX+cfo3NayD5P9I9mfkn2Y7DpcGCD7sbnXhF/V/+EFrxUjtG2m/UGy
nyDbWbr/Xwn/T2Nho/A26q+X+hul/gapv0/0YZcXPFZqVP2bLCp5zPBb8Zsu
DvMVvzVjcEmY/xibV7MJT1Kfqfo8Xf3dwvyurV3mOWteeL6Zy57V59fj99D+
2fq89xM/K1zD69p/QO1PYC4W3l34JPVxA/6N2n+j9mN07BXZzsQnUNvRwi+z
luEDhPXhBbV/Rts9Fc/h88N6wP0fq/avar+92j8s2xO6npqsv7Kdrv4fw+eU
bYraHKq2j+IzsfbgMwgPU/taar+t2rdX+w8SP788x5+H+WFpmP8YT3fE9od+
Fe6p/Ud0fkX22rKdovPrMCcKX8BcWPWY/TnML4zl+ep/vfZ769zNZX8gtm/2
p45dpP1H1V+i9luyTsp+fsW+Zicd66r9B9WmedH+1dHaP1P38y7ZZurYqdp/
SudvLlxfbc+oeg5bVfIzzdw2UHYm1CrPhezH6Zwewi/q/DayjdRWV7gR8wL+
iuztC177q1WvgStLfuZZG99N7HvQ5jXt36/tTn5r3bfN1H6A+tuovnOeY+FL
1M9fBfvM+M6DZC+qvxrMS7L3EP5a7Vdr7B0tnOrzVwk3F14hfK7wMLV/R8c6
aH8AY1D4beHPyx5DjCXG0L66lg6y/yRbR7XpwhjV9iP3Svhc/FF93hrhf3Tu
8fivwr8KbxA+ruoxxdhijDZnrGmbo/3rdOxpfF3hicLN9L2eFB4v/D7jX/ah
whvU30L111j9fV/1OZz7mdqcrLZPCffANxU+ibGvbbr2O+vYE7K9krgtbWjb
T/2tV38R61TVbWj7MeNBbV/U9m7BY56x/5Lwe8KXCT8ufJi2+/Xd79b53+r8
i3UPJ6q/RNf3g/Ct6v8H4T+Ej6n6GeRZHK8+9lFfoxLvn65jD/J8Micyt+rY
/rK1D9d/sO7HMNkGajsRX0XH9pBtXOJnj3M490DhscI7qP0Q/INwP3lGeVa5
h9xLvsPhib8D34XveJjw07reLfR9Guj7nKnrHaljI7kXatNfbVNtx8l+puzH
yv58+DyuiWvjO/BdXtKxvWV7LvG1Mmcxd40QHiHcTvh+4abCTwhvoesdJHyO
+h2j/odr68dYTDzX4VPjW7fVsb6yXaatM8+ftlHa/0T3eKnu8da6/ju0/7z2
B4b5k3itrfrfQvgw2d+U/VPZ9xI+QXia8JfCrYRvSuz74pOy/t8sfFDBPjH+
4vFq/4HaL1D7llXHhKwtUyPHiszDzMdHE/PzjKr9h2r/ldrvx/wgPFV4vnAL
4RsSx8qsgayFtyTujzWXtfdMtf9U7Zep/YFqf6S22trfUttR2r9Rn9FLbdtq
u0b71+r8PQv2kfFPTtL5H+n8hWrfGv9HeLbw18IHMT7V/oiC10jWyhsT++LE
8PijReErhL8J8f50fUYL4QnCFwufrP4+Vn+L1N/+6m8wcxZjW/ZbZX9YuD9z
h/BtwtsHXNLv0Vf46fD7Hyr7PcJPCQ8VPkT47tz+Br7H+5Fj/ScZs6zXwnex
Pgk/xvMh3Ee4ga6nt65njK7noap9olnMvwX7SvjIU4S3Lth37p44HiCGIZYZ
pfO30f7Osp3L+BbeWngn4Q48v2p/H2Nbn3eL2tcO/MnvwrfnjgfhHxbhV/E8
yz5QuJVwT54P4XuF9xK+Wfg59b+V+m9MrKT+TxGerutfous/QHiQ2vdjPlT7
m3j+he8Wbip8Y+6YZW7JMQCxzOnabha+RNuV2u+ReK1lzSWeOUn3/aeC+aH1
xHn6vFf1edP1ebsTzyT2xRiPrxEvCA8S3k+fd4fwMNZ44aOE+wkfmXq9YN3Y
R+f3TOwPw8nwe+FzfldyjIYvik/6bckxF77qEannyzn6/L2J1zV/tgvXNllt
/yf767LPkL2p7IcITxCeKbwn63mYz7voe+XCdwifUjBnw/N4sNq/pvafqP0e
sh8q/IbwLOFmwlP1eWcWHOtnwrfrf13ZV+rYbbHvwYrAZ01T2y8rfl4+0Pfv
mDveG6X2k9Xfzjp/b+HnhScJ7yQ8XG0ml+yz4rsSQ74kXKvg2PIh1taSYzBi
sV66/rML9vnx/a9P/LwRQxNfHqP+31f/89R/c/U/UefszLlq3wF/XPYvZf9J
9jayX5c49ibmJPY8QxdyB886PmPmmPr74H8Ta7fU+eN0/lSdvwv3Q+cfWzDH
CJ91W2KuEY4R/mwvtX9O7d9R+8Zq3054ivAXwvsKtxAeK/y+cBPhVsLnMjaI
K6v231+S/UPZdxP+oeLf7zN9nyvV/52J+ZUaIb76lueSscOaJTxW52+H/6zj
5+n87/X/fL6L7O/LfoF+w+3Vf0Ntd8fe2G+grRdzkLadtL9t0T7kzzrntLB+
HcJn69iORbeh7Ueyx7KfIftsxkNubguOq47aTxMuReZsftK1fCgcEesJrxS+
XH00UV//CXfUfmvWfe3vqmP3Cl8Re7+Wtlu0f1ls/28L4Zu1f73a19Z+Udt+
wgv0mf/K/reO14Tvi/3d9tI2QPsrWZOIJZkjeVYS+4s/B39yD/3vXfA19VP7
1WH9Hh/8+1XCpxK7MucKf0zMFNtfn5t4vX1A5z6n328b9VePNVf2G3VsC+Y2
bQO0/yxrs2zv6PzfS+Z0FjN2ZX9C9ldl367qZ55nn/lpkvp/W3hdyTHsIrWv
qfZ3q/0Tal+3ak5sbckxL1wZv/m/JceojIWN6uMGte+v9rXVfhJrVuzn+wv8
RR2fGpszgDv4Q+fW0f6Psr+t7z0191zGnEZ8u4PaPCL7OJ3XgPgQnyjymFwr
+wzhDC5HeJ1wPbXvr/Yj1X4rtd9O+GHhscL1hRsKPyr8gvC2wrsIPyX8uvAO
wk2EnxR+TXh74enqP+FZV/9rKub3npZ9guwNZf9b+CvhHYW/5HnCX4vMR7bW
9/0xty81OviXjJfN1H53bffF9nnxJ/eM7QtXMvv7+6i/z9TfV7JvJ1wDn16f
P0DHn2PcMib12Yt1Tkt8PfXRUG2/Z86COxJuSW6jYn/5AG13VPybjNT5nYr+
rd5VH42Jh2SbLduume/HSrX5vOp4urPsR2jrpv0NzHnq/0N8aJ2/JPday5rb
SPgL9XcdfJ3On1M1hwKXAgc7JTFfsylXo+09niXh6wr2GYm330k8Vs4I45X8
AWOTNfTtxOslY6VtmD8r+Hj6rBXCb8h2ZeL9H7S9mdjHJpZqEtv3fk/bPyVz
Mt9VPIdw79ZHnlvIN7TW9e8Pnxv7mebZZk66R/t/qs0lIR4/kWc7d6yCP0/8
s174YuHJ+ODCvwqfDRcn3Eb4SfVxjPpqr21o7PmOeHoP4fv57Nyx7AbyFfpu
K4SPhSvDJ9D5fwhfJDwJH114bYhfGEOMpV+YL4RfFz4SvkD9HKj+9i46Pu/A
HEdfRfOBfEe+a7OiffabtPUo+B6Qb4E/pO0aHTtH+7+p/w4hXmqn/tcQQ8Bt
8ZsI/y58ofA7wscJX6xzDij6GriWQdpaaL+g7Up+E21ttX+GtiGx15gNJXOY
rD1/qY9u3HuN+1q6H1Nk/7tkTnu57L/gfxT9Gd9r/zxtS2U7Qn3Fat9BeLHw
YcKlquO7L4UPEv6P3yb2d6tfNB8CHwBfelTwTyYnHrvXCafC1/Jfbbcp2l/B
H1rGvdZ+ueo5mrn6BDgAxpa2u4TPhHNJnFOC+ziWZ0z752hbxNyv84tVr0cb
hbcO6xPnt9H+9TqWa79J4mc7l20p90JbJ93vaTp2mmy7Jh4rVdmXyfZz4ms5
Xtsq1nKeWdkPlz3S561KzPVeEtbLY4U/wV+WfR33R3ghazNJC4hQnjF+m8Cf
Tkz8bHaXPana38WfTIo+xjPyqXDz8Ox8m5grasecr/0ztM0XPkD2f3KPmRnC
e8ceS4zxmcL7xB77PFOzhPeN/aydKbxA+EDhf3m2iV+K9kEWJX4m4SZaxH5W
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
b5cdG8FBwUWRU7osNcfeoewaHrj3TsIXVqw5nch8lLhekJpNajfhXOBe4Miu
SV2DcX7kGgxqM6iB2SXEd71Cf/tVPEcfkLkmmXilfph/R4b5/TO175A6R1o/
zPdnp855kfsip3ZJ6hr7S8vOIVF7Tw3sz7Fr5KiNpYZudeyaWGrrqGm+pOyc
DbXO1FhRawUfQHxGzdLxZddkUctEDrBZ2TlMcoPU1P4b4n9qbdEsLgzzEVpG
NItfxdaAomWkxvvKsnMY1H4/KrxC9qHMj8I3C78q3FX4z8Q1ff+E5w2tcJPM
sTRzOFplcrDkYskhn5e6Zv7gsmvaqaW/S/hjnX+bcCV1Trd2eL7J9T4gvED2
+4Xrpo7hiOUYH/Al1EB+U3INNLWR1DjEYbxxfsMw/w4M6zkxI7Ej6z/8ETUX
UYiHqcU4PvPc9CQcTOoa/QtCfErtPjWP38euMd5UCwk/HpuDI3Y6Wvgdta2n
Q09WXDN+Wdk5PmrJqYn9LvBV1MpSA9Y68BPEj9So7Rf4ImrXqFmidokaMGrB
qLm/PPgH1OJTo3FY5BoNajfg385S+xPD/AGHBpc2UNs5md9h0DH4J6wvfEe+
66Ml15fhvx9V8ZrL+sb6yVp7f1gvqJE/v+yaC2rnyYm8TWxdcK6EmrAuIV9B
rRg1QydFrkGiluif1HMJ9Q+HZn7HwXll11jw7oPTU9fmUKNzYuaaSWp2WDNY
O7qkPpcaCur/yLGeW3ZNJrlXatp2DXxL7/B7UjvXOaw35LjJdaMRuCC1JuCi
8DyPTp3zJvdNTvwifp/MaxeafLT5nXXsHu3fXfJ6Rs6F3As1idQmUgN2a2TN
IPkaagBblV1jNyD0x9pIH/SFpvrL2BpktNb8RvxW1KCSr6C+4YTYGla0rPBd
x1fs4zA/k+MuRn7HALlvOG64bjS06GXJkRPXEd9NV/srEsde00uuryUGq1mw
No3YjJpd3udAjo1cGzUZv8aeg6nVeC9z7oecDrmddzPnZsgJkRu6KjEXTs0y
9eqdE+dO4Mjhyt/PnAsix0Oup0viXB05FnItlyeuv55acn1wx8TvI5lWcj11
p8TvV/io5HrlroljJ3J+5P6IoXj2hkSOraZkzhWRQyKXRI3Kmtg1EdSu0Cd9
85nUbsPn7B/4Q/ibVzLH5mhU0Re+mlm/hqZ2k74w973kmqhd5jvz3RsVXC8y
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
z0bLRA0k+UZqMlpE9umo1ViSOZaG04Lbogbl8Mg1HNSmfK8+Hyo6B0MuBv3H
sRXXsML3U1P/Y+yaXvirhrm5VDhguOBGublgOGK44u3x8UrmxOHGGYOMRfQ/
1CvvmJtLJkdCrmSH3Nw5HC1cbf3c3B0cPVz9drm5bDh1uPWmubkjOB+4nz1z
cz9wOHA5cMhwydtXrG34PDU3jaYGbQ310+TOyKFRy4QmAu3CDhVrJeam1lqg
SUCb8Fnq3DyaILRBn6bOvZL/I3cK53eB8N1lc4FzUmt3yOmT25+dWktEzpbc
LXMucy9zJrUTlTC+BpfN/X2XOhdGTojcUL3cuQxyUOSitsoLm3JR5LDIZaG5
QruVVazF2jp3boucF7kv/F3qkVjDOmm/dm5tDBw9XH1d4f+KzpmQO6Heifog
1rDT4EJk/6VozgbuZovcXBwcHVzdT5n1TXAicCM/Co8Q/iX2+zm+Tq21QROE
NoiXnZErJ4dBLqOYO5dBDoNcRrsw/8wtW+uzeW6uCA4QLrCUmwuFE+XdMj9n
jgXJ4TcL8wnjpW7F3HA591pITpDcIBo3uO6/y9a+wZnCnf5VtvYMjRVa4vVl
a6/QKMHV/lq2dmlY5mcHTTja8Gcya8PReKP1JqcJ1/1L2dooNGpw+0nF2jU0
amjb0oq1a5nOWVY0xw7XjiYMrR4vpUMrhkYLLeB/ZWu34PDg8v4tW0sX585X
sOaz9qPxQhu4sWztVyU3Fw8nT+41z83lwwnCDaIZQ3tYrFhLtiozF0SMTaz9
Q+bcCHMQcxG/Kb8tvznvYiHnSe6zWcW53r8y6wfIIZFLWp05t8T6gfbkm8xa
LjRbaLfWZ+aa4ajhqn/NzJ2z/qDV+zZzrpGcI9oscgxwk60qzv1ukP29onNy
5Ob+zZxbIidEbui/zLkhclDkov7IrF2D44brXpmZy4MDgwv7PXMuHY0bWre/
M+fCyCmRW1qXOVdPzp3c+xrhV4rWXKC92Jg514UmBG3IisxaLOZQ5tLfMmsz
0LCgZfk2de6XHCm50m9Sc/ObOPqqOX78tRFlc//fZc4N4x+g9fwncy6SnBq5
tbWZtTFoCtAWfC08uOic/abcfeZcB/2TC1ieOZePxo580tLMuQ9yIuRG/g/P
/Kfn
             "]], Polygon3DBox[CompressedData["
1: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
/zbE/3Hooo5a4v8DQl5Eyg==
             "]], 
            Polygon3DBox[{{2298, 1515, 1622, 2618, 2155, 2156}}]},
           Annotation[#, "Charting`Private`Tag$75022#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0skrB2EYB/D3Z9+Jg1zIQU6c5OSHwomTIxe5cbCc7LviLyB/AM6yJUpC
Eif7vqTkKP8An0nNdz7vMzXPM+/MlHb2tvbEQggzUmcRraudPrmUEkIeV1nC
LVbymHFesYUfbOcPuxlLDWGI2ZxnERdZzpWoPzfZxCOeM8HMRrlUx5kvA4lm
qAd5zSHecJi3HOEdR3nPMY7Lg/UEHznJJ07xmdN8ifbLV87yjX1JISSZ2STv
6loWSIdnu1C38pAN3GAVl1nGBRZyjpkc5K930cVvtvGdzbxgDQ9ZwQ0Wc8d9
X6w3M5c1TJGzhBBy1KfM5gmzom/AzKgPM3jAdO4zjXvcldSoN40J20zmJm03
rNP2wxodod/F5Nj/f/AHiJZAlw==
         "]], Line3DBox[CompressedData["
1:eJwl0ltL03EYwPGnUanQ8AU0hC66cc1OpmYh3Yp3Xdm2TmtLUVBwc7PsQIRd
WlDd5LSgiOhEbCAxIqorL+0V5Csw8F7xI158+TwPf/gffvyPFaYvTx2IiAXV
ExFXLE85pK22iPG9i+0RNXbyCbv4khm+40U2OcI/zDGvv+YqN/iY//mMO1xh
0jO+MMULHRGjfK20XmlCM4ciTrDMDCvs4SxPsspTrPE053iGd3hXZ83z7OU9
nuN99vEB+/mQAywejsjyjc5rSZNa847dbPEoP/EI69z2LYvc5CP+Y4VlrZtH
+ZvDbHCQb5nmC6a4wCSrPO4cLrn3ssbsz5nXr4MRt+0/WeIPFtniLX5ngau8
ySYbumH+xuv8ymv8zKv8yDw/MMf3zLLkHHKJ/f9hF3IAQRY=
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1689, 1975, 901, 1688, 2628, 1889, 1690, 2629, 1890, 1691, 
         2630, 1891, 1692, 2631, 1892, 1693, 2632, 1893, 1694, 2633, 2407, 
         2722, 1695, 2408, 2723, 1696, 2634, 1894, 1697, 2635, 1895, 1698, 
         2636, 1896, 1699, 2637, 1897, 1700, 2638, 1898, 1701, 2822, 1976, 
         1899, 1977}], 
        Line3DBox[{1703, 2409, 2724, 1702, 916, 1704, 2639, 1900, 1705, 2640, 
         1901, 1706, 2641, 1902, 1707, 2642, 1903, 1708, 2643, 2410, 2725, 
         1709, 2411, 2726, 1710, 2412, 2727, 1711, 2644, 1904, 1712, 2645, 
         1905, 1713, 2646, 1906, 1714, 2647, 1907, 1715, 2648, 1908, 1716}], 
        Line3DBox[{1718, 2413, 2728, 1717, 2414, 2729, 1719, 932, 1720, 2649, 
         1909, 1721, 2650, 1910, 1722, 2651, 1911, 1723, 2652, 2415, 2730, 
         1724, 2416, 2731, 1725, 2417, 2732, 1726, 2418, 2733, 1727, 2653, 
         1912, 1728, 2654, 1913, 1729, 2655, 1914, 1730, 2656, 1915, 1731}], 
        Line3DBox[{1733, 2419, 2734, 1732, 2420, 2735, 1734, 2421, 2736, 1735,
          948, 1736, 2657, 1916, 1737, 2658, 1917, 1738, 2659, 2422, 2737, 
         1739, 2423, 2738, 1740, 2424, 2739, 1741, 2425, 2740, 1742, 1978, 
         2741, 2502, 1743, 2823, 1979, 1980, 1744, 2660, 1918, 1745, 2661, 
         1919, 1746}], 
        Line3DBox[{1748, 2426, 2742, 1747, 2427, 2743, 1749, 2428, 2744, 1750,
          2429, 2745, 1751, 2662, 1920, 1752, 2663, 1921, 1753, 2664, 2430, 
         2746, 1754, 2431, 2747, 1755, 2432, 2748, 1756, 2433, 2749, 1757, 
         1981, 2004, 2750, 2503, 1758, 2504, 2751, 1982, 1759, 2824, 1983, 
         1984, 1760, 2665, 1922, 1761}], 
        Line3DBox[{1763, 2434, 2752, 1762, 2435, 2753, 1764, 2436, 2754, 1765,
          2437, 2755, 1766, 2438, 2756, 1767, 2666, 1923, 1768, 2667, 2439, 
         2757, 1769, 2440, 2758, 1770, 2441, 2759, 1771, 2028, 2760, 2512, 
         1772, 2029, 2030, 2005, 2761, 2506, 1773, 2500, 2825, 1985, 1973, 
         1774, 2505, 2827, 1999, 1986, 1775, 2668, 1924, 1776}], 
        Line3DBox[{106, 788, 107, 789, 108, 790, 109, 791, 110, 792, 111, 793,
          112, 794, 795, 113, 796, 114, 797, 115, 798, 116, 297, 269, 1167, 
         303, 117, 1146, 270, 118, 1185, 341, 119, 799, 120}], 
        Line3DBox[{1778, 2442, 2762, 1777, 2443, 2763, 1779, 2444, 2764, 1780,
          2445, 2765, 1781, 2446, 2766, 1782, 2447, 2767, 1783, 2669, 2448, 
         2768, 1784, 2449, 2769, 1785, 2450, 2770, 1786, 1989, 2771, 2508, 
         1787, 2010, 2011, 2006, 2772, 2013, 2012, 1788, 2018, 2019, 2832, 
         1987, 1974, 1789, 2507, 2828, 2000, 1988, 1790, 2451, 2773, 1791}], 
        Line3DBox[{1793, 2670, 1925, 1792, 2671, 1926, 1794, 2672, 1927, 1795,
          2673, 1928, 1796, 2674, 1929, 1797, 2675, 1930, 1798, 2676, 2452, 
         2774, 1799, 2677, 1931, 1800, 2678, 1932, 1801, 1990, 2001, 2829, 
         1933, 1991, 2014, 2015, 2007, 2831, 2009, 1934, 2031, 2022, 2023, 
         2679, 2020, 2025, 1935, 2024, 2510, 2680, 2032, 1936, 1802, 2681, 
         1937, 1803}], 
        Line3DBox[{1805, 2453, 2775, 1804, 2682, 1938, 1806, 2683, 1939, 1807,
          2684, 1940, 1808, 2685, 1941, 1809, 2686, 1942, 1810, 2687, 2454, 
         2776, 1811, 2455, 2777, 1812, 2688, 1943, 1813, 1992, 2689, 1944, 
         2002, 2016, 2017, 2008, 2830, 1945, 1993, 2501, 2690, 2021, 2027, 
         1946, 2026, 2511, 2691, 1947, 1814, 2692, 1948, 1815}], 
        Line3DBox[{1817, 2456, 2778, 1816, 2457, 2779, 1818, 2693, 1949, 1819,
          2694, 1950, 1820, 2695, 1951, 1821, 2696, 1952, 1822, 2697, 2458, 
         2780, 1823, 2459, 2781, 1824, 2460, 2782, 1825, 2698, 1953, 1826, 
         1994, 2699, 1954, 2003, 2509, 2700, 1955, 1827, 2701, 1956, 1828, 
         2702, 1957, 1829}], 
        Line3DBox[{1831, 2461, 2783, 1830, 2462, 2784, 1832, 2463, 2785, 1833,
          2703, 1958, 1834, 2704, 1959, 1835, 2705, 1960, 1836, 2706, 2464, 
         2786, 1837, 2465, 2787, 1838, 2466, 2788, 1839, 2467, 2789, 1840, 
         2707, 1961, 1841, 2708, 1962, 1842, 2709, 1963, 1843, 2710, 1964, 
         1844}], Line3DBox[{1846, 2468, 2790, 1845, 2469, 2791, 1847, 2470, 
         2792, 1848, 2471, 2793, 1849, 2711, 1965, 1850, 2712, 1966, 1851, 
         2713, 2472, 2794, 1852, 2473, 2795, 1853, 2474, 2796, 1854, 2475, 
         2797, 1855, 2476, 2798, 1856, 2714, 1967, 1857, 2715, 1968, 1858, 
         2716, 1969, 1859}], 
        Line3DBox[{1861, 2477, 2799, 1860, 2478, 2800, 1862, 2479, 2801, 1863,
          2480, 2802, 1864, 2481, 2803, 1865, 2717, 1970, 1866, 2718, 2482, 
         2804, 1867, 2483, 2805, 1868, 2484, 2806, 1869, 2485, 2807, 1870, 
         2486, 2808, 1871, 2487, 2809, 1872, 2719, 1971, 1873, 2720, 1972, 
         1874}], Line3DBox[{1888, 1998, 1997, 2826, 1887, 2821, 2499, 1886, 
         2820, 2498, 1885, 2819, 2497, 1884, 2818, 2496, 1883, 2817, 2495, 
         1882, 2816, 2494, 1881, 2815, 2493, 2721, 1880, 2814, 2492, 1879, 
         2813, 2491, 1878, 2812, 2490, 1877, 2811, 2489, 1876, 2810, 2488, 
         1875, 1133, 1995, 1996}], 
        Line3DBox[{2034, 2340, 1408, 2033, 2933, 2249, 2035, 2934, 2250, 2036,
          2935, 2251, 2037, 2936, 2252, 2038, 2937, 2253, 2039, 2938, 2254, 
         2040, 2939, 2513, 2833, 2041, 2940, 2255, 2042, 2941, 2256, 2043, 
         2942, 2257, 2044, 2943, 2258, 2045, 2944, 2259, 2046, 2613, 3026, 
         2260, 2341}], 
        Line3DBox[{2048, 2514, 2834, 2047, 1423, 2049, 2945, 2261, 2050, 2946,
          2262, 2051, 2947, 2263, 2052, 2948, 2264, 2053, 2949, 2265, 2054, 
         2950, 2515, 2835, 2055, 2516, 2836, 2056, 2951, 2266, 2057, 2952, 
         2267, 2058, 2953, 2268, 2059, 2954, 2269, 2060, 2955, 2270, 2061}], 
        Line3DBox[{2063, 2517, 2837, 2062, 2518, 2838, 2064, 1439, 2065, 2956,
          2271, 2066, 2957, 2272, 2067, 2958, 2273, 2068, 2959, 2274, 2069, 
         2960, 2519, 2839, 2070, 2520, 2840, 2071, 2521, 2841, 2072, 2961, 
         2275, 2073, 2962, 2276, 2074, 2963, 2277, 2075, 2964, 2278, 2076}], 
        Line3DBox[{2078, 2522, 2842, 2077, 2523, 2843, 2079, 2524, 2844, 2080,
          1455, 2081, 2965, 2279, 2082, 2966, 2280, 2083, 2967, 2281, 2084, 
         2968, 2525, 2845, 2085, 2526, 2846, 2086, 2527, 2847, 2087, 2528, 
         2848, 2088, 2969, 2282, 2089, 2970, 2283, 2090, 2971, 2284, 2091}], 
        Line3DBox[{2093, 2529, 2849, 2092, 2530, 2850, 2094, 2531, 2851, 2095,
          2532, 2852, 2096, 2533, 2853, 2097, 2972, 2285, 2098, 2973, 2286, 
         2099, 2974, 2534, 2854, 2100, 2535, 2855, 2101, 2342, 2343, 2856, 
         2102, 2344, 3027, 2614, 2103, 2536, 2857, 2104, 2975, 2287, 2105, 
         2976, 2288, 2106}], 
        Line3DBox[{2108, 2537, 2858, 2107, 2538, 2859, 2109, 2539, 2860, 2110,
          2540, 2861, 2111, 2541, 2862, 2112, 2542, 2863, 2113, 2977, 2289, 
         2114, 2978, 2543, 2864, 2115, 2400, 2401, 2865, 2116, 2402, 2336, 
         2394, 3045, 2612, 2117, 2345, 2374, 3042, 2615, 2380, 2118, 2616, 
         3028, 2346, 2119, 2544, 2866, 2120, 2979, 2290, 2121}], 
        Line3DBox[{2123, 2545, 2867, 2122, 2546, 2868, 2124, 2547, 2869, 2125,
          2548, 2870, 2126, 2549, 2871, 2127, 2550, 2872, 2128, 2551, 2873, 
         2129, 2980, 2552, 2874, 2130, 2403, 3048, 2627, 2131, 2404, 2405, 
         2393, 2625, 3044, 2397, 2396, 2132, 2381, 2382, 2375, 3043, 2384, 
         2383, 2133, 2617, 3029, 2365, 2347, 2134, 2553, 2875, 2135, 2554, 
         2876, 2136}], 
        Line3DBox[{2140, 2981, 2291, 2138, 2982, 2292, 2142, 2983, 2293, 2144,
          2984, 2294, 2146, 2985, 2295, 2148, 2986, 2296, 2150, 2987, 2297, 
         2152, 2988, 2563, 2886, 2154, 2350, 2367, 3033, 2298, 2156, 2338, 
         2352, 2624, 3046, 2299, 2395, 2388, 2389, 2376, 3031, 2379, 2300, 
         2368, 2620, 3049, 2406, 2301, 2160, 2989, 2302, 2162, 2990, 2303, 
         2164}], Line3DBox[{2163, 2888, 2565, 2161, 2887, 2564, 2159, 2353, 
         3034, 2619, 2158, 2387, 2391, 3039, 2622, 2366, 2386, 2390, 2385, 
         2157, 2392, 3030, 2623, 2348, 2337, 2155, 2618, 3032, 2349, 2153, 
         2885, 2884, 2562, 2151, 2883, 2561, 2149, 2882, 2560, 2147, 2881, 
         2559, 2145, 2880, 2558, 2143, 2879, 2557, 2141, 2878, 2556, 2137, 
         2877, 2555, 2139}], 
        Line3DBox[{2166, 2566, 2889, 2165, 2991, 2304, 2167, 2992, 2305, 2168,
          2993, 2306, 2169, 2994, 2307, 2170, 2995, 2308, 2171, 2996, 2309, 
         2172, 2997, 2567, 2890, 2173, 2351, 2369, 2568, 2891, 2174, 2339, 
         2371, 3025, 2310, 2370, 2355, 2377, 3035, 2399, 2311, 2398, 2626, 
         3047, 2312, 2175, 2998, 2313, 2176, 2999, 2314, 2177}], 
        Line3DBox[{2179, 2569, 2892, 2178, 2570, 2893, 2180, 3000, 2315, 2181,
          3001, 2316, 2182, 3002, 2317, 2183, 3003, 2318, 2184, 3004, 2319, 
         2185, 3005, 2571, 2894, 2186, 2354, 2572, 3036, 2357, 2356, 2573, 
         3040, 2372, 2358, 2378, 3037, 2320, 2187, 3006, 2321, 2188, 3007, 
         2322, 2189, 3008, 2323, 2190}], 
        Line3DBox[{2192, 2574, 2895, 2191, 2575, 2896, 2193, 2576, 2897, 2194,
          1549, 2195, 3009, 2324, 2196, 3010, 2325, 2197, 3011, 2326, 2198, 
         3012, 2577, 2898, 2199, 2578, 2899, 2200, 2359, 2579, 3041, 2373, 
         2360, 2580, 2900, 2201, 3013, 2327, 2202, 3014, 2328, 2203, 3015, 
         2329, 2204}], 
        Line3DBox[{2206, 2581, 2901, 2205, 2582, 2902, 2207, 2583, 2903, 2208,
          2584, 2904, 2209, 1565, 2210, 3016, 2330, 2211, 3017, 2331, 2212, 
         3018, 2585, 2905, 2213, 2586, 2906, 2214, 2587, 2907, 2215, 2588, 
         2908, 2216, 2589, 2909, 2217, 3019, 2332, 2218, 3020, 2333, 2219}], 
        Line3DBox[{2221, 2590, 2910, 2220, 2591, 2911, 2222, 2592, 2912, 2223,
          2593, 2913, 2224, 2594, 2914, 2225, 1581, 2226, 3021, 2334, 2227, 
         3022, 2595, 2915, 2228, 2596, 2916, 2229, 2597, 2917, 2230, 2598, 
         2918, 2231, 2599, 2919, 2232, 2600, 2920, 2233, 3023, 2335, 2234}], 
        Line3DBox[{2248, 2364, 3038, 2621, 2247, 2932, 2611, 2246, 2931, 2610,
          2245, 2930, 2609, 2244, 2929, 2608, 2243, 2928, 2607, 2242, 2927, 
         2606, 3024, 2241, 1597, 2240, 2926, 2605, 2239, 2925, 2604, 2238, 
         2924, 2603, 2237, 2923, 2602, 2236, 2922, 2601, 2235, 2921, 2362, 
         2361, 2363}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{689, 902, 2628, 690, 916, 718, 2729, 931, 733, 2735, 946, 
         748, 2743, 960, 763, 2753, 972, 776, 2763, 984, 789, 996, 2671, 801, 
         1008, 2682, 814, 2779, 1021, 828, 2784, 1035, 843, 2791, 1050, 858, 
         2800, 1065, 873, 2810, 1080, 888}], 
        Line3DBox[{691, 903, 2629, 692, 917, 2639, 719, 932, 734, 2736, 947, 
         749, 2744, 961, 764, 2754, 973, 777, 2764, 985, 790, 997, 2672, 802, 
         1009, 2683, 815, 1022, 2693, 829, 2785, 1036, 844, 2792, 1051, 859, 
         2801, 1066, 874, 2811, 1081, 889}], 
        Line3DBox[{693, 904, 2630, 694, 918, 2640, 720, 933, 2649, 735, 948, 
         750, 2745, 962, 765, 2755, 974, 778, 2765, 986, 791, 998, 2673, 803, 
         1010, 2684, 816, 1023, 2694, 830, 1037, 2703, 845, 2793, 1052, 860, 
         2802, 1067, 875, 2812, 1082, 890}], 
        Line3DBox[{695, 905, 2631, 696, 919, 2641, 721, 934, 2650, 736, 949, 
         2657, 751, 963, 2662, 766, 2756, 975, 779, 2766, 987, 792, 999, 2674,
          804, 1011, 2685, 817, 1024, 2695, 831, 1038, 2704, 846, 1053, 2711, 
         861, 2803, 1068, 876, 2813, 1083, 891}], 
        Line3DBox[{697, 906, 2632, 698, 920, 2642, 722, 935, 2651, 737, 950, 
         2658, 752, 964, 2663, 767, 976, 2666, 780, 2767, 988, 793, 1000, 
         2675, 805, 1012, 2686, 818, 1025, 2696, 832, 1039, 2705, 847, 1054, 
         2712, 862, 1069, 2717, 877, 2814, 1084, 892}], 
        Line3DBox[{699, 907, 2633, 701, 921, 2643, 723, 936, 2652, 738, 951, 
         2659, 753, 965, 2664, 768, 977, 2667, 781, 989, 2669, 794, 1001, 
         2676, 806, 1013, 2687, 819, 1026, 2697, 833, 1040, 2706, 848, 1055, 
         2713, 863, 1070, 2718, 878, 1085, 2721, 893}], 
        Line3DBox[{703, 2723, 909, 704, 2726, 923, 725, 2731, 938, 740, 2738, 
         953, 755, 2747, 967, 770, 2758, 979, 783, 2769, 991, 796, 1003, 2677,
          808, 2777, 1015, 821, 2781, 1028, 835, 2787, 1042, 850, 2795, 1057, 
         865, 2805, 1072, 880, 2816, 1087, 895}], 
        Line3DBox[{705, 910, 2634, 706, 2727, 924, 726, 2732, 939, 741, 2739, 
         954, 756, 2748, 968, 771, 2759, 980, 784, 2770, 992, 797, 1004, 2678,
          809, 1016, 2688, 822, 2782, 1029, 836, 2788, 1043, 851, 2796, 1058, 
         866, 2806, 1073, 881, 2817, 1088, 896}], 
        Line3DBox[{707, 911, 2635, 708, 925, 2644, 727, 2733, 940, 742, 2740, 
         955, 757, 2749, 969, 772, 2760, 1183, 1184, 981, 785, 2771, 1119, 
         1145, 993, 798, 1124, 1125, 1005, 2829, 810, 1126, 1147, 1017, 2689, 
         823, 1030, 2698, 837, 2789, 1044, 852, 2797, 1059, 867, 2807, 1074, 
         882, 2818, 1089, 897}], 
        Line3DBox[{709, 912, 2636, 710, 926, 2645, 728, 941, 2653, 743, 2741, 
         1102, 1138, 956, 758, 2750, 1105, 1140, 1150, 1151, 773, 2761, 1113, 
         1114, 1152, 1153, 786, 1158, 2772, 1120, 1159, 1154, 1164, 1155, 
         1167, 1160, 1165, 1121, 1161, 1156, 2831, 1157, 811, 1162, 1127, 
         1128, 1018, 2830, 824, 1163, 1130, 1148, 1031, 2699, 838, 1045, 2707,
          853, 2798, 1060, 868, 2808, 1075, 883, 2819, 1090, 898}], 
        Line3DBox[{711, 913, 2637, 712, 927, 2646, 729, 942, 2654, 744, 1103, 
         2823, 1139, 1104, 759, 2751, 1106, 1141, 1107, 1110, 2825, 1093, 
         1115, 1094, 1172, 1116, 1166, 2832, 1095, 1174, 1096, 1173, 1146, 
         1168, 1122, 1176, 1123, 2679, 1175, 1169, 1171, 1097, 1129, 1098, 
         2690, 1170, 1131, 1149, 1132, 2700, 839, 1046, 2708, 854, 1061, 2714,
          869, 2809, 1076, 884, 2820, 1091, 899}], 
        Line3DBox[{713, 914, 2638, 714, 928, 2647, 730, 943, 2655, 745, 957, 
         2660, 760, 1108, 2824, 1142, 1109, 1143, 2827, 1111, 1112, 1144, 
         2828, 1117, 1118, 1185, 1186, 1177, 1179, 1178, 2680, 1187, 1188, 
         1180, 1182, 1181, 2691, 825, 1032, 2701, 840, 1047, 2709, 855, 1062, 
         2715, 870, 1077, 2719, 885, 2821, 1092, 900}], 
        Line3DBox[{715, 1100, 2822, 1101, 716, 929, 2648, 731, 944, 2656, 746,
          958, 2661, 761, 970, 2665, 774, 982, 2668, 787, 2773, 994, 799, 
         1006, 2681, 812, 1019, 2692, 826, 1033, 2702, 841, 1048, 2710, 856, 
         1063, 2716, 871, 1078, 2720, 886, 1134, 2826, 1135, 1136}], 
        Line3DBox[{887, 1079, 1133, 872, 1064, 2799, 857, 1049, 2790, 842, 
         1034, 2783, 827, 1020, 2778, 813, 1007, 2775, 800, 2670, 995, 788, 
         983, 2762, 775, 971, 2752, 762, 959, 2742, 747, 945, 2734, 732, 930, 
         2728, 717, 915, 2724, 688, 901, 1099, 1137}], 
        Line3DBox[{894, 1086, 2815, 879, 1071, 2804, 864, 1056, 2794, 849, 
         1041, 2786, 834, 1027, 2780, 820, 1014, 2776, 807, 1002, 2774, 795, 
         990, 2768, 782, 978, 2757, 769, 966, 2746, 754, 952, 2737, 739, 937, 
         2730, 724, 922, 2725, 702, 908, 2722, 700}], 
        Line3DBox[{1190, 1409, 2933, 1191, 1423, 1219, 2838, 1438, 1234, 2843,
          1453, 1249, 2850, 1468, 1264, 2859, 1483, 1279, 2868, 1495, 1292, 
         2878, 1507, 2982, 1306, 1519, 2991, 1320, 2893, 1532, 1335, 2896, 
         1547, 1350, 2902, 1562, 1365, 2911, 1577, 1380, 2922, 1592, 1395}], 
        Line3DBox[{1192, 1410, 2934, 1193, 1424, 2945, 1220, 1439, 1235, 2844,
          1454, 1250, 2851, 1469, 1265, 2860, 1484, 1280, 2869, 1496, 1293, 
         2879, 1508, 2983, 1307, 1520, 2992, 1321, 1533, 3000, 1336, 2897, 
         1548, 1351, 2903, 1563, 1366, 2912, 1578, 1381, 2923, 1593, 1396}], 
        Line3DBox[{1194, 1411, 2935, 1195, 1425, 2946, 1221, 1440, 2956, 1236,
          1455, 1251, 2852, 1470, 1266, 2861, 1485, 1281, 2870, 1497, 1294, 
         2880, 1509, 2984, 1308, 1521, 2993, 1322, 1534, 3001, 1337, 1549, 
         1352, 2904, 1564, 1367, 2913, 1579, 1382, 2924, 1594, 1397}], 
        Line3DBox[{1196, 1412, 2936, 1197, 1426, 2947, 1222, 1441, 2957, 1237,
          1456, 2965, 1252, 2853, 1471, 1267, 2862, 1486, 1282, 2871, 1498, 
         1295, 2881, 1510, 2985, 1309, 1522, 2994, 1323, 1535, 3002, 1338, 
         1550, 3009, 1353, 1565, 1368, 2914, 1580, 1383, 2925, 1595, 1398}], 
        Line3DBox[{1198, 1413, 2937, 1199, 1427, 2948, 1223, 1442, 2958, 1238,
          1457, 2966, 1253, 1472, 2972, 1268, 2863, 1487, 1283, 2872, 1499, 
         1296, 2882, 1511, 2986, 1310, 1523, 2995, 1324, 1536, 3003, 1339, 
         1551, 3010, 1354, 1566, 3016, 1369, 1581, 1384, 2926, 1596, 1399}], 
        Line3DBox[{1200, 1414, 2938, 1201, 1428, 2949, 1224, 1443, 2959, 1239,
          1458, 2967, 1254, 1473, 2973, 1269, 1488, 2977, 1284, 2873, 1500, 
         1297, 2883, 1512, 2987, 1311, 1524, 2996, 1325, 1537, 3004, 1340, 
         1552, 3011, 1355, 1567, 3017, 1370, 1582, 3021, 1385, 1597, 1400}], 
        Line3DBox[{1202, 1415, 2939, 1204, 1429, 2950, 1225, 1444, 2960, 1240,
          1459, 2968, 1255, 1474, 2974, 1270, 1489, 2978, 1285, 1501, 2980, 
         1298, 2884, 1513, 2988, 1312, 1525, 2997, 1326, 1538, 3005, 1341, 
         1553, 3012, 1356, 1568, 3018, 1371, 1583, 3022, 1386, 1598, 3024, 
         1401}], Line3DBox[{1206, 1417, 2940, 1207, 2836, 1431, 1227, 2840, 
         1446, 1242, 2846, 1461, 1257, 2855, 1476, 1272, 1678, 2865, 1679, 
         1491, 1287, 3048, 1680, 1681, 1503, 1300, 3032, 1622, 1515, 3033, 
         1314, 1623, 2891, 1527, 1328, 1626, 1629, 3036, 1540, 1343, 2899, 
         1555, 1358, 2906, 1570, 1373, 2916, 1585, 1388, 2928, 1600, 1403}], 
        Line3DBox[{1208, 1418, 2941, 1209, 1432, 2951, 1228, 2841, 1447, 1243,
          2847, 1462, 1258, 1611, 2856, 1638, 1477, 1273, 3045, 1605, 1639, 
         1665, 1666, 1671, 3044, 1669, 1683, 1684, 1685, 1670, 1667, 1668, 
         1301, 3030, 1660, 1606, 1664, 1662, 1663, 3046, 1315, 1661, 1607, 
         1645, 1528, 3025, 1329, 1628, 1646, 3040, 1541, 1344, 1631, 1647, 
         3041, 1556, 1359, 2907, 1571, 1374, 2917, 1586, 1389, 2929, 1601, 
         1404}], Line3DBox[{1210, 1419, 2942, 1211, 1433, 2952, 1229, 1448, 
         2961, 1244, 2848, 1463, 1259, 3027, 1612, 1478, 1274, 1654, 3042, 
         1613, 1640, 1648, 1649, 1288, 1655, 3043, 1618, 1619, 1650, 1657, 
         1651, 1659, 3039, 1656, 1658, 1621, 1643, 1652, 3031, 1653, 1316, 
         1682, 1627, 1674, 1676, 3035, 1677, 1330, 1630, 1542, 3037, 1345, 
         1632, 2900, 1557, 1360, 2908, 1572, 1375, 2918, 1587, 1390, 2930, 
         1602, 1405}], 
        Line3DBox[{1212, 1420, 2943, 1213, 1434, 2953, 1230, 1449, 2962, 1245,
          1464, 2969, 1260, 2857, 1479, 1275, 3028, 1614, 1641, 1615, 1642, 
         3029, 1616, 1620, 1617, 1302, 3034, 1624, 1644, 1625, 3049, 1686, 
         1687, 1672, 1675, 1673, 3047, 1331, 1543, 3006, 1346, 1558, 3013, 
         1361, 2909, 1573, 1376, 2919, 1588, 1391, 2931, 1603, 1406}], 
        Line3DBox[{1214, 1421, 2944, 1215, 1435, 2954, 1231, 1450, 2963, 1246,
          1465, 2970, 1261, 1480, 2975, 1276, 2866, 1492, 1289, 2875, 1504, 
         1303, 2887, 1516, 2989, 1317, 1529, 2998, 1332, 1544, 3007, 1347, 
         1559, 3014, 1362, 1574, 3019, 1377, 2920, 1589, 1392, 2932, 1604, 
         1407}], Line3DBox[{1216, 1609, 1610, 3026, 1217, 1436, 2955, 1232, 
         1451, 2964, 1247, 1466, 2971, 1262, 1481, 2976, 1277, 1493, 2979, 
         1290, 2876, 1505, 1304, 2888, 1517, 2990, 1318, 1530, 2999, 1333, 
         1545, 3008, 1348, 1560, 3015, 1363, 1575, 3020, 1378, 1590, 3023, 
         1393, 3038, 1634, 1635, 1636}], 
        Line3DBox[{1394, 1591, 2921, 1633, 1379, 1576, 2910, 1364, 1561, 2901,
          1349, 1546, 2895, 1334, 1531, 2892, 1319, 1518, 2889, 1305, 2981, 
         1506, 2877, 1291, 1494, 2867, 1278, 1482, 2858, 1263, 1467, 2849, 
         1248, 1452, 2842, 1233, 1437, 2837, 1218, 1422, 2834, 1189, 1408, 
         1608, 1637}], 
        Line3DBox[{1402, 1599, 2927, 1387, 1584, 2915, 1372, 1569, 2905, 1357,
          1554, 2898, 1342, 1539, 2894, 1327, 1526, 2890, 1313, 1514, 2886, 
         2885, 1299, 1502, 2874, 1286, 1490, 2864, 1271, 1475, 2854, 1256, 
         1460, 2845, 1241, 1445, 2839, 1226, 1430, 2835, 1205, 1416, 2833, 
         1203}]}, {}, {}}},
     VertexNormals->CompressedData["
1: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
umDv58/GdbArOGbVxbgBUv3t/entDxhwmOMU/dzrcJA8JDqUFU4jjrF9D2Z7
M8BKxj2Z93cErJbdfl4mgkYCRH/2895jQMI7Drt9Rc9gu2md38YoGtn36FZS
3R0G7Jdy+xCnHgsr+cIPzHhOI/Jd52e7XWeASs6mjaM28XDibfgpEkeNC+79
RwMuMiDl5PPVrXeSQHRer0VXMo1siFpXG2LBAKOQmyqnvqSAchTHbZVsGhFY
zLEW5xGn6/nLcR7ZuyqtDueRoqjCSabUvCDw/eI8nBe+sj1yxXlBefMsfeT5
gNxpb5HnZXMNLiHP31tkPN2X4u08C7O3xRRvz1rnEIy8faRA5bQbxcP3Bl+r
IA9v+2KUiTzsOFX28CXfbPg9wzmB+1UzfL7qERr1op8oam/8Jr80Hgxzjiwx
2VoLa0pnW+0ZHCAllRdPPRkNAZMFNFu5j+VQWLtptKtmkDxesAQi/RmQeUvr
643CB2AZHO72LohGeIYb6hdS7Q72/knmvD7wXe3lldXBNHJGl81Jz48B6wxe
egd0PYbjsdEOMVR7i8r82XseU/zwI8n9rcMT0J4zedOJEAqH/qF+0T4MGElY
dMTIKxiOXz2ZaR9KI62/n19d/JAB7zuaFdQhDPQVpuqspvp3MdstqXhPBswv
Vp4tpBEFYpJdN5ZG0sgzn8CrOO5WJAp74biz0HZ6jOMu18rZD8dRUJy4Ko4j
yWctYTiObj+tPIPj4qyGvxKOC3vZBbk4LlbuDPmFOG/Uzb23nML5qqLcSYjz
sDtDTWco3FZezF/0icJtHFusHeJ2xEuV33lKFIgy7jjM3l0FXLL3M6wcBglj
8YvIR1e9IbCHfmd2cAHMOhRANz0xRPQ3jR5cY+gCH2tXDEszsiDh9QL+jtgh
Us51+K1oIAMm/effFQ4rzXzRQBrRHrjxr/bOodA8bPde8uZf7YMrit9ie+Bb
trz/bc/3SMnF9gW7H/7r/DY3E+Z1TlYy/tXudXgW8zqSnar/aveY58Z8noYB
+Ff7f/7+p/0/x21y49uNP+3X0rff9d/2uj/tiz5M49rBqStX96eddd1vv/Hf
SbkvzOPQf9v/c1CX+8/xw7h2+f9r+w2jhgzEs6z+arhV+IBsbzvGxLPFtHMN
iOd97t+XmvD6kIcO+50nwDP5C54JC8+hlU1MPIcfje8z9Aom69+FToRn8hc8
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
5uHvmt7ZZ6MseZ/89hgdc6HaE3ze7adT7cUhrs1+s7zJdtNR5Q9Uuzh8+PaT
auex/XV2prcnqfhqv82Yes4oV7PGVdTzp1tvkXdaepeUOtvHV1Dth+ils+2p
9vMdZ/b7HnAliTwKsrwUPt3s25/i+4a6f9RduuUKkTrI44Hvy8qRmsblSLWd
gf2llxhwve3LnA1picS7JkVRM41G8tPPGrJTPm6r5LvTWy6nkfdbezuyqHlq
r3tYJp3RDyJ+P6xv6L8lewalUvuO0knsTF6HNhMtaPe69HvzR0+yQ8L5VPrY
ECkUu/P9OtVft9fmyfw+/JTYe3G1P39KI8I3QhdEelP6pMJoXoBgBDl21XT1
W6ofQ1WzXj+ixhHbbp0l58YiCLkb9ZA/ikZoP+9qKVI81jOwIMOfJ4oYOtkr
xz6jkW83YtV97jLgzUbta7wmz8iJIunlD6jx9SVI8M5lit8ypqVf6uJ8TvIa
0m1extLI6pAZtF+3GRAgYGI4xBdLRCQluI/H/cM/9uPyIkfNWJ3PfAzYN2ma
1/WuHJJSMvuNNuXf7XmP7VvvTs2z13jco92LyYKxjg+KjpSf+lysIb+4D9be
5b99MaeaeMokuFzxbyaG9/4Pb28eTtUXvo2jeaCITElmKQlFpFaJBkWmIqWk
EJmaNEhSaTSPkamEzHOmWIbMmWeOeeZwIhUyvPs5He/39/Z+3n9//dG+7Otc
Z++z9lrPuu/7uZ9n5xlDHJ8vs+KDOJ56wP44HLV/Z1X/rvXGx91yis6Xl6Jp
nsi5NWcpqCGYRzGUiMMPn9V901iRiO6m7+BfRdyn1onSqoinZPzzixLDmulE
9PWYQ8IHYn+8nx8e2GJPxgrmTjz8PMmoSjv0/mgqCSnKCa3qJPbNb7/1kh87
pqBX/SvO8meSkEnuMyx2m4z9bM9JrFH5jHRfpgS/J+JGxfP24WYzMr61Ri7y
gVs6WmwrFmssIqHZ16QUO2I/jdWJHAr0zELWqqOPuqr+Rxfi+EcXylvPnqr2
hMDhL/7wyL3+hmTkY/aQzNpRxnWdzazeI/iso1Vv0lAtyh8tru2T6kDL8lUP
nTgwhF1e/+xeoduKFmTcbx+U7UKNJx9RfWX4hJAsjNfnZYzgG0Meb0+uejOT
h1++QNmnVTuQwG6RT2p1o0j4yhrrDsNE/ObFRZYAg0Z0ie6RcM7AGKrQ43h8
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
M8SHUyvUPIN2jOKffW2m38WrMf9967M18e3ItfHGdpM9ZPzn0lrR75l5mN2r
YVpykIRaszO1s46SccRdegt60Vxs9Cmv1K+VhAZFpI7+4CbjU0ISljfeF+DJ
0NtPW3+T0IllutqGs6P4z868MrefhTjwiWpyNVM7WhawK7KybBRHLRzMPt9e
gpVFjgo6S7QjvSnJyKpnozgrcU9Cg+s3rJPP9pXXoB0puJtduMQ5ipPo7UcZ
4qqxOd8pr/Bo4ntaMzY1m4/gB7apZpGNdZhH36zrrkgHar1hMRx9ahjLriTP
ms81YfuYmwPu8x1o77Ppr8eMB/Gk5Nbyjdvb8ZPg4QaXg13IQsz9at6VPux4
uOhSpWY3VnBdsXHCuRtZhQl08Bt34bUej6+xq/biYC6mrQyuvUjXpMz84Ntm
nKekMmKa1Yt1pNbXBc/1I68NF0RLGmtwf9H5BqvKHix7pDZrv9oQyjrw9dyx
02S8vew4V19SDrYLWJer1EBCHD/3Su/QJ2P29EoPPnIWXnz0kbumnIQm2L7E
+yuQsV10+C/T1XmYOaEiia6HhBI81S1Bf+DXfMcK+oM821Al6A/rLscWBxO8
mFONR6QzqxDnMgfYijO2o0QWEan1RaP4u/RgxF7eUmzK3GfgKd2OzL1KTthb
jmI+8TarfUEV+JuPzrJw63b0Wo359yESwQeV5BN6OmpwxMPd0erN7WhYkl4x
v3kYT+y5ddqEsxGLPXoRFerdgaY0ydXnZgfx8XG3ocT8NpwwqfZ157IuZOa8
1Vs+sQ9b83DkGXN1Y4aLL8tvm3Wjz5YyFrFrujCPKosL2bgXR/jxriDl9aKB
gqy2sqRGnBjsu63Tlxjn7MrATwEDaIvoRkedrVWYp8BrncQOIk5H0R3LERtG
+qtXMub5FWLuvaVKpbu7sPPGWc1XzKMoxLrhRZ4xGTPTW25aUZmBa97eyQ0u
JKFLrzZ6x1mTcUvALZa3VmnYRDjFtSGHhLpy/Ke1z5HxzkmmkoOJX7Bb5Huv
mkoSqhO99NuHmOerJox5jgnmYrt9Sk2xbSSkZ9xeemUHGctLJrpkWeRjI2Ep
mavEvultNorm6cn4ah3zNyaLQozPqhyeW9uOsrrN5/nwKL7AeN3c0q4Ui2tu
P39brh09k7HJnFUZJdZL19yQTBX2oLdfvvlNO2quFprYYjWCR/JCqlRL6vAp
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
72Yo
      "]], {}}, Arrow3DBox[{{0, 0, 0}, {-1, 0, 1.61}}], 
   Arrow3DBox[{{0, 0, 0}, {1, 0, 2}}]},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-3, 1}, {-1, 1}, {-6.162277058226328, 2.414213562373095}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0, 
    DirectedInfinity[-1], 0}]], "Output",
 CellChangeTimes->{3.8535652114697313`*^9, 3.8535656474422483`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"aae6409f-2988-442d-91cb-d36e78a647bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcTan", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.853565118005186*^9, 3.8535651199627438`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"2cc5e1c1-9034-4611-a724-8e4004aa266c"],

Cell[BoxData[
 RowBox[{"ArcTan", "[", "2", "]"}]], "Output",
 CellChangeTimes->{3.8535651206303167`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"6a04d90b-0f98-4896-916c-7af91d489700"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "=", 
     RowBox[{"N", "[", 
      FractionBox[
       RowBox[{"ArcTan", "[", "2", "]"}], "\[Degree]"], "]"}]}], "}"}], ",", 
   RowBox[{"Defer", "[", 
    RowBox[{"d", " ", "\[Degree]"}], "]"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[93]:=",ExpressionUUID->"e259621f-8d3d-4bff-aef0-87331bff477e"],

Cell[BoxData[
 RowBox[{"63.43494882292201`", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{3.853565125557765*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"f32970b4-f2f3-4314-9416-57d6d0883daf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"180", "-", "63.4"}], ")"}], "/", "2"}]], "Input",
 CellChangeTimes->{{3.853565136550589*^9, 3.853565157723507*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"b47a4e6e-7fac-484d-8957-917959fb269c"],

Cell[BoxData["58.3`"], "Output",
 CellChangeTimes->{{3.8535651413887167`*^9, 3.8535651580585327`*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"6bd33c3d-4f15-4098-ac9b-beb7064ae50e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tan", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Pi", "-", 
     RowBox[{"ArcTan", "[", "2", "]"}]}], ")"}], "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.85356517787062*^9, 3.853565191547172*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"f112d8f9-d182-4a36-80be-10f012667811"],

Cell[BoxData[
 RowBox[{"Tan", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", 
     RowBox[{"ArcTan", "[", "2", "]"}]}], ")"}]}], "]"}]], "Output",
 CellChangeTimes->{3.853565192022656*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"75224b58-1837-4565-89d4-9a5b784bea6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Tan", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{"ArcTan", "[", "2", "]"}]}], ")"}]}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[98]:=",ExpressionUUID->"39425774-2a2c-4784-a7df-bfd9a9930dc4"],

Cell[BoxData["1.618033988749895`"], "Output",
 CellChangeTimes->{3.853565194486281*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"417f20a8-f4a6-463c-8a18-1a9aac2710be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcTan", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m1", "-", "m2"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"m1", " ", "m2"}], " ", "+", " ", "1"}], ")"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m1", "->", "0"}], ",", " ", 
    RowBox[{"m2", "->", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.853565282612731*^9, 3.853565322555511*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"6d2b7e3c-eae4-4482-90ea-8f40764cf303"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"ArcTan", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.853565323794944*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"c1d89ba6-10df-4909-94fc-6dc9499a2abc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"ArcTan", "[", "2", "]"}]}], " ", "*", " ", 
   RowBox[{"180", " ", "/", " ", "Pi"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.853565352491824*^9, 3.8535653564672327`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[103]:=",ExpressionUUID->"66151284-b489-4a3c-a377-5ca607ccbe31"],

Cell[BoxData[
 RowBox[{"-", "63.43494882292201`"}]], "Output",
 CellChangeTimes->{{3.853565329447915*^9, 3.853565357086032*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"a24e24fc-04a6-422a-b6d1-1211b1e101ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AngleBisector", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.853565371726843*^9, 3.85356538129923*^9}, {
  3.85356544509122*^9, 3.85356545138735*^9}, {3.853565558371873*^9, 
  3.8535655837238703`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"d56acca1-f1c8-4923-8586-8e3c8bcb66d9"],

Cell[BoxData[
 RowBox[{"InfiniteLine", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox["1", 
       SqrtBox["5"]]}], ",", 
     FractionBox["2", 
      SqrtBox["5"]]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.853565574227173*^9, 3.853565584971693*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"155a58c0-a37c-4eb1-96cb-de1b4e19fee1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "N"}]], "Input",
 CellChangeTimes->{{3.853565592127119*^9, 3.853565593587603*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"22123064-9370-4217-aa2d-8eb66c0aa762"],

Cell[BoxData[
 RowBox[{"InfiniteLine", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5527864045000421`"}], ",", "0.8944271909999159`"}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.853565593962618*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"fa46e710-2931-4bdb-9702-cfe1eed720a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.5527864045000421`"}], ",", "0.8944271909999159`"}], "}"}],
   "/", "0.5527864045000421"}]], "Input",
 CellChangeTimes->{{3.853565606724449*^9, 3.8535656126544027`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"a9a189e4-3a1f-4e7e-ab14-0dcf25850ad5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.`"}], ",", "1.6180339887498947`"}], "}"}]], "Output",
 CellChangeTimes->{3.85356561330637*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"2f6b576e-5d38-4b5e-ac22-8d75d57e2da8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clutter section", "Subsection",
 CellChangeTimes->{{3.853905300452776*^9, 
  3.853905310410178*^9}},ExpressionUUID->"f3490915-2a59-4ab0-baee-\
f7ed9d7f7af5"],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{
   RowBox[{"+", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"vx", " ", "-", " ", "wp"}], "]"}]}], "/", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"vx", "+", "wp"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.85390531341917*^9, 3.853905335809169*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"1bfa7a60-2ecf-40d9-8de4-53007f63aee8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"PlusMinus", "[", 
   FractionBox[
    SqrtBox[
     RowBox[{"vx", "-", "wp"}]], 
    SqrtBox[
     RowBox[{"vx", "+", "wp"}]]], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.853905410102236*^9, 3.853905443972307*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"9e61b542-4984-4fb1-97bb-025d79beecc2"],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"\[PlusMinus]", 
   FractionBox[
    SqrtBox[
     RowBox[{"vx", "-", "wp"}]], 
    SqrtBox[
     RowBox[{"vx", "+", "wp"}]]]}], "]"}]], "Output",
 CellChangeTimes->{{3.85390541646871*^9, 3.853905444670898*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"25ab55ce-e766-4d9f-ba45-338aa2785fe6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tanh", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.85390534266674*^9, 3.8539053791827803`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"4d6bad30-733b-45da-b049-5562aff2fa98"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[PlusMinus]", 
      FractionBox[
       SqrtBox[
        RowBox[{"vx", "-", "wp"}]], 
       SqrtBox[
        RowBox[{"vx", "+", "wp"}]]]}], ")"}], "2"]}], 
  RowBox[{"1", "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[PlusMinus]", 
      FractionBox[
       SqrtBox[
        RowBox[{"vx", "-", "wp"}]], 
       SqrtBox[
        RowBox[{"vx", "+", "wp"}]]]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.853905350945053*^9, 3.853905379526032*^9}, {
  3.8539054390053368`*^9, 3.853905446444686*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"06d98558-09ef-4b40-8bae-b4fc58ac4ed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.853905383544928*^9, 3.853905385734593*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"646600b6-e630-49d0-9cac-468f9b1b6ade"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[PlusMinus]", 
      FractionBox[
       SqrtBox[
        RowBox[{"vx", "-", "wp"}]], 
       SqrtBox[
        RowBox[{"vx", "+", "wp"}]]]}], ")"}], "2"]}], 
  RowBox[{"1", "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[PlusMinus]", 
      FractionBox[
       SqrtBox[
        RowBox[{"vx", "-", "wp"}]], 
       SqrtBox[
        RowBox[{"vx", "+", "wp"}]]]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.853905386016528*^9, 3.853905448570998*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"c1e0bec6-868d-494c-a257-ebf770d3c956"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{954, 1153},
WindowMargins->{{4, Automatic}, {3, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.3 for Linux x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a1bbc703-609c-4185-8438-8c9d8c76590c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 808, 19, 78, "Input",ExpressionUUID->"fe32b68f-c555-401a-aec6-5e5b83e26357"],
Cell[1391, 43, 899, 25, 84, "Output",ExpressionUUID->"fb3710c4-5921-4ce9-b61d-1708367c8d52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2327, 73, 203, 3, 45, "Input",ExpressionUUID->"24503a30-58f3-43f0-ae73-cc1199392e60"],
Cell[2533, 78, 1188, 35, 93, "Output",ExpressionUUID->"44b4ff74-6986-4e0a-bf9d-7f3fdd4e15f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3758, 118, 327, 7, 45, "Input",ExpressionUUID->"18a7e7ef-62f2-4708-95b2-3f07d0638d1c"],
Cell[4088, 127, 1526, 45, 73, "Output",ExpressionUUID->"b5959570-58e0-4d3e-b55f-b5088cba4eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5651, 177, 461, 12, 87, "Input",ExpressionUUID->"43437e67-6416-4551-853f-9a3009c623af"],
Cell[6115, 191, 650, 20, 109, "Output",ExpressionUUID->"6e63c915-d3a7-4c6f-8974-781716f0d129"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6802, 216, 406, 11, 45, "Input",ExpressionUUID->"f876be9b-5132-437e-9b04-b1d19058f06f"],
Cell[7211, 229, 328, 9, 66, "Output",ExpressionUUID->"f9c7750b-eaee-4789-a1f2-05802be55c0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7576, 243, 311, 5, 45, "Input",ExpressionUUID->"cadbc6e8-d0f2-45d4-a26e-1ea29a56eb15"],
Cell[7890, 250, 555, 16, 67, "Output",ExpressionUUID->"8ffdd65a-23a6-4643-9375-1c11cfff8244"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8482, 271, 628, 18, 65, InheritFromParent,ExpressionUUID->"4d0ba729-4ea5-466d-89d3-a24a7861d43d"],
Cell[9113, 291, 714, 20, 114, "Output",ExpressionUUID->"ea6fa23a-fc53-4038-b77a-0e5876b516f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9864, 316, 719, 19, 87, "Input",ExpressionUUID->"71ad8cc6-067b-4725-9fe4-3b476e6f8da1"],
Cell[10586, 337, 2980, 91, 127, "Output",ExpressionUUID->"85b772a4-f66c-4c79-abcc-b22fcb7edc87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13603, 433, 204, 3, 45, "Input",ExpressionUUID->"e842674a-ffae-4e57-85ee-119b387d719c"],
Cell[13810, 438, 3131, 108, 334, "Output",ExpressionUUID->"e7e6198e-7adb-4e43-aa6e-8845b886c89d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16978, 551, 636, 19, 45, "Input",ExpressionUUID->"964f9686-9f0d-47ce-a87c-4a9f793c2481"],
Cell[17617, 572, 2644, 86, 278, "Output",ExpressionUUID->"23cad1e7-c2d2-461c-a7c9-690f2fd9540b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20298, 663, 229, 4, 45, "Input",ExpressionUUID->"4b6aef18-da1e-4d90-bc46-c8d5ae5c472b"],
Cell[20530, 669, 3047, 97, 139, "Output",ExpressionUUID->"910a25c2-9c48-4797-844a-0b8423e97afc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23614, 771, 201, 3, 45, "Input",ExpressionUUID->"a85acb9b-d404-4743-9451-3583ffb2e2bf"],
Cell[23818, 776, 1074, 31, 760, "Output",ExpressionUUID->"38220ff6-cd42-4636-a800-38294a31264b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24929, 812, 243, 4, 45, "Input",ExpressionUUID->"1c49f04b-a137-41c3-bc78-733d3142d4b3"],
Cell[25175, 818, 2472, 79, 143, "Output",ExpressionUUID->"05d427cb-3dec-4533-972d-f73b8e3032d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27684, 902, 374, 7, 45, "Input",ExpressionUUID->"5935140b-1b68-4d45-859a-e9ec8a6d2a32"],
Cell[28061, 911, 1443, 43, 68, "Output",ExpressionUUID->"bf9ac751-c4f3-45dc-83fd-0134dd600432"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29541, 959, 206, 3, 45, "Input",ExpressionUUID->"548648a8-bd95-43e1-b739-05aafa9d1cd3"],
Cell[29750, 964, 2080, 60, 212, "Output",ExpressionUUID->"108545ac-1d93-4048-95b1-266aaaa54638"]
}, Open  ]],
Cell[31845, 1027, 579, 14, 142, "Input",ExpressionUUID->"f62f993f-7940-469d-8710-aa31552ed307"],
Cell[CellGroupData[{
Cell[32449, 1045, 286, 5, 45, "Input",ExpressionUUID->"ba1c82e1-915c-4fe6-b0b0-d154978e2a9a"],
Cell[32738, 1052, 330, 5, 71, "Output",ExpressionUUID->"db88b0bf-4ac8-4e15-88ff-845c4b0ca1e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33105, 1062, 216, 4, 45, "Input",ExpressionUUID->"75193bd4-c9b0-4d7c-afcd-edf7da7d87b7"],
Cell[33324, 1068, 2603, 75, 73, "Output",ExpressionUUID->"e5758219-d50b-41eb-ad7b-aba8a32060fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35964, 1148, 284, 6, 45, "Input",ExpressionUUID->"b948a618-3046-459a-b084-a6c5cd2a1a7d"],
Cell[36251, 1156, 505, 13, 51, "Output",ExpressionUUID->"9f3aefa1-c841-47a8-a7be-31a3ed6a6c6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36793, 1174, 818, 21, 78, "Input",ExpressionUUID->"64006aca-f568-4fe4-b463-e9e923a73b0f"],
Cell[37614, 1197, 253, 4, 51, "Output",ExpressionUUID->"87c59df1-8510-471a-bcad-017bc4ab642b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37904, 1206, 980, 28, 110, "Input",ExpressionUUID->"c1930a6d-e6a2-4b95-8c39-c538b5297e10"],
Cell[38887, 1236, 506, 13, 51, "Output",ExpressionUUID->"509d35c2-8341-4c3e-a98a-d44515cac24d"],
Cell[39396, 1251, 1016, 30, 84, "Output",ExpressionUUID->"2ad355f2-bbe1-4c76-8ad5-3d40583d690b"],
Cell[40415, 1283, 1339, 38, 181, "Output",ExpressionUUID->"7ce66038-151a-4212-aff7-bfd2f21a7b10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41791, 1326, 184, 3, 45, "Input",ExpressionUUID->"4771cdec-613f-4513-9d61-bb64ab41a872"],
Cell[41978, 1331, 972, 30, 84, "Output",ExpressionUUID->"12a0f5d4-3cdf-438d-8c95-d6636fb03368"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42987, 1366, 573, 15, 45, "Input",ExpressionUUID->"f47de474-8562-453b-8c42-cad18d26755f"],
Cell[43563, 1383, 1358, 38, 181, "Output",ExpressionUUID->"d21496d4-4715-4a46-bfd4-097db9b1338f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44958, 1426, 206, 3, 45, "Input",ExpressionUUID->"2dff0e7c-0f38-40ba-b438-6f4771886976"],
Cell[45167, 1431, 13007, 370, 816, "Output",ExpressionUUID->"00398f9b-fcac-4e75-a1fb-6868c4b0d805"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58211, 1806, 243, 4, 45, "Input",ExpressionUUID->"9e154ef3-3089-4f13-bc9b-156d446890ff"],
Cell[58457, 1812, 1792, 52, 148, "Output",ExpressionUUID->"3f6a7718-bfb3-4095-9b78-018dec268eb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60286, 1869, 164, 3, 45, "Input",ExpressionUUID->"df9d7e1c-6371-4669-b998-bac162eb37b0"],
Cell[60453, 1874, 1296, 38, 113, "Output",ExpressionUUID->"37fe08e8-9a3c-44c2-ba80-659cdbde6170"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61786, 1917, 529, 14, 45, "Input",ExpressionUUID->"097f78d2-da04-49b8-956f-a4caf911b384"],
Cell[62318, 1933, 1386, 39, 181, "Output",ExpressionUUID->"05160d52-d70e-4ce3-a703-cee5f470ed8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63741, 1977, 337, 9, 45, "Input",ExpressionUUID->"8e06f77a-f4a1-4dd5-bad1-d3e46c9737e7"],
Cell[64081, 1988, 1344, 40, 68, "Output",ExpressionUUID->"4141f4a7-c7fd-48c6-8b1f-264a0f303736"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65462, 2033, 264, 6, 45, "Input",ExpressionUUID->"5bad9592-98d1-46a0-b393-8f682fbae538"],
Cell[65729, 2041, 814, 15, 66, "Message",ExpressionUUID->"baee2f71-18d0-4126-a5a0-9e0af9c2a80f"],
Cell[66546, 2058, 1843, 57, 107, "Output",ExpressionUUID->"27d585a5-df61-4388-98bc-81697e31a347"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68426, 2120, 172, 4, 45, "Input",ExpressionUUID->"181eb763-e8e9-4f06-abcf-54f6eb634ec5"],
Cell[68601, 2126, 1994, 61, 127, "Output",ExpressionUUID->"68c471dd-1ff7-4c56-933b-18867689adc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70632, 2192, 267, 5, 45, "Input",ExpressionUUID->"06ea864c-423e-492f-ac39-f50912a50ad7"],
Cell[70902, 2199, 5352, 162, 338, "Output",ExpressionUUID->"9ed4eb29-e586-4aeb-9ac0-03b58a80f464"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76291, 2366, 216, 4, 45, "Input",ExpressionUUID->"ee4d4562-5b7d-452f-90df-c095b02f5c80"],
Cell[76510, 2372, 3407, 108, 292, "Output",ExpressionUUID->"fece2095-5466-495f-853d-511c9f401da4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79954, 2485, 1816, 61, 164, "Input",ExpressionUUID->"3fbe4146-cb8d-4c44-bb4b-3d5e7a92c65e"],
Cell[81773, 2548, 2169, 70, 127, "Output",ExpressionUUID->"2efff665-8d7a-49af-bf53-229e47c0ff0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83979, 2623, 156, 3, 101, "Section",ExpressionUUID->"94ecfb5a-b019-4c30-94c5-67c3bd9b9456"],
Cell[CellGroupData[{
Cell[84160, 2630, 944, 26, 78, "Input",ExpressionUUID->"887ee126-ad3b-4776-b35e-336995625155"],
Cell[85107, 2658, 1791, 51, 116, "Output",ExpressionUUID->"1b875e1c-589a-40c4-ae39-ca0e1b65adcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86935, 2714, 206, 3, 45, "Input",ExpressionUUID->"09aefc1b-8a30-4fd5-a1d2-584309200a05"],
Cell[87144, 2719, 2066, 61, 93, "Output",ExpressionUUID->"6b1c33c0-be96-4294-8e2f-840b76911a9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89247, 2785, 285, 5, 45, "Input",ExpressionUUID->"c6a280f6-fd68-4c3a-af23-4df9ae0c4eb2"],
Cell[89535, 2792, 1934, 60, 138, "Output",ExpressionUUID->"0ff97f34-1e50-4d00-b8ff-d1e055ff59f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91506, 2857, 2273, 57, 430, "Input",ExpressionUUID->"429a283d-4292-4fe0-aeb3-51192f1a7808"],
Cell[93782, 2916, 2197, 46, 735, "Output",ExpressionUUID->"7c4b1d3e-9eca-40e9-b772-0d4f2b7ad72c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96016, 2967, 2848, 71, 366, "Input",ExpressionUUID->"49dc7b9c-7b31-4d2d-a824-6affd4246601"],
Cell[98867, 3040, 179823, 2915, 653, "Output",ExpressionUUID->"28bb79a0-7324-487a-ad1e-e6ff36b3d3bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278727, 5960, 159, 3, 81, "Subsection",ExpressionUUID->"164359c4-5745-4f26-875d-1fe3018e369e"],
Cell[CellGroupData[{
Cell[278911, 5967, 3033, 81, 430, "Input",ExpressionUUID->"e30cdf92-0119-446d-a20b-89340ee01e57"],
Cell[281947, 6050, 3191, 66, 508, "Output",ExpressionUUID->"220fdc73-1052-4f72-ac1e-375e03387a10"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[285187, 6122, 166, 3, 81, "Subsection",ExpressionUUID->"13d5f431-3ff0-4700-a08d-04159357cfd3"],
Cell[CellGroupData[{
Cell[285378, 6129, 384, 10, 45, "Input",ExpressionUUID->"e19c8d13-432d-4226-9036-fccc6e5533aa"],
Cell[285765, 6141, 178790, 2900, 674, "Output",ExpressionUUID->"aae6409f-2988-442d-91cb-d36e78a647bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464592, 9046, 206, 3, 45, "Input",ExpressionUUID->"2cc5e1c1-9034-4611-a724-8e4004aa266c"],
Cell[464801, 9051, 183, 3, 51, "Output",ExpressionUUID->"6a04d90b-0f98-4896-916c-7af91d489700"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465021, 9059, 397, 11, 63, "Input",ExpressionUUID->"e259621f-8d3d-4bff-aef0-87331bff477e"],
Cell[465421, 9072, 196, 3, 51, "Output",ExpressionUUID->"f32970b4-f2f3-4314-9416-57d6d0883daf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465654, 9080, 246, 5, 45, "Input",ExpressionUUID->"b47a4e6e-7fac-484d-8957-917959fb269c"],
Cell[465903, 9087, 181, 2, 51, "Output",ExpressionUUID->"6bd33c3d-4f15-4098-ac9b-beb7064ae50e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466121, 9094, 309, 7, 45, "Input",ExpressionUUID->"f112d8f9-d182-4a36-80be-10f012667811"],
Cell[466433, 9103, 312, 8, 68, "Output",ExpressionUUID->"75224b58-1837-4565-89d4-9a5b784bea6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466782, 9116, 323, 9, 66, "Input",ExpressionUUID->"39425774-2a2c-4784-a7df-bfd9a9930dc4"],
Cell[467108, 9127, 166, 2, 51, "Output",ExpressionUUID->"417f20a8-f4a6-463c-8a18-1a9aac2710be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467311, 9134, 505, 15, 45, "Input",ExpressionUUID->"6d2b7e3c-eae4-4482-90ea-8f40764cf303"],
Cell[467819, 9151, 203, 5, 51, "Output",ExpressionUUID->"c1d89ba6-10df-4909-94fc-6dc9499a2abc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468059, 9161, 350, 9, 45, "Input",ExpressionUUID->"66151284-b489-4a3c-a377-5ca607ccbe31"],
Cell[468412, 9172, 211, 4, 51, "Output",ExpressionUUID->"a24e24fc-04a6-422a-b6d1-1211b1e101ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468660, 9181, 544, 15, 45, "Input",ExpressionUUID->"d56acca1-f1c8-4923-8586-8e3c8bcb66d9"],
Cell[469207, 9198, 466, 15, 74, "Output",ExpressionUUID->"155a58c0-a37c-4eb1-96cb-de1b4e19fee1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469710, 9218, 199, 4, 45, "Input",ExpressionUUID->"22123064-9370-4217-aa2d-8eb66c0aa762"],
Cell[469912, 9224, 378, 11, 51, "Output",ExpressionUUID->"fa46e710-2931-4bdb-9702-cfe1eed720a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470327, 9240, 323, 8, 48, "Input",ExpressionUUID->"a9a189e4-3a1f-4e7e-ab14-0dcf25850ad5"],
Cell[470653, 9250, 236, 6, 51, "Output",ExpressionUUID->"2f6b576e-5d38-4b5e-ac22-8d75d57e2da8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[470938, 9262, 163, 3, 81, "Subsection",ExpressionUUID->"f3490915-2a59-4ab0-baee-f7ed9d7f7af5"],
Cell[471104, 9267, 377, 9, 45, "Input",ExpressionUUID->"1bfa7a60-2ecf-40d9-8de4-53007f63aee8"],
Cell[CellGroupData[{
Cell[471506, 9280, 343, 9, 87, InheritFromParent,ExpressionUUID->"9e61b542-4984-4fb1-97bb-025d79beecc2"],
Cell[471852, 9291, 336, 9, 81, "Output",ExpressionUUID->"25ab55ce-e766-4d9f-ba45-338aa2785fe6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472225, 9305, 203, 3, 45, "Input",ExpressionUUID->"4d6bad30-733b-45da-b049-5562aff2fa98"],
Cell[472431, 9310, 715, 23, 107, "Output",ExpressionUUID->"06d98558-09ef-4b40-8bae-b4fc58ac4ed6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473183, 9338, 206, 3, 45, "Input",ExpressionUUID->"646600b6-e630-49d0-9cac-468f9b1b6ade"],
Cell[473392, 9343, 662, 22, 107, "Output",ExpressionUUID->"c1e0bec6-868d-494c-a257-ebf770d3c956"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

